{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Collect/Components/ArtworkGrid/CollectArtworkFilterRefetch.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Collect/Components/ArtworkGrid/CollectArtworkFilterRefetch.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { createRefetchContainer, graphql } from \"react-relay\";\nimport { Responsive } from \"../../../../Utils/Responsive\";\nimport { CollectArtworkGridRefreshContainer as ArtworkFilter } from \"./CollectArtworkGrid\";\nexport var CollectArtworkFilterRefetch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CollectArtworkFilterRefetch, _Component);\n\n  function CollectArtworkFilterRefetch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectArtworkFilterRefetch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectArtworkFilterRefetch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isLoading\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"loadFilter\", function () {\n      if (!_this.isLoading) {\n        _this.setState({\n          isLoading: true\n        });\n\n        _this.isLoading = true;\n\n        _this.props.relay.refetch(_objectSpread({}, _this.props.filters), null, function (error) {\n          if (error) {\n            console.error(error);\n          }\n\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.isLoading = false;\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CollectArtworkFilterRefetch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      Object.keys(this.props.filters).forEach(function (key) {\n        if (key !== \"page\" && _this2.props.filters[key] !== prevProps.filters[key]) {\n          _this2.loadFilter();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var filters = this.props.filters;\n      var filtered_artworks = this.props.viewer.filtered_artworks;\n      return React.createElement(Responsive, null, function (_ref) {\n        var xs = _ref.xs,\n            sm = _ref.sm,\n            md = _ref.md;\n        return React.createElement(ArtworkFilter // TODO: Figure out why this isn't typed properly.\n        , {\n          filtered_artworks: filtered_artworks,\n          isLoading: _this3.isLoading,\n          columnCount: xs || sm || md ? 2 : 3,\n          filters: filters.state\n        });\n      });\n    }\n  }]);\n\n  return CollectArtworkFilterRefetch;\n}(Component);\nexport var CollectArtworkGridRefetchContainer = createRefetchContainer(CollectArtworkFilterRefetch, {\n  viewer: function viewer() {\n    var node = require(\"../../../../__generated__/CollectArtworkFilterRefetch_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"eade9ee97a257512fff92948a7600e3f\") {\n      console.error(\"The definition of 'CollectArtworkFilterRefetch_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/CollectArtworkFilterRefetch_viewer.graphql\");\n  }\n}, function () {\n  var node = require(\"../../../../__generated__/CollectArtworkFilterRefetchQuery.graphql\");\n\n  if (node.hash && node.hash !== \"3fef5d3d25dc923ce1f39b6a4c1c86be\") {\n    console.error(\"The definition of 'CollectArtworkFilterRefetchQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"../../../../__generated__/CollectArtworkFilterRefetchQuery.graphql\");\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Collect/Components/ArtworkGrid/CollectArtworkFilterRefetch.tsx"],"names":["React","Component","createRefetchContainer","graphql","Responsive","CollectArtworkGridRefreshContainer","ArtworkFilter","CollectArtworkFilterRefetch","isLoading","setState","props","relay","refetch","filters","error","console","prevProps","Object","keys","forEach","key","loadFilter","filtered_artworks","viewer","xs","sm","md","state","CollectArtworkGridRefetchContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,sBAAT,EAAiCC,OAAjC,QAAkE,aAAlE;AACA,SAASC,UAAT;AACA,SAASC,kCAAkC,IAAIC,aAA/C;AAQA,WAAaC,2BAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,wFAKsB,KALtB;;AAAA,yFAkBe,YAAM;AACjB,UAAI,CAAC,MAAKC,SAAV,EAAqB;AACnB,cAAKC,QAAL,CAAc;AACZD,UAAAA,SAAS,EAAE;AADC,SAAd;;AAIA,cAAKA,SAAL,GAAiB,IAAjB;;AAEA,cAAKE,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,mBAEO,MAAKF,KAAL,CAAWG,OAFlB,GAIE,IAJF,EAKE,UAAAC,KAAK,EAAI;AACP,cAAIA,KAAJ,EAAW;AACTC,YAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAED,gBAAKL,QAAL,CAAc;AACZD,YAAAA,SAAS,EAAE;AADC,WAAd;;AAIA,gBAAKA,SAAL,GAAiB,KAAjB;AACD,SAfH;AAiBD;AACF,KA5CH;;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAOqBQ,SAPrB,EAOgC;AAAA;;AAC5BC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKR,KAAL,CAAWG,OAAvB,EAAgCM,OAAhC,CAAwC,UAAAC,GAAG,EAAI;AAC7C,YACEA,GAAG,KAAK,MAAR,IACA,MAAI,CAACV,KAAL,CAAWG,OAAX,CAAmBO,GAAnB,MAA4BJ,SAAS,CAACH,OAAV,CAAkBO,GAAlB,CAF9B,EAGE;AACA,UAAA,MAAI,CAACC,UAAL;AACD;AACF,OAPD;AAQD;AAhBH;AAAA;AAAA,6BA8CW;AAAA;;AAAA,UACCR,OADD,GACa,KAAKH,KADlB,CACCG,OADD;AAAA,UAECS,iBAFD,GAEuB,KAAKZ,KAAL,CAAWa,MAFlC,CAECD,iBAFD;AAGP,aACE,oBAAC,UAAD,QACG;AAAA,YAAGE,EAAH,QAAGA,EAAH;AAAA,YAAOC,EAAP,QAAOA,EAAP;AAAA,YAAWC,EAAX,QAAWA,EAAX;AAAA,eACC,oBAAC,aAAD,CACE;AADF;AAEE,UAAA,iBAAiB,EAAEJ,iBAFrB;AAGE,UAAA,SAAS,EAAE,MAAI,CAACd,SAHlB;AAIE,UAAA,WAAW,EAAEgB,EAAE,IAAIC,EAAN,IAAYC,EAAZ,GAAiB,CAAjB,GAAqB,CAJpC;AAKE,UAAA,OAAO,EAAEb,OAAO,CAACc;AALnB,UADD;AAAA,OADH,CADF;AAaD;AA9DH;;AAAA;AAAA,EAAiD1B,SAAjD;AAiEA,OAAO,IAAM2B,kCAAkC,GAAG1B,sBAAsB,CACtEK,2BADsE,EAEtE;AACEgB,EAAAA,MAAM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CAFsE;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAjE","sourcesContent":["import { CollectArtworkFilterRefetch_viewer } from \"__generated__/CollectArtworkFilterRefetch_viewer.graphql\"\nimport React, { Component } from \"react\"\nimport { createRefetchContainer, graphql, RelayRefetchProp } from \"react-relay\"\nimport { Responsive } from \"Utils/Responsive\"\nimport { CollectArtworkGridRefreshContainer as ArtworkFilter } from \"./CollectArtworkGrid\"\n\ninterface CollectArtworkFilterRefetchProps {\n  filters: any\n  viewer: CollectArtworkFilterRefetch_viewer\n  relay: RelayRefetchProp\n}\n\nexport class CollectArtworkFilterRefetch extends Component<\n  CollectArtworkFilterRefetchProps\n> {\n  // FIXME: Figure out a pattern so that setState can replace this completely\n  // Used to prevent multiple in-flight requests\n  private isLoading = false\n\n  componentDidUpdate(prevProps) {\n    Object.keys(this.props.filters).forEach(key => {\n      if (\n        key !== \"page\" &&\n        this.props.filters[key] !== prevProps.filters[key]\n      ) {\n        this.loadFilter()\n      }\n    })\n  }\n\n  loadFilter = () => {\n    if (!this.isLoading) {\n      this.setState({\n        isLoading: true,\n      })\n\n      this.isLoading = true\n\n      this.props.relay.refetch(\n        {\n          ...this.props.filters,\n        },\n        null,\n        error => {\n          if (error) {\n            console.error(error)\n          }\n\n          this.setState({\n            isLoading: false,\n          })\n\n          this.isLoading = false\n        }\n      )\n    }\n  }\n\n  render() {\n    const { filters } = this.props\n    const { filtered_artworks } = this.props.viewer\n    return (\n      <Responsive>\n        {({ xs, sm, md }) => (\n          <ArtworkFilter\n            // TODO: Figure out why this isn't typed properly.\n            filtered_artworks={filtered_artworks as any}\n            isLoading={this.isLoading}\n            columnCount={xs || sm || md ? 2 : 3}\n            filters={filters.state}\n          />\n        )}\n      </Responsive>\n    )\n  }\n}\n\nexport const CollectArtworkGridRefetchContainer = createRefetchContainer(\n  CollectArtworkFilterRefetch,\n  {\n    viewer: graphql`\n      fragment CollectArtworkFilterRefetch_viewer on Viewer\n        @argumentDefinitions(\n          medium: { type: \"String\", defaultValue: \"*\" }\n          major_periods: { type: \"[String]\" }\n          partner_id: { type: \"ID\" }\n          for_sale: { type: \"Boolean\" }\n          at_auction: { type: \"Boolean\" }\n          acquireable: { type: \"Boolean\" }\n          inquireable_only: { type: \"Boolean\" }\n          sort: { type: \"String\", defaultValue: \"-partner_updated_at\" }\n          price_range: { type: \"String\" }\n        ) {\n        filtered_artworks: filter_artworks(\n          aggregations: [TOTAL]\n          medium: $medium\n          major_periods: $major_periods\n          partner_id: $partner_id\n          for_sale: $for_sale\n          at_auction: $at_auction\n          acquireable: $acquireable\n          inquireable_only: $inquireable_only\n          size: 0\n          sort: $sort\n          price_range: $price_range\n        ) {\n          ...CollectArtworkGrid_filtered_artworks\n        }\n      }\n    `,\n  },\n  graphql`\n    query CollectArtworkFilterRefetchQuery(\n      $medium: String\n      $major_periods: [String]\n      $partner_id: ID\n      $acquireable: Boolean\n      $at_auction: Boolean\n      $inquireable_only: Boolean\n      $for_sale: Boolean\n      $sort: String\n      $price_range: String\n    ) {\n      viewer {\n        ...CollectArtworkFilterRefetch_viewer\n          @arguments(\n            medium: $medium\n            major_periods: $major_periods\n            partner_id: $partner_id\n            for_sale: $for_sale\n            sort: $sort\n            at_auction: $at_auction\n            acquireable: $acquireable\n            inquireable_only: $inquireable_only\n            price_range: $price_range\n          )\n      }\n    }\n  `\n)\n"]}]}
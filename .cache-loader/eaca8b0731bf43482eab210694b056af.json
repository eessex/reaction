{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Buttons/Ghost.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Buttons/Ghost.tsx","mtime":1524585020000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Colors = _interopRequireDefault(require(\"../../Assets/Colors\"));\n\nvar _Default = _interopRequireWildcard(require(\"./Default\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GhostButton =\n/*#__PURE__*/\n(0, _styledComponents.default)(_Default.default).withConfig({\n  displayName: \"Ghost__GhostButton\",\n  componentId: \"s193nkgj-0\"\n})([\"background:white;color:\", \";border:1px solid \", \";&:hover:not(:disabled){background:white;color:\", \";}\"], function (props) {\n  if (props.disabled) return \"rgba(0,0,0,0.5)\";\n  if (props.state === _Default.ButtonState.Success) return _Colors.default.purpleRegular;\n  return \"black\";\n}, _Colors.default.grayRegular, _Colors.default.purpleRegular);\nvar _default = GhostButton;\nexports.default = _default;",{"version":3,"sources":["src/Components/Buttons/Ghost.tsx"],"names":["GhostButton","props","disabled","state","Success","purpleRegular","grayRegular"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA;AAAA;AAAc,gDAAd;AAAA;AAAA;AAAA,+GAEK,iBAAS;AAChB,MAAIC,MAAMC,QAAV,EAAoB,OAAO,iBAAP;AACpB,MAAID,MAAME,KAAN,KAAgB,qBAAYC,OAAhC,EAAyC,OAAO,gBAAOC,aAAd;AACzC,SAAO,OAAP;AACD,CANG,EAQgB,gBAAOC,WARvB,EAYO,gBAAOD,aAZd,CAAN;eAgBeL,W","file":"/Users/eve/development/reaction/src/Components/Buttons/Ghost.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import styled from \"styled-components\"\nimport colors from \"../../Assets/Colors\"\nimport Button, { ButtonState } from \"./Default\"\n\nconst GhostButton = styled(Button)`\n  background: white;\n  color: ${props => {\n    if (props.disabled) return \"rgba(0,0,0,0.5)\"\n    if (props.state === ButtonState.Success) return colors.purpleRegular\n    return \"black\"\n  }};\n\n  border: 1px solid ${colors.grayRegular};\n\n  &:hover:not(:disabled) {\n    background: white;\n    color: ${colors.purpleRegular};\n  }\n`\n\nexport default GhostButton\n"]}]}
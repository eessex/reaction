{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Publishing/Sections/Text.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Sections/Text.tsx","mtime":1527880680000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyledText = require(\"./StyledText\");\n\nvar _reactHtmlParser = _interopRequireWildcard(require(\"react-html-parser\"));\n\nvar _LinkWithToolTip = _interopRequireDefault(require(\"../ToolTip/LinkWithToolTip\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Text =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Text, _Component);\n\n  function Text() {\n    var _ref;\n\n    var _temp, _this;\n\n    _classCallCheck(this, Text);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = Text.__proto__ || Object.getPrototypeOf(Text)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        html: _this.props.html || \"\"\n      }\n    }), Object.defineProperty(_assertThisInitialized(_this), \"htmlMaybeWithContentEnd\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        var html = _this.state.html;\n        var isContentEnd = _this.props.isContentEnd; // Remove existing spans - TODO: Backfill out of articles\n\n        var cleanedHtml = html.replace(\"<span class='content-end'> </span>\", \"\");\n\n        if (isContentEnd) {\n          var doc = document.createElement(\"div\");\n          doc.innerHTML = cleanedHtml;\n          var paragraphs = doc.getElementsByTagName(\"P\");\n          var lastParagraph = paragraphs.length && paragraphs[paragraphs.length - 1];\n\n          if (lastParagraph) {\n            // insert content-end in last paragraph\n            lastParagraph.innerHTML = lastParagraph.innerHTML + \"<span class='content-end'> </span>\";\n          }\n\n          return doc.innerHTML;\n        }\n\n        return cleanedHtml;\n      }\n    }), Object.defineProperty(_assertThisInitialized(_this), \"shouldShowTooltipForURL\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(node) {\n        var urlBase = \"https://www.artsy.net/\";\n        var types = [\"artist/\", \"gene/\"];\n\n        for (var _i = 0; _i < types.length; _i++) {\n          var type = types[_i];\n\n          if ((0, _lodash.startsWith)(node.attribs.href, urlBase + type)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }), Object.defineProperty(_assertThisInitialized(_this), \"transformNode\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(node, index) {\n        if (node.name === \"p\") {\n          node.name = \"div\";\n          node.attribs.class = \"paragraph\";\n          return (0, _reactHtmlParser.convertNodeToElement)(node, index, _this.transformNode);\n        }\n\n        if (node.name === \"a\" && _this.shouldShowTooltipForURL(node)) {\n          var href = node.attribs.href;\n          var text = node.children[0] && node.children[0].data;\n          var _showToolTipMarketData = _this.props.showToolTipMarketData;\n\n          if (text) {\n            return _react.default.createElement(_LinkWithToolTip.default, {\n              key: href + index,\n              url: href,\n              showMarketData: _showToolTipMarketData\n            }, text);\n          }\n        }\n      }\n    }), _temp));\n  }\n\n  _createClass(Text, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var html = this.htmlMaybeWithContentEnd();\n      this.setState({\n        html: html\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          color = _props.color,\n          isContentStart = _props.isContentStart,\n          layout = _props.layout,\n          postscript = _props.postscript,\n          showToolTips = _props.showToolTips;\n      var html = this.state.html;\n      return _react.default.createElement(_StyledText.StyledText, {\n        className: \"article__text-section\",\n        color: color,\n        isContentStart: isContentStart,\n        layout: layout,\n        postscript: postscript,\n        showToolTips: showToolTips\n      }, html.length ? showToolTips ? _react.default.createElement(\"div\", null, (0, _reactHtmlParser.default)(html, {\n        transform: this.transformNode\n      })) : _react.default.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        }\n      }) : children);\n    }\n  }]);\n\n  return Text;\n}(_react.Component);\n\nexports.Text = Text;\nObject.defineProperty(Text, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    color: \"black\",\n    showToolTip: false,\n    showToolTipMarketData: false\n  }\n});",{"version":3,"sources":["src/Components/Publishing/Sections/Text.tsx"],"names":["Text","html","props","state","isContentEnd","cleanedHtml","replace","doc","document","createElement","innerHTML","paragraphs","getElementsByTagName","lastParagraph","length","urlBase","types","type","node","attribs","href","index","name","class","transformNode","shouldShowTooltipForURL","text","children","data","showToolTipMarketData","htmlMaybeWithContentEnd","setState","color","isContentStart","layout","postscript","showToolTips","transform","__html","showToolTip"],"mappings":"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","file":"/Users/eve/development/reaction/src/Components/Publishing/Sections/Text.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React, { Component } from \"react\"\nimport { ArticleLayout } from \"../Typings\"\nimport { StyledText } from \"./StyledText\"\nimport ReactHtmlParser, { convertNodeToElement } from \"react-html-parser\"\nimport LinkWithToolTip from \"../ToolTip/LinkWithToolTip\"\nimport { startsWith } from \"lodash\"\n\ninterface Props extends React.HTMLProps<HTMLDivElement> {\n  color?: string\n  html?: string\n  isContentEnd?: boolean\n  isContentStart?: boolean\n  layout: ArticleLayout\n  postscript?: boolean\n  showToolTips?: boolean\n  showToolTipMarketData?: boolean\n}\n\ninterface State {\n  html: string\n}\n\nexport class Text extends Component<Props, State> {\n  static defaultProps = {\n    color: \"black\",\n    showToolTip: false,\n    showToolTipMarketData: false,\n  }\n\n  state = {\n    html: this.props.html || \"\",\n  }\n\n  componentDidMount() {\n    const html = this.htmlMaybeWithContentEnd()\n\n    this.setState({ html })\n  }\n\n  htmlMaybeWithContentEnd = () => {\n    const { html } = this.state\n    const { isContentEnd } = this.props\n    // Remove existing spans - TODO: Backfill out of articles\n    const cleanedHtml = html.replace(\"<span class='content-end'> </span>\", \"\")\n\n    if (isContentEnd) {\n      const doc = document.createElement(\"div\")\n      doc.innerHTML = cleanedHtml\n\n      const paragraphs = doc.getElementsByTagName(\"P\")\n      const lastParagraph =\n        paragraphs.length && paragraphs[paragraphs.length - 1]\n\n      if (lastParagraph) {\n        // insert content-end in last paragraph\n        lastParagraph.innerHTML =\n          lastParagraph.innerHTML + \"<span class='content-end'> </span>\"\n      }\n      return doc.innerHTML\n    }\n    return cleanedHtml\n  }\n\n  shouldShowTooltipForURL = node => {\n    const urlBase = \"https://www.artsy.net/\"\n    const types = [\"artist/\", \"gene/\"]\n\n    for (const type of types) {\n      if (startsWith(node.attribs.href, urlBase + type)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  transformNode = (node, index) => {\n    if (node.name === \"p\") {\n      node.name = \"div\"\n      node.attribs.class = \"paragraph\"\n      return convertNodeToElement(node, index, this.transformNode)\n    }\n\n    if (node.name === \"a\" && this.shouldShowTooltipForURL(node)) {\n      const href = node.attribs.href\n      const text = node.children[0] && node.children[0].data\n      const { showToolTipMarketData } = this.props\n\n      if (text) {\n        return (\n          <LinkWithToolTip\n            key={href + index}\n            url={href}\n            showMarketData={showToolTipMarketData}\n          >\n            {text}\n          </LinkWithToolTip>\n        )\n      }\n    }\n  }\n\n  render() {\n    const {\n      children,\n      color,\n      isContentStart,\n      layout,\n      postscript,\n      showToolTips,\n    } = this.props\n    const { html } = this.state\n\n    return (\n      <StyledText\n        className=\"article__text-section\"\n        color={color}\n        isContentStart={isContentStart}\n        layout={layout}\n        postscript={postscript}\n        showToolTips={showToolTips}\n      >\n        {html.length ? (\n          showToolTips ? (\n            <div>\n              {ReactHtmlParser(html, { transform: this.transformNode })}\n            </div>\n          ) : (\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n          )\n        ) : (\n          children\n        )}\n      </StyledText>\n    )\n  }\n}\n"]}]}
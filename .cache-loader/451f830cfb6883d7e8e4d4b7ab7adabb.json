{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Utils/Responsive/Responsive.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Utils/Responsive/Responsive.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * TODO: This is the actual implementation which is generic and ready to be\n *       extracted.\n */\nimport React from \"react\";\nvar ResponsiveContext = React.createContext({});\n\nvar shallowEqual = function shallowEqual(a, b) {\n  for (var _key in a) {\n    if (a[_key] !== b[_key]) return false;\n  }\n\n  return true;\n};\n\nexport function createResponsiveComponents() {\n  var Consumer = ResponsiveContext.Consumer;\n  return {\n    Consumer: Consumer,\n    Provider:\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(ResponsiveProvider, _React$Component);\n\n      function ResponsiveProvider(props) {\n        var _this;\n\n        _classCallCheck(this, ResponsiveProvider);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ResponsiveProvider).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isSupportedEnvironment\", function () {\n          return typeof window !== \"undefined\" && typeof window.matchMedia !== \"undefined\";\n        });\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setupMatchers\", function (mediaQueries) {\n          return Object.keys(mediaQueries).reduce(function (matchers, key) {\n            return _objectSpread({}, matchers, _defineProperty({}, key, window.matchMedia(mediaQueries[key])));\n          }, {});\n        });\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"checkMatchers\", function (mediaQueryMatchers) {\n          return Object.keys(mediaQueryMatchers).reduce(function (matches, key) {\n            return _objectSpread({}, matches, _defineProperty({}, key, mediaQueryMatchers[key].matches));\n          }, {});\n        });\n\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"mediaQueryStatusChangedCallback\", function () {\n          var mediaQueryMatches = _this.checkMatchers(_this.state.mediaQueryMatchers);\n\n          _this.setState({\n            mediaQueryMatches: mediaQueryMatches\n          });\n        });\n\n        var _mediaQueryMatchers;\n\n        var _mediaQueryMatches;\n\n        if (_this.isSupportedEnvironment()) {\n          _mediaQueryMatchers = _this.setupMatchers(props.mediaQueries);\n          _mediaQueryMatches = _this.checkMatchers(_mediaQueryMatchers);\n        } else {\n          _mediaQueryMatches = Object.keys(props.mediaQueries).reduce(function (matches, key) {\n            return _objectSpread({}, matches, _defineProperty({}, key, !!props.initialMatchingMediaQueries && props.initialMatchingMediaQueries.includes(key)));\n          }, {});\n        }\n\n        _this.state = {\n          mediaQueryMatchers: _mediaQueryMatchers,\n          mediaQueryMatches: _mediaQueryMatches\n        };\n        return _this;\n      }\n\n      _createClass(ResponsiveProvider, [{\n        key: \"componentDidMount\",\n        // Lifecycle methods\n        value: function componentDidMount() {\n          if (this.state.mediaQueryMatchers) {\n            var mediaQueryStatusChangedCallback = this.mediaQueryStatusChangedCallback;\n            Object.values(this.state.mediaQueryMatchers).forEach(function (matcher) {\n              matcher.addListener(mediaQueryStatusChangedCallback);\n            });\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this.state.mediaQueryMatchers) {\n            var mediaQueryStatusChangedCallback = this.mediaQueryStatusChangedCallback;\n            Object.values(this.state.mediaQueryMatchers).forEach(function (matcher) {\n              return matcher.removeListener(mediaQueryStatusChangedCallback);\n            });\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (!this.state.mediaQueryMatchers) return false;\n          if (nextProps.children !== this.props.children) return true;\n\n          if (shallowEqual(this.state.mediaQueryMatches, nextState.mediaQueryMatches)) {\n            return false;\n          }\n\n          return true;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(ResponsiveContext.Provider, {\n            value: this.state.mediaQueryMatches\n          }, this.props.children);\n        }\n      }]);\n\n      return ResponsiveProvider;\n    }(React.Component)\n  };\n}",{"version":3,"sources":["/Users/eve/development/reaction/src/Utils/Responsive/Responsive.tsx"],"names":["React","ResponsiveContext","createContext","shallowEqual","a","b","key","createResponsiveComponents","Consumer","Provider","props","window","matchMedia","mediaQueries","Object","keys","reduce","matchers","mediaQueryMatchers","matches","mediaQueryMatches","checkMatchers","state","setState","isSupportedEnvironment","setupMatchers","initialMatchingMediaQueries","includes","mediaQueryStatusChangedCallback","values","forEach","matcher","addListener","removeListener","nextProps","nextState","children","Component"],"mappings":"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","sourcesContent":["/**\n * TODO: This is the actual implementation which is generic and ready to be\n *       extracted.\n */\n\nimport React from \"react\"\n\nconst ResponsiveContext = React.createContext({})\n\nexport type MediaQueries<M extends string = string> = { [K in M]: string }\nexport interface MediaQueryMatchers {\n  [key: string]: MediaQueryList\n}\nexport type MediaQueryMatches<M extends string = string> = { [K in M]: boolean }\n\nexport interface ResponsiveProviderProps<M extends string> {\n  mediaQueries: MediaQueries<M>\n  initialMatchingMediaQueries?: M[]\n  children: React.ReactNode\n}\n\nexport interface ResponsiveProviderState {\n  mediaQueryMatchers?: MediaQueryMatchers\n  mediaQueryMatches: MediaQueryMatches\n}\n\nconst shallowEqual = (a: MediaQueryMatches, b: MediaQueryMatches) => {\n  for (const key in a) {\n    if (a[key] !== b[key]) return false\n  }\n  return true\n}\n\nexport function createResponsiveComponents<M extends string>() {\n  const Consumer: React.ComponentType<\n    React.ConsumerProps<MediaQueryMatches<M>>\n  > =\n    ResponsiveContext.Consumer\n  return {\n    Consumer,\n    Provider: class ResponsiveProvider extends React.Component<\n      ResponsiveProviderProps<M>,\n      ResponsiveProviderState\n    > {\n      constructor(props: ResponsiveProviderProps<M>) {\n        super(props)\n        let mediaQueryMatchers: MediaQueryMatchers\n        let mediaQueryMatches: MediaQueryMatches\n\n        if (this.isSupportedEnvironment()) {\n          mediaQueryMatchers = this.setupMatchers(props.mediaQueries)\n          mediaQueryMatches = this.checkMatchers(mediaQueryMatchers)\n        } else {\n          mediaQueryMatches = Object.keys(props.mediaQueries).reduce(\n            (matches, key: M) => ({\n              ...matches,\n              [key]:\n                !!props.initialMatchingMediaQueries &&\n                props.initialMatchingMediaQueries.includes(key),\n            }),\n            {}\n          )\n        }\n\n        this.state = {\n          mediaQueryMatchers,\n          mediaQueryMatches,\n        }\n      }\n\n      isSupportedEnvironment = () => {\n        return (\n          typeof window !== \"undefined\" &&\n          typeof window.matchMedia !== \"undefined\"\n        )\n      }\n\n      /**\n       * Create an array of media matchers that can validate each media query\n       */\n      setupMatchers = (mediaQueries: MediaQueries): MediaQueryMatchers => {\n        return Object.keys(mediaQueries).reduce(\n          (matchers, key) => ({\n            ...matchers,\n            [key]: window.matchMedia(mediaQueries[key]),\n          }),\n          {}\n        )\n      }\n\n      /**\n       * Uses the matchers to build a map of the states of each media query\n       */\n      checkMatchers = (\n        mediaQueryMatchers: MediaQueryMatchers\n      ): MediaQueryMatches => {\n        return Object.keys(mediaQueryMatchers).reduce(\n          (matches, key) => ({\n            ...matches,\n            [key]: mediaQueryMatchers[key].matches,\n          }),\n          {}\n        )\n      }\n\n      /**\n       * The function that will be called any time a media query status changes\n       */\n      mediaQueryStatusChangedCallback = () => {\n        const mediaQueryMatches = this.checkMatchers(\n          this.state.mediaQueryMatchers\n        )\n        this.setState({\n          mediaQueryMatches,\n        })\n      }\n\n      // Lifecycle methods\n\n      componentDidMount() {\n        if (this.state.mediaQueryMatchers) {\n          const { mediaQueryStatusChangedCallback } = this\n          Object.values(this.state.mediaQueryMatchers).forEach(matcher => {\n            matcher.addListener(mediaQueryStatusChangedCallback)\n          })\n        }\n      }\n\n      componentWillUnmount() {\n        if (this.state.mediaQueryMatchers) {\n          const { mediaQueryStatusChangedCallback } = this\n          Object.values(this.state.mediaQueryMatchers).forEach(matcher =>\n            matcher.removeListener(mediaQueryStatusChangedCallback)\n          )\n        }\n      }\n\n      shouldComponentUpdate(\n        nextProps: Readonly<ResponsiveProviderProps<M>>,\n        nextState: Readonly<ResponsiveProviderState>\n      ) {\n        if (!this.state.mediaQueryMatchers) return false\n        if (nextProps.children !== this.props.children) return true\n        if (\n          shallowEqual(\n            this.state.mediaQueryMatches,\n            nextState.mediaQueryMatches\n          )\n        ) {\n          return false\n        }\n        return true\n      }\n\n      render() {\n        return (\n          <ResponsiveContext.Provider value={this.state.mediaQueryMatches}>\n            {this.props.children}\n          </ResponsiveContext.Provider>\n        )\n      }\n    },\n  }\n}\n"]}]}
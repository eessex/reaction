{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Order/routes.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Order/routes.tsx","mtime":1537797361000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Redirect } from \"found\";\nimport React from \"react\";\nimport { graphql } from \"react-relay\";\nimport { OrderApp } from \"./OrderApp\"; // @ts-ignore\n\nimport { PaymentFragmentContainer as PaymentRoute } from \"./Routes/Payment\"; // @ts-ignore\n\nimport { ReviewFragmentContainer as ReviewRoute } from \"./Routes/Review\"; // @ts-ignore\n\nimport { ShippingFragmentContainer as ShippingRoute } from \"./Routes/Shipping\"; // @ts-ignore\n\nimport { StatusFragmentContainer as StatusRoute } from \"./Routes/Status\"; // @ts-ignore\n\nvar LEAVE_MESSAGING = \"Are you sure you want to refresh? Your changes will not be saved.\";\n\nvar confirmRouteExit = function confirmRouteExit(newLocation, oldLocation, router) {\n  // Refresh -- On refresh newLocation is null\n  if (!newLocation || newLocation.pathname === oldLocation.pathname) {\n    // Most browsers will ignore this and supply their own messaging for refresh\n    return LEAVE_MESSAGING;\n  } // Attempting to navigate to another route in the orders app\n\n\n  var match = router.matcher.match(newLocation);\n\n  if (match) {\n    var matchedRoutes = router.matcher.getRoutes(match);\n\n    if (matchedRoutes && matchedRoutes[0].Component === OrderApp) {\n      return true;\n    }\n  }\n\n  return LEAVE_MESSAGING;\n};\n\nexport var routes = [{\n  path: \"/order2/:orderID\",\n  Component: OrderApp,\n  query: function query() {\n    var node = require(\"../../__generated__/routes_OrderQuery.graphql\");\n\n    if (node.hash && node.hash !== \"6c572cf997bad6b3db2c0ed5ee00f090\") {\n      console.error(\"The definition of 'routes_OrderQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/routes_OrderQuery.graphql\");\n  },\n  children: [{\n    path: \"shipping\",\n    Component: ShippingRoute,\n    onTransition: confirmRouteExit,\n    query: function query() {\n      var node = require(\"../../__generated__/routes_ShippingQuery.graphql\");\n\n      if (node.hash && node.hash !== \"a9eb2bc4e3a8c7df4af5c9dd68927880\") {\n        console.error(\"The definition of 'routes_ShippingQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../__generated__/routes_ShippingQuery.graphql\");\n    }\n  }, {\n    path: \"payment\",\n    Component: PaymentRoute,\n    onTransition: confirmRouteExit,\n    query: function query() {\n      var node = require(\"../../__generated__/routes_PaymentQuery.graphql\");\n\n      if (node.hash && node.hash !== \"4ecce8cd32d5a28bb2c0167757eac4fd\") {\n        console.error(\"The definition of 'routes_PaymentQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../__generated__/routes_PaymentQuery.graphql\");\n    }\n  }, {\n    path: \"review\",\n    Component: ReviewRoute,\n    onTransition: confirmRouteExit,\n    query: function query() {\n      var node = require(\"../../__generated__/routes_ReviewQuery.graphql\");\n\n      if (node.hash && node.hash !== \"27ff94ce1a13a2d866e2f783949ba274\") {\n        console.error(\"The definition of 'routes_ReviewQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../__generated__/routes_ReviewQuery.graphql\");\n    }\n  }, {\n    path: \"status\",\n    Component: StatusRoute,\n    query: function query() {\n      var node = require(\"../../__generated__/routes_StatusQuery.graphql\");\n\n      if (node.hash && node.hash !== \"8f8410086ebd51a9ba12556cc36730ed\") {\n        console.error(\"The definition of 'routes_StatusQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../__generated__/routes_StatusQuery.graphql\");\n    }\n  }, // For now, redirect the empty route to the shipping page\n  new Redirect({\n    from: \"/\",\n    to: \"/order2/:orderID/shipping\"\n  }), {\n    path: \"*\",\n    Component: function Component(props) {\n      console.warn(\"Route not found: \", props);\n      return React.createElement(\"div\", null, \"Page not found\");\n    }\n  }]\n}];",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Order/routes.tsx"],"names":["Redirect","React","graphql","OrderApp","PaymentFragmentContainer","PaymentRoute","ReviewFragmentContainer","ReviewRoute","ShippingFragmentContainer","ShippingRoute","StatusFragmentContainer","StatusRoute","LEAVE_MESSAGING","confirmRouteExit","newLocation","oldLocation","router","pathname","match","matcher","matchedRoutes","getRoutes","Component","routes","path","query","children","onTransition","from","to","props","console","warn"],"mappings":"AAAA,SAAmBA,QAAnB,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,qB,CAEA;;AACA,SAASC,wBAAwB,IAAIC,YAArC,2B,CACA;;AACA,SAASC,uBAAuB,IAAIC,WAApC,0B,CACA;;AACA,SAASC,yBAAyB,IAAIC,aAAtC,4B,CACA;;AACA,SAASC,uBAAuB,IAAIC,WAApC,0B,CAEA;;AAYA,IAAMC,eAAe,GACnB,mEADF;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBC,WADuB,EAEvBC,WAFuB,EAGvBC,MAHuB,EAIpB;AACH;AACA,MAAI,CAACF,WAAD,IAAgBA,WAAW,CAACG,QAAZ,KAAyBF,WAAW,CAACE,QAAzD,EAAmE;AACjE;AACA,WAAOL,eAAP;AACD,GALE,CAOH;;;AACA,MAAMM,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeD,KAAf,CAAqBJ,WAArB,CAAd;;AACA,MAAII,KAAJ,EAAW;AACT,QAAME,aAAmC,GAAGJ,MAAM,CAACG,OAAP,CAAeE,SAAf,CAAyBH,KAAzB,CAA5C;;AACA,QAAIE,aAAa,IAAIA,aAAa,CAAC,CAAD,CAAb,CAAiBE,SAAjB,KAA+BnB,QAApD,EAA8D;AAC5D,aAAO,IAAP;AACD;AACF;;AAED,SAAOS,eAAP;AACD,CArBD;;AAuBA,OAAO,IAAMW,MAAM,GAAG,CACpB;AACEC,EAAAA,IAAI,EAAE,kBADR;AAEEF,EAAAA,SAAS,EAAEnB,QAFb;AAGEsB,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,GAHP;AAaEC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,IAAI,EAAE,UADR;AAEEF,IAAAA,SAAS,EAAEb,aAFb;AAGEkB,IAAAA,YAAY,EAAEd,gBAHhB;AAIEY,IAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJP,GADQ,EAaR;AACED,IAAAA,IAAI,EAAE,SADR;AAEEF,IAAAA,SAAS,EAAEjB,YAFb;AAGEsB,IAAAA,YAAY,EAAEd,gBAHhB;AAIEY,IAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJP,GAbQ,EAyBR;AACED,IAAAA,IAAI,EAAE,QADR;AAEEF,IAAAA,SAAS,EAAEf,WAFb;AAGEoB,IAAAA,YAAY,EAAEd,gBAHhB;AAIEY,IAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJP,GAzBQ,EAqCR;AACED,IAAAA,IAAI,EAAE,QADR;AAEEF,IAAAA,SAAS,EAAEX,WAFb;AAGEc,IAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAHP,GArCQ,EAgDR;AACA,MAAIzB,QAAJ,CAAa;AACX4B,IAAAA,IAAI,EAAE,GADK;AAEXC,IAAAA,EAAE,EAAE;AAFO,GAAb,CAjDQ,EAqDR;AACEL,IAAAA,IAAI,EAAE,GADR;AAEEF,IAAAA,SAAS,EAAE,mBAAAQ,KAAK,EAAI;AAClBC,MAAAA,OAAO,CAACC,IAAR,CAAa,mBAAb,EAAkCF,KAAlC;AACA,aAAO,kDAAP;AACD;AALH,GArDQ;AAbZ,CADoB,CAAf","sourcesContent":["import { Location, Redirect, RouteConfig, Router } from \"found\"\nimport React from \"react\"\nimport { graphql } from \"react-relay\"\nimport { OrderApp } from \"./OrderApp\"\n\n// @ts-ignore\nimport { PaymentFragmentContainer as PaymentRoute } from \"Apps/Order/Routes/Payment\"\n// @ts-ignore\nimport { ReviewFragmentContainer as ReviewRoute } from \"Apps/Order/Routes/Review\"\n// @ts-ignore\nimport { ShippingFragmentContainer as ShippingRoute } from \"Apps/Order/Routes/Shipping\"\n// @ts-ignore\nimport { StatusFragmentContainer as StatusRoute } from \"Apps/Order/Routes/Status\"\n\n// @ts-ignore\nimport { ComponentClass, StatelessComponent } from \"react\"\n\n// @ts-ignore\nimport { PaymentProps } from \"./Routes/Payment\"\n// @ts-ignore\nimport { ReviewProps } from \"./Routes/Review\"\n// @ts-ignore\nimport { ShippingProps } from \"./Routes/Shipping\"\n// @ts-ignore\nimport { StatusProps } from \"./Routes/Status\"\n\nconst LEAVE_MESSAGING =\n  \"Are you sure you want to refresh? Your changes will not be saved.\"\n\nconst confirmRouteExit = (\n  newLocation: Location,\n  oldLocation: Location,\n  router: Router\n) => {\n  // Refresh -- On refresh newLocation is null\n  if (!newLocation || newLocation.pathname === oldLocation.pathname) {\n    // Most browsers will ignore this and supply their own messaging for refresh\n    return LEAVE_MESSAGING\n  }\n\n  // Attempting to navigate to another route in the orders app\n  const match = router.matcher.match(newLocation)\n  if (match) {\n    const matchedRoutes: RouteConfig[] | null = router.matcher.getRoutes(match)\n    if (matchedRoutes && matchedRoutes[0].Component === OrderApp) {\n      return true\n    }\n  }\n\n  return LEAVE_MESSAGING\n}\n\nexport const routes = [\n  {\n    path: \"/order2/:orderID\",\n    Component: OrderApp,\n    query: graphql`\n      query routes_OrderQuery($orderID: String!) {\n        me {\n          name\n        }\n        order(id: $orderID) {\n          state\n        }\n      }\n    `,\n    children: [\n      {\n        path: \"shipping\",\n        Component: ShippingRoute,\n        onTransition: confirmRouteExit,\n        query: graphql`\n          query routes_ShippingQuery($orderID: String!) {\n            order(id: $orderID) {\n              ...Shipping_order\n            }\n          }\n        `,\n      },\n      {\n        path: \"payment\",\n        Component: PaymentRoute,\n        onTransition: confirmRouteExit,\n        query: graphql`\n          query routes_PaymentQuery($orderID: String!) {\n            order(id: $orderID) {\n              ...Payment_order\n            }\n          }\n        `,\n      },\n      {\n        path: \"review\",\n        Component: ReviewRoute,\n        onTransition: confirmRouteExit,\n        query: graphql`\n          query routes_ReviewQuery($orderID: String!) {\n            order(id: $orderID) {\n              ...Review_order\n            }\n          }\n        `,\n      },\n      {\n        path: \"status\",\n        Component: StatusRoute,\n        query: graphql`\n          query routes_StatusQuery($orderID: String!) {\n            order(id: $orderID) {\n              ...Status_order\n            }\n          }\n        `,\n      },\n      // For now, redirect the empty route to the shipping page\n      new Redirect({\n        from: \"/\",\n        to: \"/order2/:orderID/shipping\",\n      }),\n      {\n        path: \"*\",\n        Component: props => {\n          console.warn(\"Route not found: \", props)\n          return <div>Page not found</div>\n        },\n      },\n    ],\n  },\n]\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Onboarding/Steps/Budget.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Onboarding/Steps/Budget.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _graphql;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    margin-bottom: 20px;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from \"react\";\nimport { commitMutation, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nimport { withContext } from \"../../../Artsy/SystemContext\";\nimport Colors from \"../../../Assets/Colors\";\nimport { MultiButtonState } from \"../../Buttons/MultiStateButton\";\nimport { media } from \"../../Helpers\";\nimport SelectableToggle from \"../SelectableToggle\";\nimport { Layout } from \"./Layout\";\nvar OptionsContainer = styled.div.withConfig({\n  displayName: \"Budget__OptionsContainer\",\n  componentId: \"fej4mt-0\"\n})([\"width:450px;margin:0 auto 100px;&:last-child{border-bottom:1px solid \", \";}\", \";\"], Colors.grayRegular, media.sm(_templateObject()));\nexport var BudgetComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BudgetComponent, _React$Component);\n\n  function BudgetComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BudgetComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BudgetComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"options\", {\n      \"UNDER $500\": 500,\n      \"UNDER $2,500\": 2500,\n      \"UNDER $5,000\": 5000,\n      \"UNDER $10,000\": 10000,\n      \"UNDER $25,000\": 25000,\n      \"UNDER $50,000\": 50000,\n      \"NO BUDGET IN MIND\": 1000000000000\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      selection: null\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOptionSelected\", function (index) {\n      var selection = {\n        selection: Object.values(_this.options)[index]\n      };\n\n      _this.setState(selection);\n    });\n\n    return _this;\n  }\n\n  _createClass(BudgetComponent, [{\n    key: \"submit\",\n    value: function submit() {\n      var priceRangeMax = this.state.selection;\n      commitMutation(this.props.relayEnvironment, {\n        mutation: _graphql || (_graphql = function _graphql() {\n          var node = require(\"../../../__generated__/BudgetUpdateMyUserProfileMutation.graphql\");\n\n          if (node.hash && node.hash !== \"3add187e4e8fcf9910294672b24f47e7\") {\n            console.error(\"The definition of 'BudgetUpdateMyUserProfileMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../../__generated__/BudgetUpdateMyUserProfileMutation.graphql\");\n        }),\n        variables: {\n          input: {\n            price_range_min: -1,\n            price_range_max: priceRangeMax\n          }\n        }\n      });\n      this.props.onNextButtonPressed();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options = Object.keys(this.options).map(function (text, index) {\n        return React.createElement(SelectableToggle, {\n          key: index,\n          text: text,\n          onSelect: _this2.onOptionSelected.bind(_this2, index),\n          selected: _this2.state.selection === _this2.options[text]\n        });\n      });\n      return React.createElement(Layout, {\n        title: \"What\\u2019s your maximum artwork budget?\",\n        subtitle: \"Select one\",\n        onNextButtonPressed: this.state.selection && this.submit.bind(this),\n        isLastStep: true,\n        buttonState: this.state.selection ? MultiButtonState.Highlighted : MultiButtonState.Default\n      }, React.createElement(OptionsContainer, null, options));\n    }\n  }]);\n\n  return BudgetComponent;\n}(React.Component);\n\n_defineProperty(BudgetComponent, \"slug\", \"budget\");\n\nvar Budget = withContext(BudgetComponent); // tslint:disable:no-string-literal\n\nBudget[\"slug\"] = BudgetComponent.slug;\nexport default Budget;",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Onboarding/Steps/Budget.tsx"],"names":["React","commitMutation","graphql","styled","withContext","Colors","MultiButtonState","media","SelectableToggle","Layout","OptionsContainer","div","grayRegular","sm","BudgetComponent","selection","index","Object","values","options","setState","priceRangeMax","state","props","relayEnvironment","mutation","variables","input","price_range_min","price_range_max","onNextButtonPressed","keys","map","text","onOptionSelected","bind","submit","Highlighted","Default","Component","Budget","slug"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { commitMutation, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\n\nimport { BudgetUpdateMyUserProfileMutation } from \"__generated__/BudgetUpdateMyUserProfileMutation.graphql\"\nimport { ContextProps, withContext } from \"Artsy/SystemContext\"\nimport Colors from \"../../../Assets/Colors\"\nimport { MultiButtonState } from \"../../Buttons/MultiStateButton\"\nimport { media } from \"../../Helpers\"\nimport SelectableToggle from \"../SelectableToggle\"\nimport { StepProps } from \"../Types\"\nimport { Layout } from \"./Layout\"\n\nconst OptionsContainer = styled.div`\n  width: 450px;\n  margin: 0 auto 100px;\n  &:last-child {\n    border-bottom: 1px solid ${Colors.grayRegular};\n  }\n  ${media.sm`\n    width: 100%;\n    margin-bottom: 20px;\n  `};\n`\n\ninterface State {\n  selection: number | null\n}\n\nexport class BudgetComponent extends React.Component<\n  StepProps & ContextProps,\n  State\n> {\n  static slug: \"budget\" = \"budget\"\n\n  options = {\n    \"UNDER $500\": 500,\n    \"UNDER $2,500\": 2500,\n    \"UNDER $5,000\": 5000,\n    \"UNDER $10,000\": 10000,\n    \"UNDER $25,000\": 25000,\n    \"UNDER $50,000\": 50000,\n    \"NO BUDGET IN MIND\": 1000000000000,\n  }\n\n  state = {\n    selection: null,\n  }\n\n  onOptionSelected = (index: number) => {\n    const selection = { selection: Object.values(this.options)[index] }\n    this.setState(selection)\n  }\n\n  submit() {\n    const priceRangeMax = this.state.selection\n\n    commitMutation<BudgetUpdateMyUserProfileMutation>(\n      this.props.relayEnvironment,\n      {\n        mutation: graphql`\n          mutation BudgetUpdateMyUserProfileMutation(\n            $input: UpdateMyProfileInput!\n          ) {\n            updateMyUserProfile(input: $input) {\n              user {\n                name\n              }\n            }\n          }\n        `,\n        variables: {\n          input: {\n            price_range_min: -1,\n            price_range_max: priceRangeMax,\n          },\n        },\n      }\n    )\n\n    this.props.onNextButtonPressed()\n  }\n\n  render() {\n    const options = Object.keys(this.options).map((text, index) => (\n      <SelectableToggle\n        key={index}\n        text={text}\n        onSelect={this.onOptionSelected.bind(this, index)}\n        selected={this.state.selection === this.options[text]}\n      />\n    ))\n\n    return (\n      <Layout\n        title=\"What’s your maximum artwork budget?\"\n        subtitle=\"Select one\"\n        onNextButtonPressed={this.state.selection && this.submit.bind(this)}\n        isLastStep\n        buttonState={\n          this.state.selection\n            ? MultiButtonState.Highlighted\n            : MultiButtonState.Default\n        }\n      >\n        <OptionsContainer>{options}</OptionsContainer>\n      </Layout>\n    )\n  }\n}\n\nconst Budget = withContext(BudgetComponent)\n// tslint:disable:no-string-literal\nBudget[\"slug\"] = BudgetComponent.slug\n\nexport default Budget\n"]}]}
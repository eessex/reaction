{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Authentication/Desktop/ModalManager.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/ModalManager.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { DesktopModal } from \"./Components/DesktopModal\";\nimport { FormSwitcher } from \"../FormSwitcher\";\nimport { handleSubmit as defaultHandleSubmit } from \"../helpers\";\nimport { ModalType } from \"../Types\";\nexport var ModalManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalManager, _Component);\n\n  function ModalManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      currentType: null,\n      options: {\n        copy: null,\n        redirectTo: \"/\"\n      },\n      switchedForms: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"openModal\", function (options) {\n      var mode = options.mode;\n\n      _this.setState({\n        currentType: mode,\n        options: options\n      });\n\n      document.body.style.overflowY = \"hidden\";\n      _this.props.onModalOpen && _this.props.onModalOpen();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeModal\", function () {\n      _this.setState({\n        currentType: null,\n        options: {}\n      });\n\n      document.body.style.overflowY = \"auto\";\n      _this.props.onModalClose && _this.props.onModalClose();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTypeChange\", function (type) {\n      var newOptions = _objectSpread({}, _this.state.options, {\n        mode: type\n      });\n\n      _this.setState({\n        currentType: type,\n        options: newOptions,\n        switchedForms: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setError\", function (err) {\n      return _this.setState({\n        error: err\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getSubtitle\", function () {\n      var _this$state = _this.state,\n          options = _this$state.options,\n          switchedForms = _this$state.switchedForms,\n          currentType = _this$state.currentType;\n\n      if (switchedForms) {\n        switch (currentType) {\n          case ModalType.login:\n            return \"Log in\";\n\n          case ModalType.signup:\n            return \"Sign up\";\n\n          case ModalType.forgot:\n            return \"Forgot Password\";\n\n          default:\n            return \"The art world online\";\n        }\n      } else {\n        return options.copy || \"The art world online\";\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ModalManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          blurContainerSelector = _this$props.blurContainerSelector,\n          csrf = _this$props.csrf,\n          submitUrls = _this$props.submitUrls,\n          redirectTo = _this$props.redirectTo;\n      var _this$state2 = this.state,\n          currentType = _this$state2.currentType,\n          error = _this$state2.error,\n          options = _this$state2.options;\n      var handleSubmit = !!this.props.handleSubmit ? this.props.handleSubmit.bind(this, currentType, options) : defaultHandleSubmit(submitUrls[currentType], csrf, redirectTo);\n      return React.createElement(DesktopModal, {\n        blurContainerSelector: blurContainerSelector,\n        show: !!currentType,\n        onTypeChange: this.openModal,\n        onClose: this.closeModal,\n        subtitle: this.getSubtitle(),\n        type: currentType\n      }, React.createElement(FormSwitcher, {\n        type: currentType,\n        error: error,\n        handleSubmit: handleSubmit,\n        submitUrls: submitUrls,\n        options: options,\n        handleTypeChange: this.handleTypeChange,\n        onSocialAuthEvent: this.props.onSocialAuthEvent\n      }));\n    }\n  }]);\n\n  return ModalManager;\n}(Component);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Authentication/Desktop/ModalManager.tsx"],"names":["React","Component","DesktopModal","FormSwitcher","handleSubmit","defaultHandleSubmit","ModalType","ModalManager","currentType","options","copy","redirectTo","switchedForms","mode","setState","document","body","style","overflowY","props","onModalOpen","onModalClose","type","newOptions","state","err","error","login","signup","forgot","blurContainerSelector","csrf","submitUrls","bind","openModal","closeModal","getSubtitle","handleTypeChange","onSocialAuthEvent"],"mappings":"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","sourcesContent":["import { FormikProps } from \"formik\"\nimport React, { Component } from \"react\"\n\nimport { DesktopModal } from \"Components/Authentication/Desktop/Components/DesktopModal\"\nimport { FormSwitcher } from \"Components/Authentication/FormSwitcher\"\nimport { handleSubmit as defaultHandleSubmit } from \"Components/Authentication/helpers\"\nimport {\n  InputValues,\n  ModalOptions,\n  ModalType,\n  SubmitHandler,\n} from \"Components/Authentication/Types\"\n\nexport interface ModalManagerProps {\n  submitUrls?: { [P in ModalType]: string } & {\n    facebook?: string\n    twitter?: string\n  }\n  csrf?: string\n  redirectTo?: string\n  tracking?: any\n  type?: ModalType\n  handleSubmit?: (\n    type: ModalType,\n    options: ModalOptions,\n    values: InputValues,\n    formikBag: FormikProps<InputValues>\n  ) => void\n  blurContainerSelector?: string\n  onSocialAuthEvent?: (options) => void\n  onModalOpen?: () => void\n  onModalClose?: () => void\n}\n\nexport interface ModalManagerState {\n  currentType?: ModalType\n  options?: ModalOptions\n  error?: string\n  switchedForms: boolean\n}\n\nexport class ModalManager extends Component<\n  ModalManagerProps,\n  ModalManagerState\n> {\n  state: ModalManagerState = {\n    currentType: null,\n    options: {\n      copy: null,\n      redirectTo: \"/\",\n    },\n    switchedForms: false,\n  }\n\n  openModal = (options: ModalOptions) => {\n    const { mode } = options\n\n    this.setState({\n      currentType: mode,\n      options,\n    })\n\n    document.body.style.overflowY = \"hidden\"\n    this.props.onModalOpen && this.props.onModalOpen()\n  }\n\n  closeModal = () => {\n    this.setState({\n      currentType: null,\n      options: {},\n    })\n    document.body.style.overflowY = \"auto\"\n    this.props.onModalClose && this.props.onModalClose()\n  }\n\n  handleTypeChange = type => {\n    const newOptions = {\n      ...this.state.options,\n      mode: type,\n    }\n\n    this.setState({\n      currentType: type,\n      options: newOptions,\n      switchedForms: true,\n    })\n  }\n\n  setError = err => this.setState({ error: err })\n\n  getSubtitle = () => {\n    const { options, switchedForms, currentType } = this.state\n\n    if (switchedForms) {\n      switch (currentType) {\n        case ModalType.login:\n          return \"Log in\"\n        case ModalType.signup:\n          return \"Sign up\"\n        case ModalType.forgot:\n          return \"Forgot Password\"\n        default:\n          return \"The art world online\"\n      }\n    } else {\n      return options.copy || \"The art world online\"\n    }\n  }\n\n  render() {\n    const { blurContainerSelector, csrf, submitUrls, redirectTo } = this.props\n    const { currentType, error, options } = this.state\n\n    const handleSubmit: SubmitHandler = !!this.props.handleSubmit\n      ? this.props.handleSubmit.bind(this, currentType, options)\n      : defaultHandleSubmit(submitUrls[currentType], csrf, redirectTo)\n\n    return (\n      <DesktopModal\n        blurContainerSelector={blurContainerSelector}\n        show={!!currentType}\n        onTypeChange={this.openModal}\n        onClose={this.closeModal}\n        subtitle={this.getSubtitle()}\n        type={currentType}\n      >\n        <FormSwitcher\n          type={currentType}\n          error={error}\n          handleSubmit={handleSubmit}\n          submitUrls={submitUrls}\n          options={options}\n          handleTypeChange={this.handleTypeChange}\n          onSocialAuthEvent={this.props.onSocialAuthEvent}\n        />\n      </DesktopModal>\n    )\n  }\n}\n"]}]}
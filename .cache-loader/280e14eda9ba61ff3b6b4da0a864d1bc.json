{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Analytics/Schema/Values.ts","dependencies":[{"path":"/Users/eve/development/reaction/src/Analytics/Schema/Values.ts","mtime":1533591318000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1532461619000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Context = exports.Subject = exports.ActionName = exports.ActionType = exports.OwnerType = exports.PageName = void 0;\n\n/**\n * Pages that the user can view.\n */\nvar PageName;\n/**\n * An entity in the data model that has an ownership relationship to the entity\n * being described, be it a straightforward model such as ‘Artist’ or a more\n * conceptual one like a ‘Consignment Submission’\n *\n * @see {Result.owner}\n * @see {PageView.owner}\n */\n\nexports.PageName = PageName;\n\n(function (PageName) {\n  PageName[\"ArticlePage\"] = \"Article\";\n  PageName[\"ArtistPage\"] = \"Artist\";\n})(PageName || (exports.PageName = PageName = {}));\n\nvar OwnerType;\n/**\n * User actions, which can be active or passive ones.\n *\n * TODO: Distinguishing between Click and Tap is a little confusing. Do we always\n *       use Click on Force or do we use Tap when browsing from a mobile device?\n */\n\nexports.OwnerType = OwnerType;\n\n(function (OwnerType) {\n  OwnerType[\"Article\"] = \"Article\";\n  OwnerType[\"Artist\"] = \"Artist\";\n  OwnerType[\"Artwork\"] = \"Artwork\";\n  OwnerType[\"Conversation\"] = \"Conversation\";\n  OwnerType[\"Gene\"] = \"Gene\";\n  OwnerType[\"Show\"] = \"Show\";\n  OwnerType[\"Invoice\"] = \"Invoice\";\n  OwnerType[\"Consignment\"] = \"ConsignmentSubmission\";\n})(OwnerType || (exports.OwnerType = OwnerType = {}));\n\nvar ActionType;\n/**\n * The identifier that ties an interaction to a result.\n */\n\nexports.ActionType = ActionType;\n\n(function (ActionType) {\n  ActionType[\"Click\"] = \"Click\";\n  ActionType[\"Tap\"] = \"Tap\";\n  ActionType[\"Hover\"] = \"Hover\";\n  ActionType[\"Impression\"] = \"Impression\";\n  ActionType[\"ClickedReadMore\"] = \"Clicked read more\";\n})(ActionType || (exports.ActionType = ActionType = {}));\n\nvar ActionName;\nexports.ActionName = ActionName;\n\n(function (ActionName) {\n  ActionName[\"ArtistFollow\"] = \"artistFollow\";\n  ActionName[\"ArtistUnfollow\"] = \"artistUnfollow\";\n  ActionName[\"GeneFollow\"] = \"geneFollow\";\n  ActionName[\"GeneUnfollow\"] = \"geneUnfollow\";\n  ActionName[\"HomeArtistRailFollow\"] = \"homeArtistRailFollow\";\n  ActionName[\"HomeArtistArtworksBlockFollow\"] = \"homeArtistArtworksBlockFollow\";\n  ActionName[\"ConversationSendReply\"] = \"conversationSendReply\";\n  ActionName[\"ConversationLink\"] = \"conversationLinkUsed\";\n  ActionName[\"InquiryCancel\"] = \"inquiryCancel\";\n  ActionName[\"InquirySend\"] = \"inquirySend\";\n  ActionName[\"SavesAndFollowsWorks\"] = \"savesAndFollowsWorks\";\n  ActionName[\"SavesAndFollowsArtists\"] = \"savesAndFollowsArtists\";\n  ActionName[\"SavesAndFollowsCategories\"] = \"savesAndFollowsCategories\";\n  ActionName[\"ConsignmentDraftCreated\"] = \"consignmentDraftCreated\";\n  ActionName[\"ConsignmentSubmitted\"] = \"consignmentSubmitted\";\n  ActionName[\"ConsignmentInterest\"] = \"Interested in selling a work learn more\";\n  ActionName[\"BidFlowAddBillingAddress\"] = \"addBillingAddress\";\n  ActionName[\"BidFlowPlaceBid\"] = \"placeBid\";\n  ActionName[\"BidFlowSaveBillingAddress\"] = \"saveBillingAddress\";\n  ActionName[\"ReadMoreExpanded\"] = \"readMoreExpanded\";\n  ActionName[\"InSale\"] = \"In current auction\";\n  ActionName[\"InShow\"] = \"In featured show\";\n})(ActionName || (exports.ActionName = ActionName = {}));\n\n/**\n * Identifier of content that was interacted with\n */\nvar Subject;\n/**\n * Identifier of a conceptual module on the page.\n */\n\nexports.Subject = Subject;\n\n(function (Subject) {\n  Subject[\"FurtherReading\"] = \"Further reading\";\n  Subject[\"ReadMore\"] = \"Read more\";\n  Subject[\"RelatedArticles\"] = \"Related articles\";\n})(Subject || (exports.Subject = Subject = {}));\n\nvar Context;\nexports.Context = Context;\n\n(function (Context) {\n  Context[\"Header\"] = \"Header\";\n  Context[\"NavigationTabs\"] = \"NavigationTabs\";\n  Context[\"ArtistOverview\"] = \"ArtistOverview\";\n  Context[\"ArtistBio\"] = \"ArtistBio\";\n  Context[\"FurtherReading\"] = \"Further reading\";\n  Context[\"ReadMore\"] = \"Read more\";\n  Context[\"RelatedArticles\"] = \"Related articles\";\n})(Context || (exports.Context = Context = {}));",{"version":3,"sources":["src/Analytics/Schema/Values.ts"],"names":["PageName","OwnerType","ActionType","ActionName","Subject","Context"],"mappings":";;;;;;;AAAA;;;IAGYA,Q;AAKZ;;;;;;;;;;;WALYA,Q;AAAAA,U;AAAAA,U;GAAAA,Q,wBAAAA,Q;;IAaAC,S;AAWZ;;;;;;;;;WAXYA,S;AAAAA,W;AAAAA,W;AAAAA,W;AAAAA,W;AAAAA,W;AAAAA,W;AAAAA,W;AAAAA,W;GAAAA,S,yBAAAA,S;;IAiBAC,U;AAiCZ;;;;;;WAjCYA,U;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;GAAAA,U,0BAAAA,U;;IAoCAC,U;;;WAAAA,U;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;AAAAA,Y;GAAAA,U,0BAAAA,U;;AAwDZ;;;IAGYC,O;AAUZ;;;;;;WAVYA,O;AAAAA,S;AAAAA,S;AAAAA,S;GAAAA,O,uBAAAA,O;;IAaAC,O;;;WAAAA,O;AAAAA,S;AAAAA,S;AAAAA,S;AAAAA,S;AAAAA,S;AAAAA,S;AAAAA,S;GAAAA,O,uBAAAA,O","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["/**\n * Pages that the user can view.\n */\nexport enum PageName {\n  ArticlePage = \"Article\",\n  ArtistPage = \"Artist\",\n}\n\n/**\n * An entity in the data model that has an ownership relationship to the entity\n * being described, be it a straightforward model such as ‘Artist’ or a more\n * conceptual one like a ‘Consignment Submission’\n *\n * @see {Result.owner}\n * @see {PageView.owner}\n */\nexport enum OwnerType {\n  Article = \"Article\",\n  Artist = \"Artist\",\n  Artwork = \"Artwork\",\n  Conversation = \"Conversation\",\n  Gene = \"Gene\",\n  Show = \"Show\",\n  Invoice = \"Invoice\",\n  Consignment = \"ConsignmentSubmission\",\n}\n\n/**\n * User actions, which can be active or passive ones.\n *\n * TODO: Distinguishing between Click and Tap is a little confusing. Do we always\n *       use Click on Force or do we use Tap when browsing from a mobile device?\n */\nexport enum ActionType {\n  /**\n   * A click on a UI element using a mouse-like input device.\n   *\n   * TODO: Check if ‘Tap’ and this can be combined.\n   */\n  Click = \"Click\",\n\n  /**\n   * A tap on a UI element using a finger-like input device.\n   *\n   * TODO: Check if ‘Click’ and this can be combined.\n   */\n  Tap = \"Tap\",\n\n  /**\n   * Moving the mouse pointer over a UI element or, when browsing on a mobile\n   * device, by first tapping the UI element once making it switch into\n   * continuous hover mode.\n   */\n  Hover = \"Hover\",\n\n  /**\n   * A UI element was rendered in the viewport\n   */\n  Impression = \"Impression\",\n\n  /**\n   * Triggers a pageview in force, skips segment\n   */\n  ClickedReadMore = \"Clicked read more\",\n}\n\n/**\n * The identifier that ties an interaction to a result.\n */\nexport enum ActionName {\n  /**\n   * Artist Page\n   */\n  ArtistFollow = \"artistFollow\",\n  ArtistUnfollow = \"artistUnfollow\",\n\n  /**\n   * Gene Page\n   */\n  GeneFollow = \"geneFollow\",\n  GeneUnfollow = \"geneUnfollow\",\n\n  /**\n   * Home page events\n   */\n  HomeArtistRailFollow = \"homeArtistRailFollow\",\n  HomeArtistArtworksBlockFollow = \"homeArtistArtworksBlockFollow\",\n\n  /**\n   * Conversations / Inbox / Messaging\n   */\n  ConversationSendReply = \"conversationSendReply\",\n  ConversationLink = \"conversationLinkUsed\",\n  InquiryCancel = \"inquiryCancel\",\n  InquirySend = \"inquirySend\",\n\n  /**\n   *  Saves And Follows Events\n   */\n  SavesAndFollowsWorks = \"savesAndFollowsWorks\",\n  SavesAndFollowsArtists = \"savesAndFollowsArtists\",\n  SavesAndFollowsCategories = \"savesAndFollowsCategories\",\n\n  /**\n   *  Consignment flow\n   */\n  ConsignmentDraftCreated = \"consignmentDraftCreated\",\n  ConsignmentSubmitted = \"consignmentSubmitted\",\n  ConsignmentInterest = \"Interested in selling a work learn more\", // TODO: Old schema\n\n  /**\n   * Bid flow\n   */\n  BidFlowAddBillingAddress = \"addBillingAddress\",\n  BidFlowPlaceBid = \"placeBid\",\n  BidFlowSaveBillingAddress = \"saveBillingAddress\",\n\n  /**\n   * Generic\n   */\n  ReadMoreExpanded = \"readMoreExpanded\", // TODO: This differs from old event\n  InSale = \"In current auction\", // TODO: Old schema\n  InShow = \"In featured show\", // TODO: Old schema\n}\n\n/**\n * Identifier of content that was interacted with\n */\nexport enum Subject {\n  /*\n  * Articles\n  * TODO: Old schema\n  */\n  FurtherReading = \"Further reading\",\n  ReadMore = \"Read more\",\n  RelatedArticles = \"Related articles\",\n}\n\n/**\n * Identifier of a conceptual module on the page.\n */\nexport enum Context {\n  Header = \"Header\",\n  NavigationTabs = \"NavigationTabs\",\n\n  /**\n   * Artist page\n   */\n  ArtistOverview = \"ArtistOverview\",\n  ArtistBio = \"ArtistBio\",\n\n  /*\n  * Articles\n  * TODO: Old schema\n  */\n  FurtherReading = \"Further reading\",\n  ReadMore = \"Read more\",\n  RelatedArticles = \"Related articles\",\n}\n"]}]}
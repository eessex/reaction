{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/CV/CVItem.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/CV/CVItem.tsx","mtime":1530204737000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CVPaginationContainer = exports.PAGE_SIZE = void 0;\n\nvar _groupBy2 = _interopRequireDefault(require(\"lodash/groupBy\"));\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _Box = require(\"../../../../Elements/Box\");\n\nvar _Button = require(\"../../../../Elements/Button\");\n\nvar _Flex = require(\"../../../../Elements/Flex\");\n\nvar _Grid = require(\"../../../../Elements/Grid\");\n\nvar _Spacer = require(\"../../../../Elements/Spacer\");\n\nvar _Responsive = require(\"../../../../Utils/Responsive\");\n\nvar _reactRelay = require(\"react-relay\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar PAGE_SIZE = 10;\nexports.PAGE_SIZE = PAGE_SIZE;\n\nvar CVItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CVItem, _React$Component);\n\n  function CVItem() {\n    var _ref;\n\n    var _temp, _this;\n\n    _classCallCheck(this, CVItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = CVItem.__proto__ || Object.getPrototypeOf(CVItem)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        isLoading: false\n      }\n    }), _temp));\n  }\n\n  _createClass(CVItem, [{\n    key: \"loadMore\",\n    value: function loadMore() {\n      var _this2 = this;\n\n      var hasMore = this.props.artist.showsConnection.pageInfo.hasNextPage;\n\n      if (hasMore) {\n        this.setState({\n          isLoading: true\n        });\n        this.props.relay.loadMore(PAGE_SIZE, function (error) {\n          if (error) {\n            // tslint:disable-next-line:no-console\n            console.log(error);\n          }\n\n          _this2.setState({\n            isLoading: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"renderShow\",\n    // FIXME: Check for null links\n    // FIXME: Figure out how to always point to artsy.net env? how to handle urls?\n    value: function renderShow(node, index) {\n      var FIXME_DOMAIN = \"https://www.artsy.net\";\n      return _react.default.createElement(Show, {\n        size: \"3\",\n        key: index\n      }, _react.default.createElement(_palette.Serif, {\n        size: \"3\",\n        display: \"inline\",\n        italic: true\n      }, node.href ? _react.default.createElement(\"a\", {\n        href: FIXME_DOMAIN + node.href,\n        className: \"noUnderline\"\n      }, node.name) : _react.default.createElement(\"span\", null, node.name)), \",\", \" \", node.partner.href ? _react.default.createElement(\"a\", {\n        href: FIXME_DOMAIN + node.partner.href,\n        className: \"noUnderline\"\n      }, node.partner.name) : _react.default.createElement(\"span\", null, node.partner.name), node.city && \", \".concat(node.city));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var groupedByYear = (0, _groupBy2.default)(this.props.artist.showsConnection.edges, function (_ref2) {\n        var show = _ref2.node;\n        return show.start_at;\n      });\n      return _react.default.createElement(_Responsive.Responsive, null, function (_ref3) {\n        var xs = _ref3.xs;\n        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_Grid.Row, null, _react.default.createElement(_Grid.Col, null, _react.default.createElement(CVItems, {\n          mb: 3,\n          pb: 4\n        }, _react.default.createElement(_Box.Box, null, _react.default.createElement(_Grid.Row, null, _react.default.createElement(_Grid.Col, {\n          sm: 2\n        }, _react.default.createElement(_Box.Box, {\n          mb: 1\n        }, _react.default.createElement(Category, {\n          size: \"3\",\n          weight: \"medium\"\n        }, _this3.props.category))), _react.default.createElement(_Grid.Col, {\n          sm: 10\n        }, Object.keys(groupedByYear).sort().reverse().map(function (year, index) {\n          return _react.default.createElement(YearGroup, {\n            mb: 1,\n            key: index\n          }, _react.default.createElement(Year, {\n            size: \"3\"\n          }, year), _react.default.createElement(_Spacer.Spacer, {\n            mr: xs ? 1 : 4\n          }), _react.default.createElement(ShowGroup, null, groupedByYear[year].map(function (_ref4, key) {\n            var node = _ref4.node;\n            return _this3.renderShow(node, key);\n          })));\n        }), _react.default.createElement(_Spacer.Spacer, {\n          mb: 2\n        }), _this3.hasMore && _react.default.createElement(_Button.Button, {\n          width: xs ? \"100%\" : \"\",\n          variant: \"secondaryOutline\",\n          onClick: function onClick() {\n            return _this3.loadMore();\n          },\n          loading: _this3.state.isLoading ? true : false\n        }, \"Show more\"))))))));\n      });\n    }\n  }, {\n    key: \"hasMore\",\n    get: function get() {\n      var hasMore = this.props.artist.showsConnection.pageInfo.hasNextPage;\n      return hasMore;\n    }\n  }]);\n\n  return CVItem;\n}(_react.default.Component);\n\nvar CVPaginationContainer = (0, _reactRelay.createPaginationContainer)(CVItem, {\n  artist: function artist() {\n    var node = require(\"../../../../../__generated__/CVItem_artist.graphql\");\n\n    if (node.hash && node.hash !== \"efd1928bb5d5bdcdca9ef11bd2849976\") {\n      console.error(\"The definition of 'CVItem_artist' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../../__generated__/CVItem_artist.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.artist.showsConnection;\n  },\n  getFragmentVariables: function getFragmentVariables(prevVars, totalCount) {\n    return _extends({}, prevVars, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(props, _ref5, fragmentVariables) {\n    var count = _ref5.count,\n        cursor = _ref5.cursor;\n    return _extends({}, fragmentVariables, {\n      count: count,\n      cursor: cursor,\n      artistID: props.artist.id\n    });\n  },\n  query: function query() {\n    var node = require(\"../../../../../__generated__/CVItemQuery.graphql\");\n\n    if (node.hash && node.hash !== \"0b1a3246fdd41a497dffb3b7697f5422\") {\n      console.error(\"The definition of 'CVItemQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../../__generated__/CVItemQuery.graphql\");\n  }\n});\nexports.CVPaginationContainer = CVPaginationContainer;\nvar CVItems = (0, _styledComponents.default)(_Box.Box).withConfig({\n  displayName: \"CVItem__CVItems\",\n  componentId: \"djzqoc-0\"\n})([\"border-bottom:1px solid \", \";\"], (0, _styledSystem.themeGet)(\"colors.black10\"));\nvar YearGroup = (0, _styledComponents.default)(_Flex.Flex).withConfig({\n  displayName: \"CVItem__YearGroup\",\n  componentId: \"djzqoc-1\"\n})([\"\"]);\nvar Year = _palette.Serif;\n\nvar ShowGroup = _styledComponents.default.div.withConfig({\n  displayName: \"CVItem__ShowGroup\",\n  componentId: \"djzqoc-2\"\n})([\"\"]);\n\nvar Show = _palette.Serif;\nvar Category = _palette.Sans;",{"version":3,"sources":["src/Styleguide/Pages/Artist/Routes/CV/CVItem.tsx"],"names":["PAGE_SIZE","CVItem","isLoading","hasMore","props","artist","showsConnection","pageInfo","hasNextPage","setState","relay","loadMore","error","console","log","node","index","FIXME_DOMAIN","href","name","partner","city","groupedByYear","edges","show","start_at","xs","category","Object","keys","sort","reverse","map","year","key","renderShow","state","Component","CVPaginationContainer","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","fragmentVariables","cursor","artistID","id","query","CVItems","YearGroup","Year","ShowGroup","div","Show","Category"],"mappings":"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","file":"/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/CV/CVItem.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { Sans, Serif } from \"@artsy/palette\"\nimport { CVItem_artist } from \"__generated__/CVItem_artist.graphql\"\nimport { groupBy } from \"lodash\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { themeGet } from \"styled-system\"\nimport { Box } from \"Styleguide/Elements/Box\"\nimport { Button } from \"Styleguide/Elements/Button\"\nimport { Flex } from \"Styleguide/Elements/Flex\"\nimport { Col, Row } from \"Styleguide/Elements/Grid\"\nimport { Spacer } from \"Styleguide/Elements/Spacer\"\nimport { Responsive } from \"Styleguide/Utils/Responsive\"\n\nimport {\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\n\nexport const PAGE_SIZE = 10\n\nexport interface CVItemProps {\n  relay: RelayPaginationProp\n  artist: CVItem_artist\n  category: string\n}\n\ninterface CVItemState {\n  isLoading: boolean\n}\n\nclass CVItem extends React.Component<CVItemProps, CVItemState> {\n  state = {\n    isLoading: false,\n  }\n\n  loadMore() {\n    const hasMore = this.props.artist.showsConnection.pageInfo.hasNextPage\n\n    if (hasMore) {\n      this.setState({\n        isLoading: true,\n      })\n\n      this.props.relay.loadMore(PAGE_SIZE, error => {\n        if (error) {\n          // tslint:disable-next-line:no-console\n          console.log(error)\n        }\n\n        this.setState({\n          isLoading: false,\n        })\n      })\n    }\n  }\n\n  get hasMore() {\n    const hasMore = this.props.artist.showsConnection.pageInfo.hasNextPage\n    return hasMore\n  }\n\n  // FIXME: Check for null links\n  // FIXME: Figure out how to always point to artsy.net env? how to handle urls?\n  renderShow(node, index) {\n    const FIXME_DOMAIN = \"https://www.artsy.net\"\n\n    return (\n      <Show size=\"3\" key={index}>\n        <Serif size=\"3\" display=\"inline\" italic>\n          {node.href ? (\n            <a href={FIXME_DOMAIN + node.href} className=\"noUnderline\">\n              {node.name}\n            </a>\n          ) : (\n            <span>{node.name}</span>\n          )}\n        </Serif>,{\" \"}\n        {node.partner.href ? (\n          <a href={FIXME_DOMAIN + node.partner.href} className=\"noUnderline\">\n            {node.partner.name}\n          </a>\n        ) : (\n          <span>{node.partner.name}</span>\n        )}\n        {node.city && `, ${node.city}`}\n      </Show>\n    )\n  }\n\n  render() {\n    const groupedByYear = groupBy(\n      this.props.artist.showsConnection.edges,\n      ({ node: show }) => {\n        return show.start_at\n      }\n    )\n\n    return (\n      <Responsive>\n        {({ xs }) => {\n          return (\n            <React.Fragment>\n              <Row>\n                <Col>\n                  <CVItems mb={3} pb={4}>\n                    <Box>\n                      <Row>\n                        <Col sm={2}>\n                          <Box mb={1}>\n                            <Category size=\"3\" weight=\"medium\">\n                              {this.props.category}\n                            </Category>\n                          </Box>\n                        </Col>\n                        <Col sm={10}>\n                          {Object.keys(groupedByYear)\n                            .sort()\n                            .reverse()\n                            .map((year, index) => {\n                              return (\n                                <YearGroup mb={1} key={index}>\n                                  <Year size=\"3\">{year}</Year>\n                                  <Spacer mr={xs ? 1 : 4} />\n                                  <ShowGroup>\n                                    {groupedByYear[year].map(\n                                      ({ node }, key) => {\n                                        return this.renderShow(node, key)\n                                      }\n                                    )}\n                                  </ShowGroup>\n                                </YearGroup>\n                              )\n                            })}\n\n                          {/* FIXME: Implement loading spinner */}\n                          {/* {this.props.relay.isLoading() && (\n                            <Box position=\"relative\" pt={4} pb={0}>\n                              <Spinner />\n                            </Box>\n                          )} */}\n\n                          <Spacer mb={2} />\n\n                          {this.hasMore && (\n                            <Button\n                              width={xs ? \"100%\" : \"\"}\n                              variant=\"secondaryOutline\"\n                              onClick={() => this.loadMore()}\n                              loading={this.state.isLoading ? true : false}\n                            >\n                              Show more\n                            </Button>\n                          )}\n                        </Col>\n                      </Row>\n                    </Box>\n                  </CVItems>\n                </Col>\n              </Row>\n            </React.Fragment>\n          )\n        }}\n      </Responsive>\n    )\n  }\n}\n\nexport const CVPaginationContainer = createPaginationContainer(\n  CVItem,\n  {\n    artist: graphql`\n      fragment CVItem_artist on Artist\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\" }\n          sort: { type: \"PartnerShowSorts\", defaultValue: \"start_at_desc\" }\n          at_a_fair: { type: \"Boolean\", defaultValue: false }\n          solo_show: { type: \"Boolean\", defaultValue: false }\n          is_reference: { type: \"Boolean\", defaultValue: true }\n          visible_to_public: { type: \"Boolean\", defaultValue: false }\n        ) {\n        id\n        showsConnection(\n          first: $count\n          after: $cursor\n          sort: $sort\n          at_a_fair: $at_a_fair\n          solo_show: $solo_show\n          is_reference: $is_reference\n          visible_to_public: $visible_to_public\n        ) @connection(key: \"Artist_showsConnection\") {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            node {\n              __id\n              partner {\n                ... on ExternalPartner {\n                  name\n                }\n                ... on Partner {\n                  name\n                  href\n                }\n              }\n              name\n              start_at(format: \"YYYY\")\n              city\n              href\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.artist.showsConnection as any\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return { ...prevVars, count: totalCount }\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n        artistID: props.artist.id,\n      }\n    },\n    query: graphql`\n      query CVItemQuery(\n        $count: Int\n        $cursor: String\n        $artistID: String!\n        $sort: PartnerShowSorts\n        $at_a_fair: Boolean\n        $solo_show: Boolean\n        $is_reference: Boolean\n        $visible_to_public: Boolean\n      ) {\n        artist(id: $artistID) {\n          ...CVItem_artist\n            @arguments(\n              sort: $sort\n              count: $count\n              cursor: $cursor\n              at_a_fair: $at_a_fair\n              solo_show: $solo_show\n              is_reference: $is_reference\n              visible_to_public: $visible_to_public\n            )\n        }\n      }\n    `,\n  }\n)\n\nconst CVItems = styled(Box)`\n  border-bottom: 1px solid ${themeGet(\"colors.black10\")};\n`\nconst YearGroup = styled(Flex)``\nconst Year = Serif\nconst ShowGroup = styled.div``\nconst Show = Serif\nconst Category = Sans\n"]}]}
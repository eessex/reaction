{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Authentication/ResetPasswordForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/ResetPasswordForm.tsx","mtime":1527106575000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1526592628000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResetPasswordForm = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _formik = require(\"formik\");\n\nvar _commonElements = require(\"./commonElements\");\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _Validators = require(\"./Validators\");\n\nvar _Inverted = _interopRequireDefault(require(\"../Buttons/Inverted\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ResetPasswordForm = function ResetPasswordForm(props) {\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: props.values,\n    onSubmit: props.handleSubmit,\n    validationSchema: _Validators.ResetPasswordValidator\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting,\n        isValid = _ref.isValid;\n    return _react.default.createElement(_commonElements.FormContainer, {\n      onSubmit: handleSubmit\n    }, _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.email && errors.email,\n      placeholder: \"Enter your email address\",\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), _react.default.createElement(_Inverted.default, {\n      block: true,\n      type: \"submit\",\n      disabled: isSubmitting\n    }, \"Send Reset Instructions\"), _react.default.createElement(_commonElements.ChangeMode, {\n      onClick: function onClick() {\n        return props.handleTypeChange(\"login\");\n      }\n    }, \"Log In\"));\n  });\n};\n\nexports.ResetPasswordForm = ResetPasswordForm;",{"version":3,"sources":["src/Components/Authentication/ResetPasswordForm.tsx"],"names":["ResetPasswordForm","props","values","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","isValid","email","handleTypeChange"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;AAEO,IAAMA,oBAAuC,SAAvCA,iBAAuC,QAAS;AAC3D,SACE;AACE,mBAAeC,MAAMC,MADvB;AAEE,cAAUD,MAAME,YAFlB;AAGE;AAHF,KAKG,gBAS+B;AAAA,QAR9BD,MAQ8B,QAR9BA,MAQ8B;AAAA,QAP9BE,MAO8B,QAP9BA,MAO8B;AAAA,QAN9BC,OAM8B,QAN9BA,OAM8B;AAAA,QAL9BC,YAK8B,QAL9BA,YAK8B;AAAA,QAJ9BC,UAI8B,QAJ9BA,UAI8B;AAAA,QAH9BJ,YAG8B,QAH9BA,YAG8B;AAAA,QAF9BK,YAE8B,QAF9BA,YAE8B;AAAA,QAD9BC,OAC8B,QAD9BA,OAC8B;AAC9B,WACE;AAAM,gBAAUN;AAAhB,OACE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOE,QAAQK,KAAR,IAAiBN,OAAOM,KAHjC;AAIE,mBAAY,0BAJd;AAKE,YAAK,OALP;AAME,aAAM,OANR;AAOE,YAAK,OAPP;AAQE,aAAOR,OAAOQ,KARhB;AASE,gBAAUJ,YATZ;AAUE,cAAQC;AAVV,MADF,EAcE;AAAQ,iBAAR;AAAc,YAAK,QAAnB;AAA4B,gBAAUC;AAAtC,iCAdF,EAiBE;AAAY,eAAS;AAAA,eAAMP,MAAMU,gBAAN,CAAuB,OAAvB,CAAN;AAAA;AAArB,gBAjBF,CADF;AAuBD,GAtCH,CADF;AA0CD,CA3CM","file":"/Users/eve/development/reaction/src/Components/Authentication/ResetPasswordForm.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport { Formik, FormikProps } from \"formik\"\n\nimport { ChangeMode, FormContainer as Form } from \"./commonElements\"\nimport Input from \"../Input\"\nimport { FormComponentType, InputValues } from \"./Types\"\nimport { ResetPasswordValidator } from \"./Validators\"\nimport Button from \"../Buttons/Inverted\"\n\nexport const ResetPasswordForm: FormComponentType = props => {\n  return (\n    <Formik\n      initialValues={props.values}\n      onSubmit={props.handleSubmit}\n      validationSchema={ResetPasswordValidator}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        isValid,\n      }: FormikProps<InputValues>) => {\n        return (\n          <Form onSubmit={handleSubmit}>\n            <Input\n              block\n              quick\n              error={touched.email && errors.email}\n              placeholder=\"Enter your email address\"\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {/* touched.email && errors.email && <div>{errors.email}</div */}\n            <Button block type=\"submit\" disabled={isSubmitting}>\n              Send Reset Instructions\n            </Button>\n            <ChangeMode onClick={() => props.handleTypeChange(\"login\")}>\n              Log In\n            </ChangeMode>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n"]}]}
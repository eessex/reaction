{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/Overview/Components/ArtworkFilter/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/Overview/Components/ArtworkFilter/index.tsx","mtime":1530290903000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArtworkFilterFragmentContainer = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _Toggle = require(\"../../../../../../Components/Toggle\");\n\nvar _Box = require(\"../../../../../../Elements/Box\");\n\nvar _Checkbox = require(\"../../../../../../Elements/Checkbox\");\n\nvar _Flex = require(\"../../../../../../Elements/Flex\");\n\nvar _Radio = require(\"../../../../../../Elements/Radio\");\n\nvar _Select = require(\"../../../../../../Elements/Select\");\n\nvar _Spacer = require(\"../../../../../../Elements/Spacer\");\n\nvar _state = require(\"../../state\");\n\nvar _Responsive = require(\"../../../../../../Utils/Responsive\");\n\nvar _unstated = require(\"unstated\");\n\nvar _ArtworkFilterArtworkGrid = _interopRequireDefault(require(\"./ArtworkFilterArtworkGrid\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"renderCurrentlySelected\",\n    value: function renderCurrentlySelected(filter, state) {\n      var selectedFilter = null;\n\n      if ((filter === \"institution\" || filter === \"gallery\") && state.partner_id) {\n        selectedFilter = state.partner_id;\n      }\n\n      if (filter === \"major_period\" && state.major_periods) {\n        selectedFilter = state.major_periods[0];\n      } else {\n        selectedFilter = state[filter];\n      }\n\n      return selectedFilter;\n    }\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters(filters) {\n      var _this = this;\n\n      return this.props.artist.filtered_artworks.aggregations.map(function (aggregation, index) {\n        return React.createElement(\"div\", {\n          key: index\n        }, React.createElement(\"div\", null, aggregation.slice, \" -\", \" \", _this.renderCurrentlySelected(aggregation.slice.toLowerCase(), filters.state), _this.renderSection(aggregation, filters)), React.createElement(\"br\", null));\n      });\n    }\n  }, {\n    key: \"renderForSale\",\n    value: function renderForSale(filters) {\n      return React.createElement(\"div\", null, React.createElement(\"div\", null, \"Currently selected: \", filters.state.for_sale ? \"Only for sale\" : \"All\"), React.createElement(\"div\", {\n        onClick: function onClick() {\n          filters.setFilter(\"for_sale\", true);\n        }\n      }, \"For sale\"), React.createElement(\"div\", {\n        onClick: function onClick() {\n          filters.setFilter(\"for_sale\", null);\n        }\n      }, \"All\"), React.createElement(\"br\", null));\n    }\n  }, {\n    key: \"renderSidebar\",\n    value: function renderSidebar(filters) {\n      return React.createElement(\"div\", null, this.renderForSale(filters), this.renderFilters(filters));\n    }\n  }, {\n    key: \"renderSection\",\n    value: function renderSection(aggregation, filters) {\n      return aggregation.counts.slice(0, 10).map(function (count, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          onClick: function onClick() {\n            filters.setFilter(aggregation.slice.toLowerCase(), count.id);\n          }\n        }, React.createElement(\"span\", null, count.name), React.createElement(\"span\", null, \"(\", count.count, \")\"));\n      });\n    }\n  }, {\n    key: \"renderCategory\",\n    value: function renderCategory(filters, category, counts) {\n      return counts.slice(0, 10).map(function (count, index) {\n        return React.createElement(_Radio.Radio, {\n          selected: filters.state[category] === count.id,\n          value: count.id,\n          onSelect: function onSelect(v) {\n            return filters.setFilter(category, v);\n          },\n          key: index\n        }, count.name);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var aggregations = this.props.artist.filtered_artworks.aggregations;\n      var mediumAggregation = aggregations.find(function (agg) {\n        return agg.slice === \"MEDIUM\";\n      });\n      var galleryAggregation = aggregations.find(function (agg) {\n        return agg.slice === \"GALLERY\";\n      });\n      var institutionAggregation = aggregations.find(function (agg) {\n        return agg.slice === \"INSTITUTION\";\n      });\n      var periodAggregation = aggregations.find(function (agg) {\n        return agg.slice === \"MAJOR_PERIOD\";\n      });\n      return React.createElement(_unstated.Subscribe, {\n        to: [_state.FilterState]\n      }, function (filters) {\n        return React.createElement(_Responsive.Responsive, null, function (_ref) {\n          var xs = _ref.xs,\n              sm = _ref.sm,\n              md = _ref.md;\n          return React.createElement(React.Fragment, null, React.createElement(_Flex.Flex, null, !xs && React.createElement(Sidebar, {\n            width: \"30%\",\n            mr: 2\n          }, React.createElement(_Toggle.Toggle, {\n            label: \"Purchase type\",\n            expanded: true,\n            disabled: true\n          }, React.createElement(_Flex.Flex, {\n            justifyContent: \"space-between\"\n          }, React.createElement(_Checkbox.Checkbox, {\n            selected: filters.state.for_sale,\n            onSelect: function onSelect(value) {\n              return filters.setFilter(\"for_sale\", !value);\n            }\n          }, \"For sale\"))), React.createElement(_Toggle.Toggle, {\n            label: \"Medium\",\n            expanded: true\n          }, _this2.renderCategory(filters, \"medium\", mediumAggregation.counts)), React.createElement(_Toggle.Toggle, {\n            label: \"Gallery\"\n          }, _this2.renderCategory(filters, \"partner_id\", galleryAggregation.counts)), React.createElement(_Toggle.Toggle, {\n            label: \"Institution\"\n          }, _this2.renderCategory(filters, \"partner_id\", institutionAggregation.counts)), React.createElement(_Toggle.Toggle, {\n            label: \"Time period\"\n          }, _this2.renderCategory(filters, \"major_period\", periodAggregation.counts))), React.createElement(_Box.Box, {\n            width: xs ? \"100%\" : \"70%\"\n          }, React.createElement(_Flex.Flex, {\n            justifyContent: \"flex-end\"\n          }, React.createElement(_Select.Select, {\n            options: [{\n              value: \"RECENTLY_UPDATED\",\n              text: \"Recently updated\"\n            }, {\n              value: \"RECENTLY_ADDED\",\n              text: \"Recently added\"\n            }]\n          })), React.createElement(_Spacer.Spacer, {\n            mb: 2\n          }), React.createElement(_ArtworkFilterArtworkGrid.default, {\n            artistID: _this2.props.artist.id,\n            columnCount: xs || sm || md ? 2 : 3,\n            filtered_artworks: _this2.props.artist.filtered_artworks\n          }))));\n        });\n      });\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nvar ArtworkFilterFragmentContainer = (0, _reactRelay.createFragmentContainer)(Filter, {\n  artist: function artist() {\n    var node = require(\"../../../../../../../__generated__/ArtworkFilter_artist.graphql\");\n\n    if (node.hash && node.hash !== \"596aaff8b7534e0eebe82bc365ae83db\") {\n      console.error(\"The definition of 'ArtworkFilter_artist' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../../../../__generated__/ArtworkFilter_artist.graphql\");\n  }\n});\nexports.ArtworkFilterFragmentContainer = ArtworkFilterFragmentContainer;\nvar Sidebar = _Box.Box;",{"version":3,"sources":["src/Styleguide/Pages/Artist/Routes/Overview/Components/ArtworkFilter/index.tsx"],"names":["Filter","filter","state","selectedFilter","partner_id","major_periods","filters","props","artist","filtered_artworks","aggregations","map","aggregation","index","slice","renderCurrentlySelected","toLowerCase","renderSection","for_sale","setFilter","renderForSale","renderFilters","counts","count","id","name","category","v","mediumAggregation","find","agg","galleryAggregation","institutionAggregation","periodAggregation","xs","sm","md","value","renderCategory","text","React","Component","ArtworkFilterFragmentContainer","Sidebar"],"mappings":"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","file":"/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/Overview/Components/ArtworkFilter/index.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { ArtworkFilter_artist } from \"__generated__/ArtworkFilter_artist.graphql\"\nimport * as React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Toggle } from \"Styleguide/Components/Toggle\"\nimport { Box } from \"Styleguide/Elements/Box\"\nimport { Checkbox } from \"Styleguide/Elements/Checkbox\"\nimport { Flex } from \"Styleguide/Elements/Flex\"\nimport { Radio } from \"Styleguide/Elements/Radio\"\nimport { Select } from \"Styleguide/Elements/Select\"\nimport { Spacer } from \"Styleguide/Elements/Spacer\"\nimport { FilterState } from \"Styleguide/Pages/Artist/Routes/Overview/state\"\nimport { Responsive } from \"Styleguide/Utils/Responsive\"\nimport { Subscribe } from \"unstated\"\nimport ArtworksContent from \"./ArtworkFilterArtworkGrid\"\n\ninterface Props {\n  artist: ArtworkFilter_artist\n  filters: any // FIXME\n}\n\nclass Filter extends React.Component<Props> {\n  renderCurrentlySelected(filter, state) {\n    let selectedFilter = null\n\n    if (\n      (filter === \"institution\" || filter === \"gallery\") &&\n      state.partner_id\n    ) {\n      selectedFilter = state.partner_id\n    }\n    if (filter === \"major_period\" && state.major_periods) {\n      selectedFilter = state.major_periods[0]\n    } else {\n      selectedFilter = state[filter]\n    }\n\n    return selectedFilter\n  }\n\n  renderFilters(filters) {\n    return this.props.artist.filtered_artworks.aggregations.map(\n      (aggregation, index) => {\n        return (\n          <div key={index}>\n            <div>\n              {aggregation.slice} -{\" \"}\n              {this.renderCurrentlySelected(\n                aggregation.slice.toLowerCase(),\n                filters.state\n              )}\n              {this.renderSection(aggregation, filters)}\n            </div>\n            <br />\n          </div>\n        )\n      }\n    )\n  }\n\n  renderForSale(filters) {\n    return (\n      <div>\n        <div>\n          Currently selected: {filters.state.for_sale ? \"Only for sale\" : \"All\"}\n        </div>\n        <div\n          onClick={() => {\n            filters.setFilter(\"for_sale\", true)\n          }}\n        >\n          For sale\n        </div>\n        <div\n          onClick={() => {\n            filters.setFilter(\"for_sale\", null)\n          }}\n        >\n          All\n        </div>\n        <br />\n      </div>\n    )\n  }\n\n  renderSidebar(filters) {\n    return (\n      <div>\n        {this.renderForSale(filters)}\n        {this.renderFilters(filters)}\n      </div>\n    )\n  }\n\n  renderSection(aggregation, filters) {\n    return aggregation.counts.slice(0, 10).map((count, index) => {\n      return (\n        <div\n          key={index}\n          onClick={() => {\n            filters.setFilter(aggregation.slice.toLowerCase(), count.id)\n          }}\n        >\n          <span>{count.name}</span>\n          <span>({count.count})</span>\n        </div>\n      )\n    })\n  }\n\n  renderCategory(filters, category, counts) {\n    return counts.slice(0, 10).map((count, index) => {\n      return (\n        <Radio\n          selected={filters.state[category] === count.id}\n          value={count.id}\n          onSelect={v => {\n            return (filters as any).setFilter(category, v)\n          }}\n          key={index}\n        >\n          {count.name}\n        </Radio>\n      )\n    })\n  }\n\n  render() {\n    const { aggregations } = this.props.artist.filtered_artworks\n    const mediumAggregation = aggregations.find(agg => agg.slice === \"MEDIUM\")\n    const galleryAggregation = aggregations.find(agg => agg.slice === \"GALLERY\")\n    const institutionAggregation = aggregations.find(\n      agg => agg.slice === \"INSTITUTION\"\n    )\n    const periodAggregation = aggregations.find(\n      agg => agg.slice === \"MAJOR_PERIOD\"\n    )\n\n    return (\n      <Subscribe to={[FilterState]}>\n        {filters => {\n          return (\n            <Responsive>\n              {({ xs, sm, md }) => {\n                return (\n                  <React.Fragment>\n                    <Flex>\n                      {/* Sidebar Area */}\n                      {!xs && (\n                        <Sidebar width=\"30%\" mr={2}>\n                          <Toggle label=\"Purchase type\" expanded disabled>\n                            <Flex justifyContent=\"space-between\">\n                              <Checkbox\n                                selected={filters.state.for_sale}\n                                onSelect={value => {\n                                  return (filters as any).setFilter(\n                                    \"for_sale\",\n                                    !value\n                                  )\n                                }}\n                              >\n                                For sale\n                              </Checkbox>\n                            </Flex>\n                          </Toggle>\n                          <Toggle label=\"Medium\" expanded>\n                            {this.renderCategory(\n                              filters,\n                              \"medium\",\n                              mediumAggregation.counts\n                            )}\n                          </Toggle>\n                          <Toggle label=\"Gallery\">\n                            {this.renderCategory(\n                              filters,\n                              \"partner_id\",\n                              galleryAggregation.counts\n                            )}\n                          </Toggle>\n\n                          <Toggle label=\"Institution\">\n                            {this.renderCategory(\n                              filters,\n                              \"partner_id\",\n                              institutionAggregation.counts\n                            )}\n                          </Toggle>\n                          <Toggle label=\"Time period\">\n                            {this.renderCategory(\n                              filters,\n                              \"major_period\",\n                              periodAggregation.counts\n                            )}\n                          </Toggle>\n                        </Sidebar>\n                      )}\n\n                      {/* Artwork Grid */}\n\n                      <Box width={xs ? \"100%\" : \"70%\"}>\n                        {/* TODO: Implement sorting */}\n                        <Flex justifyContent=\"flex-end\">\n                          <Select\n                            options={[\n                              {\n                                value: \"RECENTLY_UPDATED\",\n                                text: \"Recently updated\",\n                              },\n                              {\n                                value: \"RECENTLY_ADDED\",\n                                text: \"Recently added\",\n                              },\n                            ]}\n                          />\n                        </Flex>\n\n                        <Spacer mb={2} />\n\n                        <ArtworksContent\n                          artistID={this.props.artist.id}\n                          columnCount={xs || sm || md ? 2 : 3}\n                          filtered_artworks={\n                            this.props.artist.filtered_artworks as any\n                          }\n                        />\n                      </Box>\n                    </Flex>\n                  </React.Fragment>\n                )\n              }}\n            </Responsive>\n          )\n        }}\n      </Subscribe>\n    )\n  }\n}\n\nexport const ArtworkFilterFragmentContainer = createFragmentContainer(Filter, {\n  artist: graphql`\n    fragment ArtworkFilter_artist on Artist\n      @argumentDefinitions(\n        medium: { type: \"String\", defaultValue: \"*\" }\n        major_periods: { type: \"[String]\" }\n        partner_id: { type: \"ID\" }\n        for_sale: { type: \"Boolean\" }\n        aggregations: {\n          type: \"[ArtworkAggregation]\"\n          defaultValue: [MEDIUM, TOTAL, GALLERY, INSTITUTION, MAJOR_PERIOD]\n        }\n      ) {\n      id\n      filtered_artworks(\n        aggregations: $aggregations\n        medium: $medium\n        major_periods: $major_periods\n        partner_id: $partner_id\n        for_sale: $for_sale\n        size: 0\n      ) {\n        aggregations {\n          slice\n          counts {\n            name\n            count\n            id\n          }\n        }\n        ...ArtworkFilterArtworkGrid_filtered_artworks\n      }\n    }\n  `,\n})\n\nconst Sidebar = Box\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artwork/Components/Share.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artwork/Components/Share.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, Sans, Separator } from \"@artsy/palette\";\nimport Icon from \"../../../Components/Icon\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n// TODO: We need to figure out if this is going to be a new re-usable panel type\n//       in which I wouldn’t want to add this into Share\nvar Container = styled(Flex).withConfig({\n  displayName: \"Share__Container\",\n  componentId: \"s1wcbspo-0\"\n})([\"width:300px;height:216px;border-radius:2px;background-color:#ffffff;box-shadow:0 2px 10px 0 rgba(0,0,0,0.2);\"]);\nvar SansGrow = styled(Sans).withConfig({\n  displayName: \"Share__SansGrow\",\n  componentId: \"s1wcbspo-1\"\n})([\"display:flex;flex-grow:1;\"]);\nvar URLInput = styled.input.withConfig({\n  displayName: \"Share__URLInput\",\n  componentId: \"s1wcbspo-2\"\n})([\"border:0;text-overflow:ellipsis;display:flex;flex-grow:1;color:inherit;\"]);\n\nvar Platform = function Platform(_ref) {\n  var iconName = _ref.iconName,\n      title = _ref.title;\n  return React.createElement(Flex, {\n    flexDirection: \"row\",\n    flexBasis: \"50%\"\n  }, React.createElement(Icon, {\n    name: iconName,\n    color: \"black\"\n  }), React.createElement(Sans, {\n    size: \"3\",\n    color: \"black60\"\n  }, title));\n};\n\nexport var Share =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Share, _React$Component);\n\n  function Share() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Share);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Share)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"input\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"selectURL\", function () {\n      _this.input.focus();\n\n      _this.input.setSelectionRange(0, _this.input.value.length);\n\n      document.execCommand(\"copy\");\n    });\n\n    return _this;\n  }\n\n  _createClass(Share, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        flexDirection: \"column\",\n        p: 2\n      }, React.createElement(Sans, {\n        size: \"3\",\n        weight: \"medium\",\n        color: \"black100\",\n        mb: 2\n      }, \"Share\"), React.createElement(Flex, {\n        flexDirection: \"row\",\n        mb: 1\n      }, React.createElement(SansGrow, {\n        size: \"2\",\n        color: \"black60\",\n        mr: 4\n      }, React.createElement(URLInput, {\n        type: \"text\",\n        readOnly: true,\n        value: this.props.url,\n        innerRef: function innerRef(input) {\n          return _this2.input = input;\n        },\n        onClick: this.selectURL\n      })), React.createElement(\"a\", {\n        onClick: this.selectURL\n      }, React.createElement(Sans, {\n        size: \"2\",\n        weight: \"medium\",\n        color: \"black60\"\n      }, \"Copy\"))), React.createElement(Separator, null), React.createElement(Flex, {\n        flexDirection: \"row\",\n        flexWrap: true\n      }, React.createElement(Platform, {\n        iconName: \"facebook\",\n        title: \"Facebook\"\n      }), React.createElement(Platform, {\n        iconName: \"twitter\",\n        title: \"Twitter\"\n      }), React.createElement(Platform, {\n        iconName: \"mail\",\n        title: \"Email\"\n      }), React.createElement(Platform, {\n        iconName: \"pinterest\",\n        title: \"Pinterest\"\n      }), React.createElement(Platform, {\n        iconName: \"tumblr\",\n        title: \"Tumblr\"\n      })));\n    }\n  }]);\n\n  return Share;\n}(React.Component);",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artwork/Components/Share.tsx"],"names":["Flex","Sans","Separator","Icon","React","styled","Container","SansGrow","URLInput","input","Platform","iconName","title","Share","focus","setSelectionRange","value","length","document","execCommand","props","url","selectURL","Component"],"mappings":"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","sourcesContent":["import { Flex, Sans, Separator } from \"@artsy/palette\"\nimport { IconName } from \"Assets/Icons\"\nimport Icon from \"Components/Icon\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\ninterface ShareProps {\n  url: string\n}\n\n// TODO: We need to figure out if this is going to be a new re-usable panel type\n//       in which I wouldn’t want to add this into Share\nconst Container = styled(Flex)`\n  width: 300px;\n  height: 216px;\n  border-radius: 2px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.2);\n`\n\nconst SansGrow = styled(Sans)`\n  display: flex;\n  flex-grow: 1;\n`\n\nconst URLInput = styled.input`\n  border: 0;\n  text-overflow: ellipsis;\n  display: flex;\n  flex-grow: 1;\n  color: inherit;\n`\n\nconst Platform: React.SFC<{ iconName: IconName; title: string }> = ({\n  iconName,\n  title,\n}) => (\n  <Flex flexDirection=\"row\" flexBasis=\"50%\">\n    <Icon name={iconName} color=\"black\" />\n    <Sans size=\"3\" color=\"black60\">\n      {title}\n    </Sans>\n  </Flex>\n)\n\nexport class Share extends React.Component<ShareProps> {\n  private input: HTMLInputElement\n\n  selectURL = () => {\n    this.input.focus()\n    this.input.setSelectionRange(0, this.input.value.length)\n    document.execCommand(\"copy\")\n  }\n\n  render() {\n    return (\n      <Container flexDirection=\"column\" p={2}>\n        <Sans size=\"3\" weight=\"medium\" color=\"black100\" mb={2}>\n          Share\n        </Sans>\n        <Flex flexDirection=\"row\" mb={1}>\n          <SansGrow size=\"2\" color=\"black60\" mr={4}>\n            <URLInput\n              type=\"text\"\n              readOnly\n              value={this.props.url}\n              innerRef={input => (this.input = input)}\n              onClick={this.selectURL}\n            />\n          </SansGrow>\n          <a onClick={this.selectURL}>\n            <Sans size=\"2\" weight=\"medium\" color=\"black60\">\n              Copy\n            </Sans>\n          </a>\n        </Flex>\n        <Separator />\n        <Flex flexDirection=\"row\" flexWrap>\n          <Platform iconName=\"facebook\" title=\"Facebook\" />\n          <Platform iconName=\"twitter\" title=\"Twitter\" />\n          <Platform iconName=\"mail\" title=\"Email\" />\n          <Platform iconName=\"pinterest\" title=\"Pinterest\" />\n          <Platform iconName=\"tumblr\" title=\"Tumblr\" />\n        </Flex>\n      </Container>\n    )\n  }\n}\n"]}]}
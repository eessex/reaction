{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/WorksForYou/WorksForYouContents.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/WorksForYou/WorksForYouContents.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Flex, Image, Sans, Serif } from \"@artsy/palette\";\nimport ArtworkGrid from \"../../Components/ArtworkGrid\";\nimport Spinner from \"../../Components/Spinner\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createPaginationContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nvar PageSize = 10;\nvar SpinnerContainer = styled.div.withConfig({\n  displayName: \"WorksForYouContents__SpinnerContainer\",\n  componentId: \"s1okbs5y-0\"\n})([\"width:100%;height:100px;position:relative;\"]);\nvar Avatar = styled.div.withConfig({\n  displayName: \"WorksForYouContents__Avatar\",\n  componentId: \"s1okbs5y-1\"\n})([\"border-radius:20px;width:40px;height:40px;\"]);\nvar Container = styled.div.withConfig({\n  displayName: \"WorksForYouContents__Container\",\n  componentId: \"s1okbs5y-2\"\n})([\"&:first-child{margin-top:-10px;}\"]);\nexport var WorksForYouContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WorksForYouContent, _React$Component);\n\n  function WorksForYouContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WorksForYouContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WorksForYouContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      loading: false,\n      interval: null\n    });\n\n    return _this;\n  }\n\n  _createClass(WorksForYouContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var interval = setInterval(function () {\n        _this2.maybeLoadMore();\n      }, 150);\n      this.setState({\n        interval: interval\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.interval) {\n        clearInterval(this.state.interval);\n      }\n    }\n  }, {\n    key: \"maybeLoadMore\",\n    value: function maybeLoadMore() {\n      var threshold = window.innerHeight + window.scrollY;\n      var el = ReactDOM.findDOMNode(this);\n\n      if (threshold >= el.clientHeight + el.scrollTop) {\n        this.loadMoreArtworks();\n      }\n    }\n  }, {\n    key: \"loadMoreArtworks\",\n    value: function loadMoreArtworks() {\n      var _this3 = this;\n\n      var hasMore = this.props.viewer.me.followsAndSaves.notifications.pageInfo.hasNextPage;\n\n      if (!hasMore && this.state.interval) {\n        clearInterval(this.state.interval);\n      }\n\n      if (hasMore && !this.state.loading) {\n        this.setState({\n          loading: true\n        }, function () {\n          _this3.props.relay.loadMore(PageSize, function (error) {\n            if (error) {\n              console.error(error);\n            }\n\n            _this3.setState({\n              loading: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Container, null, this.props.viewer.me.followsAndSaves.notifications.edges.map(function (_ref, index) {\n        var node = _ref.node;\n        return React.createElement(\"div\", {\n          style: {\n            borderBottom: \"1px solid #e5e5e5\"\n          },\n          key: index\n        }, React.createElement(Box, {\n          pt: 6,\n          pb: 3\n        }, React.createElement(Flex, null, node.image && React.createElement(Avatar, null, React.createElement(\"a\", {\n          href: node.href\n        }, React.createElement(Image, {\n          src: node.image.resized.url,\n          width: 40,\n          height: 40,\n          style: {\n            borderRadius: \"20px\"\n          }\n        }))), React.createElement(Box, {\n          ml: 2\n        }, React.createElement(Serif, {\n          style: {\n            textDecoration: \"none\",\n            display: \"inline-block\"\n          },\n          weight: \"semibold\",\n          size: \"3\"\n        }, React.createElement(\"a\", {\n          style: {\n            color: \"black\",\n            textDecoration: \"none\"\n          },\n          href: node.href\n        }, node.artists)), React.createElement(Sans, {\n          style: {\n            color: \"#666\"\n          },\n          size: \"2\"\n        }, node.summary, \", \", node.published_at)))), React.createElement(Box, {\n          pb: 6\n        }, React.createElement(ArtworkGrid, {\n          artworks: node.artworksConnection,\n          columnCount: 3,\n          itemMargin: 40,\n          user: _this4.props.user\n        })));\n      }), React.createElement(SpinnerContainer, null, this.state.loading ? React.createElement(Spinner, null) : \"\"));\n    }\n  }]);\n\n  return WorksForYouContent;\n}(React.Component);\nexport default createPaginationContainer(WorksForYouContent, {\n  viewer: function viewer() {\n    var node = require(\"../../__generated__/WorksForYouContents_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"6c4288aa2182516c66d510c8f3b4562e\") {\n      console.error(\"The definition of 'WorksForYouContents_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/WorksForYouContents_viewer.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.viewer.me.followsAndSaves.notifications;\n  },\n  getFragmentVariables: function getFragmentVariables(prevVars, totalCount) {\n    return _objectSpread({}, prevVars, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(_props, _ref2, fragmentVariables) {\n    var count = _ref2.count,\n        cursor = _ref2.cursor;\n    return _objectSpread({}, fragmentVariables, {\n      count: count,\n      cursor: cursor\n    });\n  },\n  query: function query() {\n    var node = require(\"../../__generated__/WorksForYouContentsPaginationQuery.graphql\");\n\n    if (node.hash && node.hash !== \"88d2c9fcb7aa6b2e80bcd338fef2fcf3\") {\n      console.error(\"The definition of 'WorksForYouContentsPaginationQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/WorksForYouContentsPaginationQuery.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/WorksForYou/WorksForYouContents.tsx"],"names":["Box","Flex","Image","Sans","Serif","ArtworkGrid","Spinner","React","ReactDOM","createPaginationContainer","graphql","styled","PageSize","SpinnerContainer","div","Avatar","Container","WorksForYouContent","loading","interval","setInterval","maybeLoadMore","setState","state","clearInterval","threshold","window","innerHeight","scrollY","el","findDOMNode","clientHeight","scrollTop","loadMoreArtworks","hasMore","props","viewer","me","followsAndSaves","notifications","pageInfo","hasNextPage","relay","loadMore","error","console","edges","map","index","node","borderBottom","image","href","resized","url","borderRadius","textDecoration","display","color","artists","summary","published_at","artworksConnection","user","Component","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","_props","fragmentVariables","cursor","query"],"mappings":"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","sourcesContent":["import { Box, Flex, Image, Sans, Serif } from \"@artsy/palette\"\nimport { WorksForYouContents_viewer } from \"__generated__/WorksForYouContents_viewer.graphql\"\nimport { ContextProps } from \"Artsy\"\nimport ArtworkGrid from \"Components/ArtworkGrid\"\nimport Spinner from \"Components/Spinner\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {\n  ConnectionData,\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\n\ninterface Props extends ContextProps {\n  relay?: RelayPaginationProp\n  user?: User\n  viewer: WorksForYouContents_viewer\n}\n\ninterface State {\n  loading: boolean\n  interval: any\n}\n\nconst PageSize = 10\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`\n\nconst Avatar = styled.div`\n  border-radius: 20px;\n  width: 40px;\n  height: 40px;\n`\n\nconst Container = styled.div`\n  &:first-child {\n    margin-top: -10px;\n  }\n`\n\nexport class WorksForYouContent extends React.Component<Props, State> {\n  state = { loading: false, interval: null }\n\n  componentDidMount() {\n    const interval = setInterval(() => {\n      this.maybeLoadMore()\n    }, 150)\n    this.setState({ interval })\n  }\n\n  componentWillUnmount() {\n    if (this.state.interval) {\n      clearInterval(this.state.interval)\n    }\n  }\n\n  maybeLoadMore() {\n    const threshold = window.innerHeight + window.scrollY\n    const el = ReactDOM.findDOMNode(this) as Element\n    if (threshold >= el.clientHeight + el.scrollTop) {\n      this.loadMoreArtworks()\n    }\n  }\n\n  loadMoreArtworks() {\n    const hasMore = this.props.viewer.me.followsAndSaves.notifications.pageInfo\n      .hasNextPage\n\n    if (!hasMore && this.state.interval) {\n      clearInterval(this.state.interval)\n    }\n    if (hasMore && !this.state.loading) {\n      this.setState({ loading: true }, () => {\n        this.props.relay.loadMore(PageSize, error => {\n          if (error) {\n            console.error(error)\n          }\n\n          this.setState({ loading: false })\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.props.viewer.me.followsAndSaves.notifications.edges.map(\n          ({ node }, index) => {\n            return (\n              <div style={{ borderBottom: \"1px solid #e5e5e5\" }} key={index}>\n                <Box pt={6} pb={3}>\n                  <Flex>\n                    {node.image && (\n                      <Avatar>\n                        <a href={node.href}>\n                          <Image\n                            src={node.image.resized.url}\n                            width={40}\n                            height={40}\n                            style={{ borderRadius: \"20px\" }}\n                          />\n                        </a>\n                      </Avatar>\n                    )}\n                    <Box ml={2}>\n                      <Serif\n                        style={{\n                          textDecoration: \"none\",\n                          display: \"inline-block\",\n                        }}\n                        weight=\"semibold\"\n                        size={\"3\"}\n                      >\n                        <a\n                          style={{ color: \"black\", textDecoration: \"none\" }}\n                          href={node.href}\n                        >\n                          {node.artists}\n                        </a>\n                      </Serif>\n\n                      <Sans style={{ color: \"#666\" }} size={\"2\"}>\n                        {node.summary}, {node.published_at}\n                      </Sans>\n                    </Box>\n                  </Flex>\n                </Box>\n                <Box pb={6}>\n                  <ArtworkGrid\n                    artworks={node.artworksConnection}\n                    columnCount={3}\n                    itemMargin={40}\n                    user={this.props.user}\n                  />\n                </Box>\n              </div>\n            )\n          }\n        )}\n        <SpinnerContainer>\n          {this.state.loading ? <Spinner /> : \"\"}\n        </SpinnerContainer>\n      </Container>\n    )\n  }\n}\n\nexport default createPaginationContainer(\n  WorksForYouContent,\n  {\n    viewer: graphql`\n      fragment WorksForYouContents_viewer on Viewer\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\" }\n          for_sale: { type: \"Boolean\", defaultValue: true }\n        ) {\n        me {\n          followsAndSaves {\n            notifications: bundledArtworksByArtist(\n              sort: PUBLISHED_AT_DESC\n              first: $count\n              after: $cursor\n              for_sale: $for_sale\n            ) @connection(key: \"WorksForYou_notifications\") {\n              pageInfo {\n                hasNextPage\n                endCursor\n              }\n              edges {\n                node {\n                  __id\n                  href\n                  summary\n                  artists\n                  published_at(format: \"MMM DD\")\n                  artworksConnection {\n                    ...ArtworkGrid_artworks\n                  }\n                  image {\n                    resized(height: 80, width: 80) {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.viewer.me.followsAndSaves.notifications as ConnectionData\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return {\n        ...prevVars,\n        count: totalCount,\n      }\n    },\n    getVariables(_props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n      }\n    },\n    query: graphql`\n      query WorksForYouContentsPaginationQuery($count: Int!, $cursor: String) {\n        viewer {\n          ...WorksForYouContents_viewer\n            @arguments(count: $count, cursor: $cursor)\n        }\n      }\n    `,\n  }\n)\n"]}]}
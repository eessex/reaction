{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Publishing/Sections/SectionContainer.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Sections/SectionContainer.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: \", \";\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport styled from \"styled-components\";\nimport { pMedia } from \"../../Helpers\";\nvar BlockquoteWidth = \"900px\";\nvar ColumnWidth = \"680px\";\nvar ColumnWidthClassic = \"580px\";\nvar Fillwidth = \"100%\";\nvar OverflowWidth = \"780px\";\nvar OverflowWidthClassic = \"1100px\";\nexport var SectionContainer = styled.div.attrs({}).withConfig({\n  displayName: \"SectionContainer\",\n  componentId: \"s1v7xsxq-0\"\n})([\"box-sizing:border-box;margin:auto;margin-bottom:40px;width:\", \";max-width:100%;\", \" \", \";\"], function (props) {\n  return getSectionWidth(props.section, props.articleLayout);\n}, function (props) {\n  return pMedia.xl(_templateObject(), props.articleLayout === \"standard\" && \"\\n      width: \".concat(ColumnWidth, \"\\n    \"));\n}, function (props) {\n  return pMedia.md(_templateObject2(), getSectionMobilePadding(props.section));\n});\nexport var getSectionWidth = function getSectionWidth(section, articleLayout) {\n  var layout = section && section.layout || \"column_width\";\n  var maybeOverflow = layout === \"overflow_fillwidth\" ? OverflowWidth : ColumnWidth;\n  var isText = section && section.type === \"text\";\n  var isBlockquote = isText && section.body.includes(\"<blockquote>\");\n\n  switch (articleLayout) {\n    case \"standard\":\n      {\n        if (isBlockquote) {\n          return OverflowWidth;\n        } else {\n          return maybeOverflow;\n        }\n      }\n\n    case \"feature\":\n      {\n        if (isBlockquote) {\n          return BlockquoteWidth;\n        } else if (layout === \"fillwidth\") {\n          return Fillwidth;\n        } else {\n          return maybeOverflow;\n        }\n      }\n\n    case \"classic\":\n      {\n        return layout === \"overflow_fillwidth\" ? OverflowWidthClassic : ColumnWidthClassic;\n      }\n\n    default:\n      return ColumnWidth;\n  }\n};\nexport var getSectionMobilePadding = function getSectionMobilePadding(section) {\n  var type = section && section.type;\n  var isFillWidth = [\"video\", \"image_collection\", \"image_set\"].includes(type);\n  var isMiniImageSet = type === \"image_set\" && section.layout === \"mini\";\n  return !isFillWidth || isMiniImageSet ? \"0 20px\" : 0;\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Publishing/Sections/SectionContainer.tsx"],"names":["styled","pMedia","BlockquoteWidth","ColumnWidth","ColumnWidthClassic","Fillwidth","OverflowWidth","OverflowWidthClassic","SectionContainer","div","attrs","props","getSectionWidth","section","articleLayout","xl","md","getSectionMobilePadding","layout","maybeOverflow","isText","type","isBlockquote","body","includes","isFillWidth","isMiniImageSet"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT;AAGA,IAAMC,eAAe,GAAG,OAAxB;AACA,IAAMC,WAAW,GAAG,OAApB;AACA,IAAMC,kBAAkB,GAAG,OAA3B;AACA,IAAMC,SAAS,GAAG,MAAlB;AACA,IAAMC,aAAa,GAAG,OAAtB;AACA,IAAMC,oBAAoB,GAAG,QAA7B;AAEA,OAAO,IAAMC,gBAAgB,GAAGR,MAAM,CAACS,GAAP,CAAWC,KAAX,CAG7B,EAH6B,CAAH;AAAA;AAAA;AAAA,kGAOlB,UAAAC,KAAK;AAAA,SAAIC,eAAe,CAACD,KAAK,CAACE,OAAP,EAAgBF,KAAK,CAACG,aAAtB,CAAnB;AAAA,CAPa,EAUzB,UAAAH,KAAK;AAAA,SAAIV,MAAM,CAACc,EAAX,oBACHJ,KAAK,CAACG,aAAN,KAAwB,UAAxB,6BAESX,WAFT,WADG;AAAA,CAVoB,EAetB,UAAAQ,KAAK;AAAA,SAAIV,MAAM,CAACe,EAAX,qBACGC,uBAAuB,CAACN,KAAK,CAACE,OAAP,CAD1B;AAAA,CAfiB,CAAtB;AAoBP,OAAO,IAAMD,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,OAD6B,EAE7BC,aAF6B,EAG1B;AACH,MAAMI,MAAM,GAAIL,OAAO,IAAIA,OAAO,CAACK,MAApB,IAA+B,cAA9C;AACA,MAAMC,aAAa,GACjBD,MAAM,KAAK,oBAAX,GAAkCZ,aAAlC,GAAkDH,WADpD;AAEA,MAAMiB,MAAM,GAAGP,OAAO,IAAIA,OAAO,CAACQ,IAAR,KAAiB,MAA3C;AACA,MAAMC,YAAY,GAAGF,MAAM,IAAIP,OAAO,CAACU,IAAR,CAAaC,QAAb,CAAsB,cAAtB,CAA/B;;AAEA,UAAQV,aAAR;AACE,SAAK,UAAL;AAAiB;AACf,YAAIQ,YAAJ,EAAkB;AAChB,iBAAOhB,aAAP;AACD,SAFD,MAEO;AACL,iBAAOa,aAAP;AACD;AACF;;AACD,SAAK,SAAL;AAAgB;AACd,YAAIG,YAAJ,EAAkB;AAChB,iBAAOpB,eAAP;AACD,SAFD,MAEO,IAAIgB,MAAM,KAAK,WAAf,EAA4B;AACjC,iBAAOb,SAAP;AACD,SAFM,MAEA;AACL,iBAAOc,aAAP;AACD;AACF;;AACD,SAAK,SAAL;AAAgB;AACd,eAAOD,MAAM,KAAK,oBAAX,GACHX,oBADG,GAEHH,kBAFJ;AAGD;;AACD;AACE,aAAOD,WAAP;AAvBJ;AAyBD,CAnCM;AAqCP,OAAO,IAAMc,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACJ,OAAD,EAA2B;AAChE,MAAMQ,IAAI,GAAGR,OAAO,IAAIA,OAAO,CAACQ,IAAhC;AACA,MAAMI,WAAW,GAAG,CAAC,OAAD,EAAU,kBAAV,EAA8B,WAA9B,EAA2CD,QAA3C,CAAoDH,IAApD,CAApB;AACA,MAAMK,cAAc,GAAGL,IAAI,KAAK,WAAT,IAAwBR,OAAO,CAACK,MAAR,KAAmB,MAAlE;AAEA,SAAO,CAACO,WAAD,IAAgBC,cAAhB,GAAiC,QAAjC,GAA4C,CAAnD;AACD,CANM","sourcesContent":["import styled from \"styled-components\"\nimport { pMedia } from \"../../Helpers\"\nimport { ArticleLayout, SectionData } from \"../Typings\"\n\nconst BlockquoteWidth = \"900px\"\nconst ColumnWidth = \"680px\"\nconst ColumnWidthClassic = \"580px\"\nconst Fillwidth = \"100%\"\nconst OverflowWidth = \"780px\"\nconst OverflowWidthClassic = \"1100px\"\n\nexport const SectionContainer = styled.div.attrs<{\n  section?: SectionData\n  articleLayout?: ArticleLayout\n}>({})`\n  box-sizing: border-box;\n  margin: auto;\n  margin-bottom: 40px;\n  width: ${props => getSectionWidth(props.section, props.articleLayout)};\n  max-width: 100%;\n\n  ${props => pMedia.xl`\n    ${props.articleLayout === \"standard\" &&\n      `\n      width: ${ColumnWidth}\n    `}\n  `} ${props => pMedia.md`\n    padding: ${getSectionMobilePadding(props.section)};\n  `};\n`\n\nexport const getSectionWidth = (\n  section?: SectionData,\n  articleLayout?: ArticleLayout\n) => {\n  const layout = (section && section.layout) || \"column_width\"\n  const maybeOverflow =\n    layout === \"overflow_fillwidth\" ? OverflowWidth : ColumnWidth\n  const isText = section && section.type === \"text\"\n  const isBlockquote = isText && section.body.includes(\"<blockquote>\")\n\n  switch (articleLayout) {\n    case \"standard\": {\n      if (isBlockquote) {\n        return OverflowWidth\n      } else {\n        return maybeOverflow\n      }\n    }\n    case \"feature\": {\n      if (isBlockquote) {\n        return BlockquoteWidth\n      } else if (layout === \"fillwidth\") {\n        return Fillwidth\n      } else {\n        return maybeOverflow\n      }\n    }\n    case \"classic\": {\n      return layout === \"overflow_fillwidth\"\n        ? OverflowWidthClassic\n        : ColumnWidthClassic\n    }\n    default:\n      return ColumnWidth\n  }\n}\n\nexport const getSectionMobilePadding = (section?: SectionData) => {\n  const type = section && section.type\n  const isFillWidth = [\"video\", \"image_collection\", \"image_set\"].includes(type)\n  const isMiniImageSet = type === \"image_set\" && section.layout === \"mini\"\n\n  return !isFillWidth || isMiniImageSet ? \"0 20px\" : 0\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Artwork/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Artwork/index.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // @ts-ignore\n\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport styled, { css } from \"styled-components\";\nimport theme from \"../../Assets/Theme\";\nimport RelayMetadata, { Metadata } from \"./Metadata\";\nvar Container = styled.div.withConfig({\n  displayName: \"Artwork__Container\",\n  componentId: \"s1cqdy0c-0\"\n})([\"width:100%;\"]);\nvar ImageContainer = styled.div.withConfig({\n  displayName: \"Artwork__ImageContainer\",\n  componentId: \"s1cqdy0c-1\"\n})([\"width:100%;position:relative;cursor:pointer;&:before{content:\\\"\\\";display:block;padding-bottom:100%;}& .overlay-container{transition:opacity 0.25s;&.hovered{opacity:0;visibility:hidden;}&.selected{opacity:1;visibility:visible;}}&:hover{& .overlay-container.hovered{\", \";}}\"], css([\"@media (min-width:\", \"px){opacity:1;visibility:visible;}\"], theme.flexboxgrid.breakpoints.sm + 1));\nvar Image = styled.img.withConfig({\n  displayName: \"Artwork__Image\",\n  componentId: \"s1cqdy0c-2\"\n})([\"max-width:100%;max-height:100%;margin:auto;position:absolute;left:0;top:0;bottom:0;right:0;\"]);\nexport var Artwork =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Artwork, _React$Component);\n\n  function Artwork() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Artwork);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Artwork)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isSelected: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSelected\", function (e) {\n      if (!_this.props.Overlay) {\n        return;\n      }\n\n      _this.setState({\n        isSelected: !_this.state.isSelected\n      });\n\n      if (_this.props.onSelect) {\n        _this.props.onSelect(!_this.state.isSelected);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Artwork, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          artwork = _this$props.artwork,\n          Overlay = _this$props.Overlay,\n          useRelay = _this$props.useRelay,\n          showOverlayOnHover = _this$props.showOverlayOnHover;\n      var overlayClasses = \"overlay-container\";\n      overlayClasses += showOverlayOnHover ? \" hovered\" : \"\";\n      overlayClasses += this.state.isSelected ? \" selected\" : \"\";\n      var MetadataBlock = useRelay ? RelayMetadata : Metadata;\n      return React.createElement(Container, {\n        onClick: this.onSelected\n      }, React.createElement(ImageContainer, null, React.createElement(Image, {\n        src: artwork.image.url\n      }), React.createElement(\"div\", {\n        className: overlayClasses\n      }, Overlay && React.createElement(Overlay, {\n        selected: this.state.isSelected,\n        useRelay: useRelay\n      }))), React.createElement(MetadataBlock, {\n        extended: this.props.extended,\n        artwork: artwork,\n        useRelay: useRelay\n      }));\n    }\n  }]);\n\n  return Artwork;\n}(React.Component);\n\n_defineProperty(Artwork, \"defaultProps\", {\n  extended: true,\n  overlay: null,\n  useRelay: true,\n  showOverlayOnHover: false\n});\n\nexport default createFragmentContainer(Artwork, {\n  artwork: function artwork() {\n    var node = require(\"../../__generated__/Artwork_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"05646294ec1ef54a4ec29ece7e30681e\") {\n      console.error(\"The definition of 'Artwork_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Artwork_artwork.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Artwork/index.tsx"],"names":["React","createFragmentContainer","graphql","styled","css","theme","RelayMetadata","Metadata","Container","div","ImageContainer","flexboxgrid","breakpoints","sm","Image","img","Artwork","isSelected","e","props","Overlay","setState","state","onSelect","artwork","useRelay","showOverlayOnHover","overlayClasses","MetadataBlock","onSelected","image","url","extended","Component","overlay"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAuBC,uBAAvB,EAAgDC,OAAhD,QAA+D,aAA/D;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,KAAP;AACA,OAAOC,aAAP,IAAwBC,QAAxB;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,mBAAf;AAIA,IAAMC,cAAc,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,yRA2BZL,GA3BY,+DA4BSC,KAAK,CAACM,WAAN,CAAkBC,WAAlB,CAA8BC,EAA9B,GAAmC,CA5B5C,EAApB;AAqCA,IAAMC,KAAK,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,mGAAX;AA6BA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,oFAQU;AACNC,MAAAA,UAAU,EAAE;AADN,KARV;;AAAA,yFAYe,UAAAC,CAAC,EAAI;AAChB,UAAI,CAAC,MAAKC,KAAL,CAAWC,OAAhB,EAAyB;AACvB;AACD;;AAED,YAAKC,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAE,CAAC,MAAKK,KAAL,CAAWL;AADZ,OAAd;;AAIA,UAAI,MAAKE,KAAL,CAAWI,QAAf,EAAyB;AACvB,cAAKJ,KAAL,CAAWI,QAAX,CAAoB,CAAC,MAAKD,KAAL,CAAWL,UAAhC;AACD;AACF,KAxBH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BA0BW;AAAA,wBACoD,KAAKE,KADzD;AAAA,UACCK,OADD,eACCA,OADD;AAAA,UACUJ,OADV,eACUA,OADV;AAAA,UACmBK,QADnB,eACmBA,QADnB;AAAA,UAC6BC,kBAD7B,eAC6BA,kBAD7B;AAEP,UAAIC,cAAc,GAAG,mBAArB;AAEAA,MAAAA,cAAc,IAAID,kBAAkB,GAAG,UAAH,GAAgB,EAApD;AACAC,MAAAA,cAAc,IAAI,KAAKL,KAAL,CAAWL,UAAX,GAAwB,WAAxB,GAAsC,EAAxD;AAEA,UAAMW,aAAa,GAAGH,QAAQ,GAAGnB,aAAH,GAAmBC,QAAjD;AAEA,aACE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKsB;AAAzB,SACE,oBAAC,cAAD,QACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEL,OAAO,CAACM,KAAR,CAAcC;AAA1B,QADF,EAEE;AAAK,QAAA,SAAS,EAAEJ;AAAhB,SACGP,OAAO,IACN,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWL,UAA9B;AAA0C,QAAA,QAAQ,EAAEQ;AAApD,QAFJ,CAFF,CADF,EASE,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWa,QADvB;AAEE,QAAA,OAAO,EAAER,OAFX;AAGE,QAAA,QAAQ,EAAEC;AAHZ,QATF,CADF;AAiBD;AApDH;;AAAA;AAAA,EAA6BzB,KAAK,CAACiC,SAAnC;;gBAAajB,O,kBACW;AACpBgB,EAAAA,QAAQ,EAAE,IADU;AAEpBE,EAAAA,OAAO,EAAE,IAFW;AAGpBT,EAAAA,QAAQ,EAAE,IAHU;AAIpBC,EAAAA,kBAAkB,EAAE;AAJA,C;;AAsDxB,eAAezB,uBAAuB,CACpCe,OADoC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAAtC","sourcesContent":["import { Artwork_artwork } from \"__generated__/Artwork_artwork.graphql\"\nimport React from \"react\"\n// @ts-ignore\nimport { ComponentRef, createFragmentContainer, graphql } from \"react-relay\"\nimport styled, { css } from \"styled-components\"\nimport theme from \"../../Assets/Theme\"\nimport RelayMetadata, { Metadata } from \"./Metadata\"\n\nconst Container = styled.div`\n  width: 100%;\n`\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n\n  &:before {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n\n  & .overlay-container {\n    transition: opacity 0.25s;\n\n    &.hovered {\n      opacity: 0;\n      visibility: hidden;\n    }\n\n    &.selected {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  &:hover {\n    & .overlay-container.hovered {\n      ${css`\n        @media (min-width: ${theme.flexboxgrid.breakpoints.sm + 1}px) {\n          opacity: 1;\n          visibility: visible;\n        }\n      `};\n    }\n  }\n`\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  margin: auto;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport interface OverlayProps {\n  selected: boolean\n  useRelay?: boolean\n}\n\nexport interface ArtworkProps {\n  extended?: boolean\n  Overlay?: React.SFC<OverlayProps>\n  useRelay?: boolean\n  artwork: Artwork_artwork\n  onSelect?: (selected: boolean) => void\n  showOverlayOnHover?: boolean\n}\n\nexport interface ArtworkState {\n  isSelected: boolean\n}\n\nexport class Artwork extends React.Component<ArtworkProps, ArtworkState> {\n  static defaultProps = {\n    extended: true,\n    overlay: null,\n    useRelay: true,\n    showOverlayOnHover: false,\n  }\n\n  state = {\n    isSelected: false,\n  }\n\n  onSelected = e => {\n    if (!this.props.Overlay) {\n      return\n    }\n\n    this.setState({\n      isSelected: !this.state.isSelected,\n    })\n\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.state.isSelected)\n    }\n  }\n\n  render() {\n    const { artwork, Overlay, useRelay, showOverlayOnHover } = this.props\n    let overlayClasses = \"overlay-container\"\n\n    overlayClasses += showOverlayOnHover ? \" hovered\" : \"\"\n    overlayClasses += this.state.isSelected ? \" selected\" : \"\"\n\n    const MetadataBlock = useRelay ? RelayMetadata : Metadata\n\n    return (\n      <Container onClick={this.onSelected}>\n        <ImageContainer>\n          <Image src={artwork.image.url} />\n          <div className={overlayClasses}>\n            {Overlay && (\n              <Overlay selected={this.state.isSelected} useRelay={useRelay} />\n            )}\n          </div>\n        </ImageContainer>\n        <MetadataBlock\n          extended={this.props.extended}\n          artwork={artwork}\n          useRelay={useRelay}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  Artwork,\n  graphql`\n    fragment Artwork_artwork on Artwork {\n      id\n      image {\n        url(version: \"large\")\n        aspect_ratio\n      }\n      ...Metadata_artwork\n    }\n  `\n)\n"]}]}
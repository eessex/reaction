{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Utils/Events.ts","dependencies":[{"path":"/Users/eve/development/reaction/src/Utils/Events.ts","mtime":1524585020000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* tslint:disable:no-namespace */\nvar emitter = typeof window !== \"undefined\" ? window.__reactionEventsEventEmitter || (window.__reactionEventsEventEmitter = new _events.default()) : new _events.default();\n\nvar postEvent = function postEvent(data) {\n  return emitter.emit(\"postEvent\", data);\n};\n\nvar onEvent = function onEvent(callback) {\n  return emitter.on(\"postEvent\", callback);\n};\n\nvar _default = {\n  postEvent: postEvent,\n  onEvent: onEvent,\n  emitter: emitter\n};\nexports.default = _default;",{"version":3,"sources":["src/Utils/Events.ts"],"names":["emitter","window","__reactionEventsEventEmitter","postEvent","emit","data","onEvent","on","callback"],"mappings":";;;;;;;AAAA;;;;AAQA;AAEA,IAAMA,UACJ,OAAOC,MAAP,KAAkB,WAAlB,GACIA,OAAOC,4BAAP,KACCD,OAAOC,4BAAP,GAAsC,qBADvC,CADJ,GAGI,qBAJN;;AAKA,IAAMC,YAAY,SAAZA,SAAY;AAAA,SAAQH,QAAQI,IAAR,CAAa,WAAb,EAA0BC,IAA1B,CAAR;AAAA,CAAlB;;AACA,IAAMC,UAAU,SAAVA,OAAU;AAAA,SAAYN,QAAQO,EAAR,CAAW,WAAX,EAAwBC,QAAxB,CAAZ;AAAA,CAAhB;;eAEe;AAAEL,sBAAF;AAAaG,kBAAb;AAAsBN;AAAtB,C","file":"/Users/eve/development/reaction/src/Utils/Events.ts","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import EventEmitter from \"events\"\n\n/* tslint:disable:no-namespace */\ndeclare global {\n  interface Window {\n    __reactionEventsEventEmitter: any\n  }\n}\n/* tslint:disable:no-namespace */\n\nconst emitter =\n  typeof window !== \"undefined\"\n    ? window.__reactionEventsEventEmitter ||\n      (window.__reactionEventsEventEmitter = new EventEmitter())\n    : new EventEmitter()\nconst postEvent = data => emitter.emit(\"postEvent\", data)\nconst onEvent = callback => emitter.on(\"postEvent\", callback)\n\nexport default { postEvent, onEvent, emitter }\n"]}]}
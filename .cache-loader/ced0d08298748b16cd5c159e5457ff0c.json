{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Wizard/Wizard.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Wizard/Wizard.tsx","mtime":1524747864000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Wizard = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _formik = require(\"formik\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * Generate a multi-step wizard wrapped in a form.\n * steps can be an Array of children of the shape\n *\n * The wizard can be used in two different ways,\n * using the render prop API or passing steps in\n * as children.\n *\n * @example\n *\n * ```javascript\n * <Wizard steps={[<Step />, <Step />]}>\n *  {({ wizard, form }) => {\n *   <div>\n *     Current step: {wizard.currentStepIndex}\n *     <div>{wizard.currentStep}</div>\n *     <NextButton onClick={wizard.next} />\n *   </div>\n *  }}\n * </Wizard>\n * ```\n *\n * or\n *\n * ```javascript\n * <Wizard>\n *   <Step />\n *   <Step />\n * </Wizard>\n * ```\n */\nvar Wizard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wizard, _React$Component);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _possibleConstructorReturn(this, (Wizard.__proto__ || Object.getPrototypeOf(Wizard)).call(this, props));\n    Object.defineProperty(_assertThisInitialized(_this), \"next\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(e, values) {\n        e && e.preventDefault();\n\n        _this.setState(function (state) {\n          return {\n            currentStepIndex: Math.min(state.currentStepIndex + 1, _this.steps.length - 1),\n            values: values\n          };\n        });\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"previous\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(e, values) {\n        e && e.preventDefault();\n\n        _this.setState(function (state) {\n          return {\n            currentStepIndex: Math.max(state.currentStepIndex - 1, 0)\n          };\n        });\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"handleSubmit\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(values, actions) {\n        var onComplete = _this.props.onComplete;\n\n        if (_this.isLastStep) {\n          onComplete && onComplete(values, actions);\n        } else {\n          actions && actions.setSubmitting(false);\n\n          _this.next(null, values);\n        }\n      }\n    });\n    _this.state = {\n      currentStepIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          initialValues = _props.initialValues,\n          children = _props.children;\n      var _currentStep$props = this.currentStep.props,\n          validate = _currentStep$props.validate,\n          validationSchema = _currentStep$props.validationSchema;\n      return _react.default.createElement(_formik.Formik, {\n        initialValues: initialValues,\n        validate: validate,\n        validationSchema: validationSchema,\n        onSubmit: this.handleSubmit,\n        render: function render(formikRenderProps) {\n          var context = {\n            wizard: _this2.wizardProps,\n            form: formikRenderProps\n          };\n          return _react.default.createElement(\"form\", {\n            onSubmit: formikRenderProps.handleSubmit\n          }, _react.default.createElement(WizardContextProvider, context, !!_this2.props.steps ? _react.default.createElement(children, context) : _this2.currentStep));\n        }\n      });\n    }\n  }, {\n    key: \"steps\",\n    get: function get() {\n      if (!!this.props.steps) {\n        return this.props.steps;\n      } else {\n        return _react.default.Children.toArray(this.props.children);\n      }\n    }\n  }, {\n    key: \"currentStep\",\n    get: function get() {\n      return this.steps[this.state.currentStepIndex];\n    }\n  }, {\n    key: \"isLastStep\",\n    get: function get() {\n      return this.state.currentStepIndex === this.steps.length - 1;\n    }\n  }, {\n    key: \"wizardProps\",\n    get: function get() {\n      return {\n        currentStep: this.currentStep,\n        isLastStep: this.isLastStep,\n        previous: this.previous,\n        next: this.next,\n        currentStepIndex: this.state.currentStepIndex,\n        steps: this.steps\n      };\n    }\n  }]);\n\n  return Wizard;\n}(_react.default.Component);\n\nexports.Wizard = Wizard;\nObject.defineProperty(Wizard, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    initialValues: null\n  }\n});\n\nvar WizardContextProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WizardContextProvider, _Component);\n\n  function WizardContextProvider() {\n    _classCallCheck(this, WizardContextProvider);\n\n    return _possibleConstructorReturn(this, (WizardContextProvider.__proto__ || Object.getPrototypeOf(WizardContextProvider)).apply(this, arguments));\n  }\n\n  _createClass(WizardContextProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        wizard: this.props.wizard,\n        form: this.props.form\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return WizardContextProvider;\n}(_react.Component);\n\nObject.defineProperty(WizardContextProvider, \"childContextTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    wizard: _propTypes.default.object,\n    form: _propTypes.default.object\n  }\n});",{"version":3,"sources":["src/Components/Wizard/Wizard.tsx"],"names":["Wizard","props","e","values","preventDefault","setState","currentStepIndex","Math","min","state","steps","length","max","actions","onComplete","isLastStep","setSubmitting","next","initialValues","children","currentStep","validate","validationSchema","handleSubmit","context","wizard","wizardProps","form","formikRenderProps","createElement","Children","toArray","previous","Component","WizardContextProvider","object"],"mappings":"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","file":"/Users/eve/development/reaction/src/Components/Wizard/Wizard.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StepElement, StepProps, WizardRenderProps } from \"./types\"\nimport { Formik, FormikActions } from \"formik\"\nimport { FormValues, WizardContext } from \"./types\"\n\ninterface WizardProps {\n  onComplete?: (\n    values?: FormValues,\n    actions?: FormikActions<FormValues>\n  ) => void\n  initialValues?: any\n  steps?: StepElement[]\n  children?:\n    | ((\n        props: { wizard: WizardRenderProps; form: any }\n      ) => React.ReactElement<any>)\n    | StepElement\n    | StepElement[]\n}\n\ninterface WizardState {\n  currentStepIndex: number\n}\n\n/**\n * Generate a multi-step wizard wrapped in a form.\n * steps can be an Array of children of the shape\n *\n * The wizard can be used in two different ways,\n * using the render prop API or passing steps in\n * as children.\n *\n * @example\n *\n * ```javascript\n * <Wizard steps={[<Step />, <Step />]}>\n *  {({ wizard, form }) => {\n *   <div>\n *     Current step: {wizard.currentStepIndex}\n *     <div>{wizard.currentStep}</div>\n *     <NextButton onClick={wizard.next} />\n *   </div>\n *  }}\n * </Wizard>\n * ```\n *\n * or\n *\n * ```javascript\n * <Wizard>\n *   <Step />\n *   <Step />\n * </Wizard>\n * ```\n */\nexport class Wizard extends React.Component<WizardProps, WizardState> {\n  static defaultProps = {\n    initialValues: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentStepIndex: 0,\n    }\n  }\n\n  get steps(): StepElement[] {\n    if (!!this.props.steps) {\n      return this.props.steps\n    } else {\n      return React.Children.toArray(this.props.children) as Array<\n        React.ReactElement<StepProps>\n      >\n    }\n  }\n\n  get currentStep() {\n    return this.steps[this.state.currentStepIndex] as StepElement\n  }\n\n  get isLastStep() {\n    return this.state.currentStepIndex === this.steps.length - 1\n  }\n\n  get wizardProps(): WizardRenderProps {\n    return {\n      currentStep: this.currentStep,\n      isLastStep: this.isLastStep,\n      previous: this.previous,\n      next: this.next,\n      currentStepIndex: this.state.currentStepIndex,\n      steps: this.steps,\n    }\n  }\n\n  next = (e: React.FormEvent<any> | null, values) => {\n    e && e.preventDefault()\n    this.setState(state => ({\n      currentStepIndex: Math.min(\n        state.currentStepIndex + 1,\n        this.steps.length - 1\n      ),\n      values,\n    }))\n  }\n\n  previous = (e: React.FormEvent<any> | null, values) => {\n    e && e.preventDefault()\n    this.setState(state => ({\n      currentStepIndex: Math.max(state.currentStepIndex - 1, 0),\n    }))\n  }\n\n  handleSubmit: (\n    values: FormValues,\n    actions?: FormikActions<FormValues>\n  ) => void = (values, actions) => {\n    const { onComplete } = this.props\n    if (this.isLastStep) {\n      onComplete && onComplete(values, actions)\n    } else {\n      actions && actions.setSubmitting(false)\n      this.next(null, values)\n    }\n  }\n\n  render() {\n    const { initialValues, children } = this.props\n    const { validate, validationSchema } = this.currentStep.props\n\n    return (\n      <Formik\n        initialValues={initialValues}\n        validate={validate}\n        validationSchema={validationSchema}\n        onSubmit={this.handleSubmit}\n        render={formikRenderProps => {\n          const context: WizardContext = {\n            wizard: this.wizardProps,\n            form: formikRenderProps,\n          }\n\n          return (\n            <form onSubmit={formikRenderProps.handleSubmit}>\n              <WizardContextProvider {...context}>\n                {!!this.props.steps\n                  ? React.createElement(children as any, context)\n                  : this.currentStep}\n              </WizardContextProvider>\n            </form>\n          )\n        }}\n      />\n    )\n  }\n}\n\nclass WizardContextProvider extends Component<WizardContext> {\n  static childContextTypes = {\n    wizard: PropTypes.object,\n    form: PropTypes.object,\n  }\n\n  getChildContext(): WizardContext {\n    return {\n      wizard: this.props.wizard,\n      form: this.props.form,\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/WorksForYou/WorksForYouArtist.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/WorksForYou/WorksForYouArtist.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Flex, Image, Sans, Serif, themeProps } from \"@artsy/palette\";\nimport ArtworkGrid from \"../../Components/ArtworkGrid\";\nimport Spinner from \"../../Components/Spinner\";\nimport * as React from \"react\";\nimport { createPaginationContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nvar PageSize = 10;\nvar SpinnerContainer = styled.div.withConfig({\n  displayName: \"WorksForYouArtist__SpinnerContainer\",\n  componentId: \"s1hl6wi9-0\"\n})([\"width:100%;height:100px;position:relative;\"]);\nvar Avatar = styled.div.withConfig({\n  displayName: \"WorksForYouArtist__Avatar\",\n  componentId: \"s1hl6wi9-1\"\n})([\"border-radius:20px;width:40px;height:40px;\"]);\nvar Container = styled.div.withConfig({\n  displayName: \"WorksForYouArtist__Container\",\n  componentId: \"s1hl6wi9-2\"\n})([\"&:first-child{margin-top:-10px;}\"]);\nexport var WorksForYouArtist =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WorksForYouArtist, _React$Component);\n\n  function WorksForYouArtist() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WorksForYouArtist);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WorksForYouArtist)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      loading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(WorksForYouArtist, [{\n    key: \"loadMoreArtworks\",\n    value: function loadMoreArtworks() {\n      var _this2 = this;\n\n      var hasMore = this.props.viewer.artist.artworks_connection.pageInfo.hasNextPage;\n\n      if (hasMore && !this.state.loading) {\n        this.setState({\n          loading: true\n        }, function () {\n          _this2.props.relay.loadMore(PageSize, function (error) {\n            if (error) {\n              console.error(error);\n            }\n\n            _this2.setState({\n              loading: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var artist = this.props.viewer.artist;\n      var forSale = this.props.forSale;\n      return React.createElement(Container, null, React.createElement(\"div\", {\n        style: {\n          padding: \"50px 0px 30px 0px\"\n        }\n      }, React.createElement(Flex, null, artist.image && React.createElement(Avatar, null, React.createElement(\"a\", {\n        href: artist.href\n      }, React.createElement(Image, {\n        src: artist.image.resized.url,\n        width: 40,\n        height: 40,\n        style: {\n          borderRadius: \"20px\"\n        }\n      }))), React.createElement(Box, {\n        ml: 2\n      }, React.createElement(Serif, {\n        style: {\n          textDecoration: \"none\",\n          display: \"inline-block\"\n        },\n        weight: \"semibold\",\n        size: \"3\"\n      }, React.createElement(\"a\", {\n        style: {\n          color: \"black\",\n          textDecoration: \"none\"\n        },\n        href: artist.href\n      }, artist.name)), React.createElement(Sans, {\n        color: themeProps.colors.black60,\n        size: \"2\"\n      }, forSale ? artist.counts.for_sale_artworks.toLocaleString() : artist.counts.artworks.toLocaleString(), \" \", \"works\")))), React.createElement(ArtworkGrid, {\n        artworks: artist.artworks_connection,\n        columnCount: 3,\n        itemMargin: 40,\n        onLoadMore: function onLoadMore() {\n          return _this3.loadMoreArtworks();\n        },\n        user: this.props.user\n      }), React.createElement(SpinnerContainer, null, this.state.loading ? React.createElement(Spinner, null) : \"\"));\n    }\n  }]);\n\n  return WorksForYouArtist;\n}(React.Component);\nexport default createPaginationContainer(WorksForYouArtist, {\n  viewer: function viewer() {\n    var node = require(\"../../__generated__/WorksForYouArtist_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"6c20fc3ca786df452d88571191e038f4\") {\n      console.error(\"The definition of 'WorksForYouArtist_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/WorksForYouArtist_viewer.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.viewer.artist.artworks_connection;\n  },\n  getFragmentVariables: function getFragmentVariables(prevVars, totalCount) {\n    return _objectSpread({}, prevVars, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(_props, _ref, fragmentVariables) {\n    var count = _ref.count,\n        cursor = _ref.cursor;\n    return _objectSpread({}, fragmentVariables, {\n      count: count,\n      cursor: cursor\n    });\n  },\n  query: function query() {\n    var node = require(\"../../__generated__/WorksForYouArtistPaginationQuery.graphql\");\n\n    if (node.hash && node.hash !== \"93c49ee12fe3d42e24ae2fa90e133bc5\") {\n      console.error(\"The definition of 'WorksForYouArtistPaginationQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/WorksForYouArtistPaginationQuery.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/WorksForYou/WorksForYouArtist.tsx"],"names":["Box","Flex","Image","Sans","Serif","themeProps","ArtworkGrid","Spinner","React","createPaginationContainer","graphql","styled","PageSize","SpinnerContainer","div","Avatar","Container","WorksForYouArtist","loading","hasMore","props","viewer","artist","artworks_connection","pageInfo","hasNextPage","state","setState","relay","loadMore","error","console","forSale","padding","image","href","resized","url","borderRadius","textDecoration","display","color","name","colors","black60","counts","for_sale_artworks","toLocaleString","artworks","loadMoreArtworks","user","Component","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","_props","fragmentVariables","cursor","query"],"mappings":"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","sourcesContent":["import { Box, Flex, Image, Sans, Serif, themeProps } from \"@artsy/palette\"\nimport { WorksForYouArtist_viewer } from \"__generated__/WorksForYouArtist_viewer.graphql\"\nimport { ContextProps } from \"Artsy\"\nimport ArtworkGrid from \"Components/ArtworkGrid\"\nimport Spinner from \"Components/Spinner\"\nimport * as React from \"react\"\nimport {\n  ConnectionData,\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\n\ninterface Props extends ContextProps {\n  relay?: RelayPaginationProp\n  viewer: WorksForYouArtist_viewer\n  artistID: string\n  forSale?: boolean\n}\n\ninterface State {\n  loading: boolean\n}\n\nconst PageSize = 10\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`\n\nconst Avatar = styled.div`\n  border-radius: 20px;\n  width: 40px;\n  height: 40px;\n`\n\nconst Container = styled.div`\n  &:first-child {\n    margin-top: -10px;\n  }\n`\n\nexport class WorksForYouArtist extends React.Component<Props, State> {\n  state = { loading: false }\n\n  loadMoreArtworks() {\n    const hasMore = this.props.viewer.artist.artworks_connection.pageInfo\n      .hasNextPage\n\n    if (hasMore && !this.state.loading) {\n      this.setState({ loading: true }, () => {\n        this.props.relay.loadMore(PageSize, error => {\n          if (error) {\n            console.error(error)\n          }\n\n          this.setState({ loading: false })\n        })\n      })\n    }\n  }\n\n  render() {\n    const { artist } = this.props.viewer\n    const { forSale } = this.props\n    return (\n      <Container>\n        <div style={{ padding: \"50px 0px 30px 0px\" }}>\n          <Flex>\n            {artist.image && (\n              <Avatar>\n                <a href={artist.href}>\n                  <Image\n                    src={artist.image.resized.url}\n                    width={40}\n                    height={40}\n                    style={{ borderRadius: \"20px\" }}\n                  />\n                </a>\n              </Avatar>\n            )}\n            <Box ml={2}>\n              <Serif\n                style={{ textDecoration: \"none\", display: \"inline-block\" }}\n                weight=\"semibold\"\n                size={\"3\"}\n              >\n                <a\n                  style={{ color: \"black\", textDecoration: \"none\" }}\n                  href={artist.href}\n                >\n                  {artist.name}\n                </a>\n              </Serif>\n\n              <Sans color={themeProps.colors.black60} size={\"2\"}>\n                {forSale\n                  ? artist.counts.for_sale_artworks.toLocaleString()\n                  : artist.counts.artworks.toLocaleString()}{\" \"}\n                works\n              </Sans>\n            </Box>\n          </Flex>\n        </div>\n        <ArtworkGrid\n          artworks={artist.artworks_connection}\n          columnCount={3}\n          itemMargin={40}\n          onLoadMore={() => this.loadMoreArtworks()}\n          user={this.props.user}\n        />\n        <SpinnerContainer>\n          {this.state.loading ? <Spinner /> : \"\"}\n        </SpinnerContainer>\n      </Container>\n    )\n  }\n}\n\nexport default createPaginationContainer(\n  WorksForYouArtist,\n  {\n    viewer: graphql`\n      fragment WorksForYouArtist_viewer on Viewer\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\" }\n          artistID: { type: \"String!\", defaultValue: \"\" }\n          filter: {\n            type: \"[ArtistArtworksFilters]\"\n            defaultValue: [IS_FOR_SALE]\n          }\n        ) {\n        artist(id: $artistID) {\n          name\n          href\n          counts {\n            artworks\n            for_sale_artworks\n          }\n          image {\n            resized(height: 80, width: 80) {\n              url\n            }\n          }\n          artworks_connection(\n            sort: published_at_desc\n            first: $count\n            after: $cursor\n            filter: $filter\n          ) @connection(key: \"WorksForYouArtist_artworks_connection\") {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            ...ArtworkGrid_artworks\n            edges {\n              node {\n                __id\n              }\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.viewer.artist.artworks_connection as ConnectionData\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return {\n        ...prevVars,\n        count: totalCount,\n      }\n    },\n    getVariables(_props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n      }\n    },\n    query: graphql`\n      query WorksForYouArtistPaginationQuery(\n        $artistID: String!\n        $count: Int!\n        $cursor: String\n        $filter: [ArtistArtworksFilters]\n      ) {\n        viewer {\n          ...WorksForYouArtist_viewer\n            @arguments(\n              artistID: $artistID\n              count: $count\n              cursor: $cursor\n              filter: $filter\n            )\n        }\n      }\n    `,\n  }\n)\n"]}]}
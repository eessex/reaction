{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Spinner.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Spinner.tsx","mtime":1530111312000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nexport var Spinner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Spinner, _React$Component);\n\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Spinner).apply(this, arguments));\n  }\n\n  _createClass(Spinner, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.props.className\n      });\n    }\n  }]);\n\n  return Spinner;\n}(React.Component);\nvar spin = keyframes([\"100%{transform:rotate(360deg)}\"]);\n\nvar getSize = function getSize(props) {\n  var base = {\n    width: 25,\n    height: 6 // tslint:disable-next-line\n\n  };\n\n  switch (props.spinnerSize) {\n    case \"small\":\n      return {\n        width: base.width * 0.5,\n        height: base.height * 0.5\n      };\n\n    case \"medium\":\n      return {\n        width: base.width * 0.8,\n        height: base.height * 0.8\n      };\n\n    case \"large\":\n      return {\n        width: base.width,\n        height: base.height\n      };\n\n    default:\n      return {\n        width: props.width,\n        height: props.height\n      };\n  }\n};\n\nvar StyledSpinner = styled(Spinner).withConfig({\n  displayName: \"Spinner__StyledSpinner\",\n  componentId: \"s1a7qnq6-0\"\n})([\"background:black;animation:\", \" 1s infinite linear;position:absolute;\", \";\"], spin, function (props) {\n  var _getSize = getSize(props),\n      width = _getSize.width,\n      height = _getSize.height;\n\n  return \"\\n      width: \".concat(width, \"px;\\n      height: \").concat(height, \"px;\\n      top: calc(50% - \").concat(height, \"px / 2);\\n      left: calc(50% - \").concat(width, \"px / 2);\\n    \");\n});\nStyledSpinner.defaultProps = {\n  width: 25,\n  height: 6\n};\nexport default StyledSpinner;",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Spinner.tsx"],"names":["React","styled","keyframes","Spinner","props","className","Component","spin","getSize","base","width","height","spinnerSize","StyledSpinner","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAQA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AACP,aAAO;AAAK,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC;AAA3B,QAAP;AACD;AAHH;;AAAA;AAAA,EAA6BL,KAAK,CAACM,SAAnC;AAMA,IAAMC,IAAI,GAAGL,SAAH,oCAAV;;AAMA,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAAAJ,KAAK,EAAI;AACvB,MAAMK,IAAI,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE,CAArB,CAEb;;AAFa,GAAb;;AAGA,UAAQP,KAAK,CAACQ,WAAd;AACE,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAa,GADf;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAFjB,OAAP;;AAIF,SAAK,QAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAa,GADf;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAFjB,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAED,IAAI,CAACC,KADP;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE;AAFR,OAAP;;AAIF;AACE,aAAO;AACLD,QAAAA,KAAK,EAAEN,KAAK,CAACM,KADR;AAELC,QAAAA,MAAM,EAAEP,KAAK,CAACO;AAFT,OAAP;AAjBJ;AAsBD,CA1BD;;AA4BA,IAAME,aAAa,GAAGZ,MAAM,CAACE,OAAD,CAAT;AAAA;AAAA;AAAA,mFAEJI,IAFI,EAKf,UAACH,KAAD,EAAkB;AAAA,iBACQI,OAAO,CAACJ,KAAD,CADf;AAAA,MACVM,KADU,YACVA,KADU;AAAA,MACHC,MADG,YACHA,MADG;;AAGlB,kCACWD,KADX,gCAEYC,MAFZ,wCAGoBA,MAHpB,8CAIqBD,KAJrB;AAMD,CAdgB,CAAnB;AAiBAG,aAAa,CAACC,YAAd,GAA6B;AAC3BJ,EAAAA,KAAK,EAAE,EADoB;AAE3BC,EAAAA,MAAM,EAAE;AAFmB,CAA7B;AAKA,eAAeE,aAAf","sourcesContent":["import React from \"react\"\n\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends React.HTMLProps<Spinner> {\n  width?: number\n  height?: number\n  spinnerSize?: \"small\" | \"medium\" | \"large\"\n}\n\nexport class Spinner extends React.Component<Props> {\n  render() {\n    return <div className={this.props.className} />\n  }\n}\n\nconst spin = keyframes`\n  100% {\n    transform: rotate(360deg)\n  }\n`\n\nconst getSize = props => {\n  const base = { width: 25, height: 6 }\n\n  // tslint:disable-next-line\n  switch (props.spinnerSize) {\n    case \"small\":\n      return {\n        width: base.width * 0.5,\n        height: base.height * 0.5,\n      }\n    case \"medium\":\n      return {\n        width: base.width * 0.8,\n        height: base.height * 0.8,\n      }\n    case \"large\":\n      return {\n        width: base.width,\n        height: base.height,\n      }\n    default:\n      return {\n        width: props.width,\n        height: props.height,\n      }\n  }\n}\n\nconst StyledSpinner = styled(Spinner)`\n  background: black;\n  animation: ${spin} 1s infinite linear;\n  position: absolute;\n\n  ${(props: Props) => {\n    const { width, height } = getSize(props)\n\n    return `\n      width: ${width}px;\n      height: ${height}px;\n      top: calc(50% - ${height}px / 2);\n      left: calc(50% - ${width}px / 2);\n    `\n  }};\n`\n\nStyledSpinner.defaultProps = {\n  width: 25,\n  height: 6,\n}\n\nexport default StyledSpinner\n"]}]}
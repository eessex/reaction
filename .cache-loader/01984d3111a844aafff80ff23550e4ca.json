{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Tag/TagArtworks.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Tag/TagArtworks.tsx","mtime":1518817219000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TagArtworks = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Dropdown = _interopRequireDefault(require(\"../ArtworkFilter/Dropdown\"));\n\nvar _ForSaleCheckbox = _interopRequireDefault(require(\"../ArtworkFilter/ForSaleCheckbox\"));\n\nvar _Headline = _interopRequireDefault(require(\"../ArtworkFilter/Headline\"));\n\nvar _TotalCount = _interopRequireDefault(require(\"../ArtworkFilter/TotalCount\"));\n\nvar _BorderedPulldown = _interopRequireDefault(require(\"../BorderedPulldown\"));\n\nvar _TagArtworksContent = _interopRequireDefault(require(\"./TagArtworksContent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FilterBar =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"TagArtworks__FilterBar\",\n  componentId: \"s2b8s28-0\"\n})([\"vertical-align:middle;text-align:center;> div{display:inline-block;}\"]);\n\nvar SubFilterBar =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"TagArtworks__SubFilterBar\",\n  componentId: \"s2b8s28-1\"\n})([\"display:flex;justify-content:space-between;padding:40px 0 20px;align-items:center;\"]);\n\nvar TagArtworks =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TagArtworks, _React$Component);\n\n  function TagArtworks() {\n    _classCallCheck(this, TagArtworks);\n\n    return _possibleConstructorReturn(this, (TagArtworks.__proto__ || Object.getPrototypeOf(TagArtworks)).apply(this, arguments));\n  }\n\n  _createClass(TagArtworks, [{\n    key: \"renderDropdown\",\n    value: function renderDropdown() {\n      var _this = this;\n\n      return this.props.tag.filtered_artworks.aggregations.map(function (aggregation) {\n        return React.createElement(_Dropdown.default, {\n          aggregation: aggregation,\n          key: aggregation.slice,\n          selected: aggregation.slice && _this.props[aggregation.slice.toLowerCase()],\n          onSelected: _this.props.onDropdownSelected\n        });\n      });\n    }\n  }, {\n    key: \"renderForSaleToggle\",\n    value: function renderForSaleToggle() {\n      return React.createElement(_ForSaleCheckbox.default, {\n        checked: this.props.for_sale,\n        onChange: this.props.onForSaleToggleSelected\n      });\n    }\n  }, {\n    key: \"renderArtworks\",\n    value: function renderArtworks() {\n      var _this2 = this;\n\n      var pulldownOptions = [{\n        val: \"-partner_updated_at\",\n        name: \"Recently Updated\"\n      }, {\n        val: \"-year\",\n        name: \"Artwork Year (desc.)\"\n      }, {\n        val: \"year\",\n        name: \"Artwork Year (asc.)\"\n      }];\n      var selectedSort = pulldownOptions.find(function (sort) {\n        return sort.val === _this2.props.sort;\n      });\n      return React.createElement(\"div\", null, React.createElement(SubFilterBar, null, React.createElement(\"div\", {\n        style: {\n          lineHeight: \"1.8em\"\n        }\n      }, React.createElement(_Headline.default, {\n        medium: this.props.medium,\n        price_range: this.props.price_range,\n        dimension_range: this.props.dimension_range,\n        for_sale: this.props.for_sale,\n        facet: this.props.tag.filtered_artworks.facet,\n        aggregations: this.props.tag.filtered_artworks.aggregations\n      }), React.createElement(_TotalCount.default, {\n        filter_artworks: this.props.tag.filtered_artworks\n      })), React.createElement(_BorderedPulldown.default, {\n        defaultValue: \"Recently Updated\",\n        selectedName: selectedSort && selectedSort.name,\n        options: pulldownOptions,\n        onChange: this.props.onSortSelected\n      })), React.createElement(_TagArtworksContent.default, {\n        tagID: this.props.tag.id,\n        filtered_artworks: this.props.tag.filtered_artworks\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(FilterBar, null, this.renderForSaleToggle(), this.renderDropdown()), this.renderArtworks());\n    }\n  }]);\n\n  return TagArtworks;\n}(React.Component);\n\nexports.TagArtworks = TagArtworks;\n\nvar _default = (0, _reactRelay.createFragmentContainer)(TagArtworks, {\n  tag: function tag() {\n    var node = require(\"../../__generated__/TagArtworks_tag.graphql\");\n\n    if (node.hash && node.hash !== \"e338dce3de7771de5f87d5d3605e6c19\") {\n      console.error(\"The definition of 'TagArtworks_tag' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/TagArtworks_tag.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/Tag/TagArtworks.tsx"],"names":["FilterBar","div","SubFilterBar","TagArtworks","props","tag","filtered_artworks","aggregations","map","aggregation","slice","toLowerCase","onDropdownSelected","for_sale","onForSaleToggleSelected","pulldownOptions","val","name","selectedSort","find","sort","lineHeight","medium","price_range","dimension_range","facet","onSortSelected","id","renderForSaleToggle","renderDropdown","renderArtworks","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AAKA;;AAEA;;AACA;;AAEA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;AAiBA,IAAMA;AAAA;AAAY,0BAAOC,GAAnB;AAAA;AAAA;AAAA,4EAAN;;AASA,IAAMC;AAAA;AAAe,0BAAOD,GAAtB;AAAA;AAAA;AAAA,0FAAN;;IAOaE,W;;;;;;;;;;;;;qCACM;AAAA;;AACf,aAAO,KAAKC,KAAL,CAAWC,GAAX,CAAeC,iBAAf,CAAiCC,YAAjC,CAA8CC,GAA9C,CAAkD,uBAAe;AACtE,eACE;AACE,uBAAaC,WADf;AAEE,eAAKA,YAAYC,KAFnB;AAGE,oBACED,YAAYC,KAAZ,IAAqB,MAAKN,KAAL,CAAWK,YAAYC,KAAZ,CAAkBC,WAAlB,EAAX,CAJzB;AAME,sBAAY,MAAKP,KAAL,CAAWQ;AANzB,UADF;AAUD,OAXM,CAAP;AAYD;;;0CAEqB;AACpB,aACE;AACE,iBAAS,KAAKR,KAAL,CAAWS,QADtB;AAEE,kBAAU,KAAKT,KAAL,CAAWU;AAFvB,QADF;AAMD;;;qCAEgB;AAAA;;AACf,UAAMC,kBAAkB,CACtB;AAAEC,aAAK,qBAAP;AAA8BC,cAAM;AAApC,OADsB,EAEtB;AAAED,aAAK,OAAP;AAAgBC,cAAM;AAAtB,OAFsB,EAGtB;AAAED,aAAK,MAAP;AAAeC,cAAM;AAArB,OAHsB,CAAxB;AAKA,UAAMC,eAAeH,gBAAgBI,IAAhB,CACnB;AAAA,eAAQC,KAAKJ,GAAL,KAAa,OAAKZ,KAAL,CAAWgB,IAAhC;AAAA,OADmB,CAArB;AAGA,aACE,iCACE,oBAAC,YAAD,QACE;AAAK,eAAO;AAAEC,sBAAY;AAAd;AAAZ,SACE;AACE,gBAAQ,KAAKjB,KAAL,CAAWkB,MADrB;AAEE,qBAAa,KAAKlB,KAAL,CAAWmB,WAF1B;AAGE,yBAAiB,KAAKnB,KAAL,CAAWoB,eAH9B;AAIE,kBAAU,KAAKpB,KAAL,CAAWS,QAJvB;AAKE,eAAO,KAAKT,KAAL,CAAWC,GAAX,CAAeC,iBAAf,CAAiCmB,KAL1C;AAME,sBAAc,KAAKrB,KAAL,CAAWC,GAAX,CAAeC,iBAAf,CAAiCC;AANjD,QADF,EASE;AAAY,yBAAiB,KAAKH,KAAL,CAAWC,GAAX,CAAeC;AAA5C,QATF,CADF,EAYE;AACE,sBAAa,kBADf;AAEE,sBAAcY,gBAAgBA,aAAaD,IAF7C;AAGE,iBAASF,eAHX;AAIE,kBAAU,KAAKX,KAAL,CAAWsB;AAJvB,QAZF,CADF,EAoBE;AACE,eAAO,KAAKtB,KAAL,CAAWC,GAAX,CAAesB,EADxB;AAEE,2BAAmB,KAAKvB,KAAL,CAAWC,GAAX,CAAeC;AAFpC,QApBF,CADF;AA2BD;;;6BAEQ;AACP,aACE,iCACE,oBAAC,SAAD,QACG,KAAKsB,mBAAL,EADH,EAEG,KAAKC,cAAL,EAFH,CADF,EAKG,KAAKC,cAAL,EALH,CADF;AASD;;;;EAzE8BC,MAAMC,S;;;;eA4ExB,yCAAwB7B,WAAxB,EAAqC;AAClDE;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADkD,CAArC,C","file":"/Users/eve/development/reaction/src/Components/Tag/TagArtworks.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import * as React from \"react\"\nimport {\n  createFragmentContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\n\nimport Dropdown from \"../ArtworkFilter/Dropdown\"\nimport ForSaleCheckbox from \"../ArtworkFilter/ForSaleCheckbox\"\n\nimport Headline from \"../ArtworkFilter/Headline\"\nimport TotalCount from \"../ArtworkFilter/TotalCount\"\n\nimport BorderedPulldown from \"../BorderedPulldown\"\n\nimport TagArtworksContent from \"./TagArtworksContent\"\n\ninterface Filters {\n  for_sale?: boolean\n  dimension_range?: string\n  price_range?: string\n  medium?: string\n}\n\ninterface Props extends RelayProps, Filters {\n  relay?: RelayPaginationProp\n  onDropdownSelected: (slice: string, value: string) => void\n  onSortSelected: (sort: string) => void\n  onForSaleToggleSelected: () => void\n  sort?: string\n}\n\nconst FilterBar = styled.div`\n  vertical-align: middle;\n  text-align: center;\n\n  > div {\n    display: inline-block;\n  }\n`\n\nconst SubFilterBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 40px 0 20px;\n  align-items: center;\n`\n\nexport class TagArtworks extends React.Component<Props, null> {\n  renderDropdown() {\n    return this.props.tag.filtered_artworks.aggregations.map(aggregation => {\n      return (\n        <Dropdown\n          aggregation={aggregation}\n          key={aggregation.slice}\n          selected={\n            aggregation.slice && this.props[aggregation.slice.toLowerCase()]\n          }\n          onSelected={this.props.onDropdownSelected}\n        />\n      )\n    })\n  }\n\n  renderForSaleToggle() {\n    return (\n      <ForSaleCheckbox\n        checked={this.props.for_sale}\n        onChange={this.props.onForSaleToggleSelected}\n      />\n    )\n  }\n\n  renderArtworks() {\n    const pulldownOptions = [\n      { val: \"-partner_updated_at\", name: \"Recently Updated\" },\n      { val: \"-year\", name: \"Artwork Year (desc.)\" },\n      { val: \"year\", name: \"Artwork Year (asc.)\" },\n    ]\n    const selectedSort = pulldownOptions.find(\n      sort => sort.val === this.props.sort\n    )\n    return (\n      <div>\n        <SubFilterBar>\n          <div style={{ lineHeight: \"1.8em\" }}>\n            <Headline\n              medium={this.props.medium}\n              price_range={this.props.price_range}\n              dimension_range={this.props.dimension_range}\n              for_sale={this.props.for_sale}\n              facet={this.props.tag.filtered_artworks.facet}\n              aggregations={this.props.tag.filtered_artworks.aggregations}\n            />\n            <TotalCount filter_artworks={this.props.tag.filtered_artworks} />\n          </div>\n          <BorderedPulldown\n            defaultValue=\"Recently Updated\"\n            selectedName={selectedSort && selectedSort.name}\n            options={pulldownOptions}\n            onChange={this.props.onSortSelected}\n          />\n        </SubFilterBar>\n        <TagArtworksContent\n          tagID={this.props.tag.id}\n          filtered_artworks={this.props.tag.filtered_artworks as any}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <FilterBar>\n          {this.renderForSaleToggle()}\n          {this.renderDropdown()}\n        </FilterBar>\n        {this.renderArtworks()}\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(TagArtworks, {\n  tag: graphql`\n    fragment TagArtworks_tag on Tag\n      @argumentDefinitions(\n        for_sale: { type: \"Boolean\" }\n        medium: { type: \"String\", defaultValue: \"*\" }\n        aggregations: {\n          type: \"[ArtworkAggregation]\"\n          defaultValue: [MEDIUM, TOTAL, PRICE_RANGE, DIMENSION_RANGE]\n        }\n        price_range: { type: \"String\", defaultValue: \"*\" }\n        dimension_range: { type: \"String\", defaultValue: \"*\" }\n      ) {\n      id\n      filtered_artworks(\n        aggregations: $aggregations\n        for_sale: $for_sale\n        medium: $medium\n        price_range: $price_range\n        dimension_range: $dimension_range\n        size: 0\n      ) {\n        ...TotalCount_filter_artworks\n        ...TagArtworksContent_filtered_artworks\n        aggregations {\n          slice\n          counts {\n            name\n            id\n          }\n          ...Dropdown_aggregation\n        }\n        facet {\n          ...Headline_facet\n        }\n      }\n    }\n  `,\n})\n\ninterface RelayProps {\n  tag: {\n    id: string\n    filtered_artworks: {\n      aggregations: Array<{\n        slice: string\n        counts: {\n          name: string | null\n          id: string | null\n        }\n      }>\n      facet: any\n    }\n  }\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/ArtworkFilter/TotalCount.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/ArtworkFilter/TotalCount.tsx","mtime":1524678459000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TotalCount = void 0;\n\nvar _numeral = _interopRequireDefault(require(\"numeral\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Fonts = require(\"../../Assets/Fonts\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TotalCount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TotalCount, _React$Component);\n\n  function TotalCount() {\n    _classCallCheck(this, TotalCount);\n\n    return _possibleConstructorReturn(this, (TotalCount.__proto__ || Object.getPrototypeOf(TotalCount)).apply(this, arguments));\n  }\n\n  _createClass(TotalCount, [{\n    key: \"render\",\n    value: function render() {\n      var total = this.props.filter_artworks.counts.total;\n      var s = total !== 1 ? \"s\" : \"\";\n      return _react.default.createElement(\"div\", {\n        className: this.props.className\n      }, (0, _numeral.default)(total).format(\"0,0\"), \" Work\", s);\n    }\n  }]);\n\n  return TotalCount;\n}(_react.default.Component);\n\nexports.TotalCount = TotalCount;\nvar StyledTotalCount =\n/*#__PURE__*/\n(0, _styledComponents.default)(TotalCount).withConfig({\n  displayName: \"TotalCount__StyledTotalCount\",\n  componentId: \"s1vqe55j-0\"\n})([\"font-style:italic;\", \";\"], (0, _Fonts.garamond)(\"s11\"));\n\nvar _default = (0, _reactRelay.createFragmentContainer)(StyledTotalCount, {\n  filter_artworks: function filter_artworks() {\n    var node = require(\"../../__generated__/TotalCount_filter_artworks.graphql\");\n\n    if (node.hash && node.hash !== \"ef252545faa2dcdc0445805a52f4e7c0\") {\n      console.error(\"The definition of 'TotalCount_filter_artworks' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/TotalCount_filter_artworks.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/ArtworkFilter/TotalCount.tsx"],"names":["TotalCount","total","props","filter_artworks","counts","s","className","format","Component","StyledTotalCount"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;IAMaA,U;;;;;;;;;;;;;6BACF;AACP,UAAMC,QAAQ,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCH,KAAhD;AACA,UAAMI,IAAIJ,UAAU,CAAV,GAAc,GAAd,GAAoB,EAA9B;AACA,aACE;AAAK,mBAAW,KAAKC,KAAL,CAAWI;AAA3B,SACG,sBAAQL,KAAR,EAAeM,MAAf,CAAsB,KAAtB,CADH,WACsCF,CADtC,CADF;AAKD;;;;EAT6B,eAAMG,S;;;AAYtC,IAAMC;AAAA;AAAmB,+BAAOT,UAAP,CAAnB;AAAA;AAAA;AAAA,gCAEF,qBAAS,KAAT,CAFE,CAAN;;eAKe,yCACbS,gBADa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,E","file":"/Users/eve/development/reaction/src/Components/ArtworkFilter/TotalCount.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import numeral from \"numeral\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\n\nimport styled from \"styled-components\"\nimport { garamond } from \"../../Assets/Fonts\"\n\ninterface TotalCountProps extends RelayProps, React.HTMLProps<TotalCount> {\n  filter_artworks: any\n}\n\nexport class TotalCount extends React.Component<TotalCountProps, null> {\n  render() {\n    const total = this.props.filter_artworks.counts.total\n    const s = total !== 1 ? \"s\" : \"\"\n    return (\n      <div className={this.props.className}>\n        {numeral(total).format(\"0,0\")} Work{s}\n      </div>\n    )\n  }\n}\n\nconst StyledTotalCount = styled(TotalCount)`\n  font-style: italic;\n  ${garamond(\"s11\")};\n`\n\nexport default createFragmentContainer(\n  StyledTotalCount,\n  graphql`\n    fragment TotalCount_filter_artworks on FilterArtworks {\n      counts {\n        total\n      }\n    }\n  `\n)\n\ninterface RelayProps {\n  filter_artworks: {\n    counts: {\n      total: number | null\n    } | null\n  }\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Helpers.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Helpers.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { css } from \"styled-components\";\nimport theme from \"../Assets/Theme\";\n/**\n * Helper function to display an element as a block that inherits its parents width\n * @param margin value in pixels to remove from width 100%\n */\n\nexport var block = function block() {\n  var margin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (props.block) {\n      return css([\"width:100%;margin:10px auto;\"]);\n    }\n  };\n};\nvar sizes = theme.flexboxgrid.breakpoints;\nexport var media = Object.keys(sizes).reduce(function (accumulator, label) {\n  // using px in breakpoints to maintain uniform units with flexbox-grid\n  // https://zellwk.com/blog/media-query-units/\n  var emSize = sizes[label];\n\n  accumulator[label] = function (strings) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return css([\"@media (max-width:\", \"em){\", \";}\"], emSize, css.apply(void 0, [strings].concat(args)));\n  };\n\n  return accumulator;\n}, {});\nvar psizes = theme.publishing.breakpoints;\nexport var pMedia = Object.keys(psizes).reduce(function (accumulator, label) {\n  var pxSize = psizes[label];\n\n  accumulator[label] = function (strings) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return css([\"@media (max-width:\", \"px){\", \";}\"], pxSize, css.apply(void 0, [strings].concat(args)));\n  };\n\n  return accumulator;\n}, {});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Helpers.tsx"],"names":["css","theme","block","margin","props","sizes","flexboxgrid","breakpoints","media","Object","keys","reduce","accumulator","label","emSize","strings","args","psizes","publishing","pMedia","pxSize"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,OAAOC,KAAP;AAEA;;;;;AAIA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,MAAuB,uEAAN,CAAM;AAC3C,SAAO,YAAqB;AAAA,QAApBC,KAAoB,uEAAP,EAAO;;AAC1B,QAAIA,KAAK,CAACF,KAAV,EAAiB;AACf,aAAOF,GAAP;AAID;AACF,GAPD;AAQD,CATM;AAWP,IAAMK,KAAK,GAAGJ,KAAK,CAACK,WAAN,CAAkBC,WAAhC;AAIA,OAAO,IAAMC,KAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,MAAnB,CAA0B,UAACC,WAAD,EAAcC,KAAd,EAAwB;AAC5E;AACA;AACA,MAAMC,MAAM,GAAGT,KAAK,CAACQ,KAAD,CAApB;;AACAD,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB,UAACE,OAAD;AAAA,sCAAaC,IAAb;AAAaA,MAAAA,IAAb;AAAA;;AAAA,WAAsBhB,GAAtB,uCACEc,MADF,EAEfd,GAAG,MAAH,UAAIe,OAAJ,SAAgBC,IAAhB,EAFe;AAAA,GAArB;;AAKA,SAAOJ,WAAP;AACD,CAV2B,EAUzB,EAVyB,CAArB;AAYP,IAAMK,MAAM,GAAGhB,KAAK,CAACiB,UAAN,CAAiBX,WAAhC;AAIA,OAAO,IAAMY,MAAuB,GAAGV,MAAM,CAACC,IAAP,CAAYO,MAAZ,EAAoBN,MAApB,CACrC,UAACC,WAAD,EAAcC,KAAd,EAAwB;AACtB,MAAMO,MAAM,GAAGH,MAAM,CAACJ,KAAD,CAArB;;AACAD,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB,UAACE,OAAD;AAAA,uCAAaC,IAAb;AAAaA,MAAAA,IAAb;AAAA;;AAAA,WAAsBhB,GAAtB,uCACEoB,MADF,EAEfpB,GAAG,MAAH,UAAIe,OAAJ,SAAgBC,IAAhB,EAFe;AAAA,GAArB;;AAKA,SAAOJ,WAAP;AACD,CAToC,EAUrC,EAVqC,CAAhC","sourcesContent":["import { css } from \"styled-components\"\nimport theme from \"../Assets/Theme\"\n\n/**\n * Helper function to display an element as a block that inherits its parents width\n * @param margin value in pixels to remove from width 100%\n */\nexport const block = (margin: number = 0) => {\n  return (props: any = {}) => {\n    if (props.block) {\n      return css`\n        width: 100%;\n        margin: 10px auto;\n      `\n    }\n  }\n}\n\nconst sizes = theme.flexboxgrid.breakpoints\n\ntype Media = { [S in keyof typeof sizes]: typeof css }\n\nexport const media: Media = Object.keys(sizes).reduce((accumulator, label) => {\n  // using px in breakpoints to maintain uniform units with flexbox-grid\n  // https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label]\n  accumulator[label] = (strings, ...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(strings, ...args)};\n    }\n  `\n  return accumulator\n}, {}) as Media\n\nconst psizes = theme.publishing.breakpoints\n\ntype PublishingMedia = { [S in keyof typeof psizes]: typeof css }\n\nexport const pMedia: PublishingMedia = Object.keys(psizes).reduce(\n  (accumulator, label) => {\n    const pxSize = psizes[label]\n    accumulator[label] = (strings, ...args) => css`\n      @media (max-width: ${pxSize}px) {\n        ${css(strings, ...args)};\n      }\n    `\n    return accumulator\n  },\n  {}\n) as PublishingMedia\n"]}]}
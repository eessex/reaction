{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Elements/Checkbox.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Elements/Checkbox.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1532461619000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Checkbox = void 0;\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _Flex = require(\"./Flex\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SIZE = 2;\nvar BORDER_WIDTH = 2;\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"labelColor\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          error = _this$props.error;\n      if (disabled) return {\n        color: (0, _palette.color)(\"black10\")\n      };\n      if (error) return {\n        color: (0, _palette.color)(\"red100\")\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"iconColor\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          selected = _this$props2.selected;\n\n      if (disabled && selected) {\n        return (0, _palette.color)(\"black30\");\n      } else if (disabled) {\n        return (0, _palette.color)(\"black5\");\n      }\n\n      return (0, _palette.color)(\"white100\");\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          selected = _this$props3.selected,\n          children = _this$props3.children,\n          error = _this$props3.error,\n          disabled = _this$props3.disabled,\n          hover = _this$props3.hover;\n      return _react.default.createElement(Container, {\n        className: hover && \"hover\",\n        my: 0.5,\n        onClick: function onClick() {\n          return !disabled && _this2.props.onSelect && _this2.props.onSelect(!selected);\n        },\n        selected: selected,\n        hover: hover,\n        disabled: disabled,\n        alignItems: \"center\"\n      }, _react.default.createElement(CheckboxButton, {\n        border: 1,\n        mr: 1,\n        selected: selected,\n        error: error,\n        disabled: disabled\n      }, _react.default.createElement(Check, {\n        color: this.iconColor()\n      })), _react.default.createElement(Label, {\n        style: this.labelColor()\n      }, children));\n    }\n  }]);\n\n  return Checkbox;\n}(_react.default.Component);\n\nexports.Checkbox = Checkbox;\n\nvar StyledSvg = _styledComponents.default.svg.withConfig({\n  displayName: \"Checkbox__StyledSvg\",\n  componentId: \"s15cp8c6-0\"\n})([\"position:relative;top:-\", \"px;left:-\", \"px;\"], BORDER_WIDTH, BORDER_WIDTH);\n\nvar Check = function Check(_ref) {\n  var strokeColor = _ref.color;\n  return _react.default.createElement(StyledSvg, {\n    width: \"\".concat((0, _palette.space)(SIZE), \"px\"),\n    height: \"\".concat((0, _palette.space)(SIZE), \"px\"),\n    viewBox: \"0 0 20 20\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, _react.default.createElement(\"path\", {\n    fill: \"none\",\n    stroke: strokeColor,\n    strokeWidth: \"2\",\n    d: \"M4 9.7L8.2 14 16 6\"\n  }));\n};\n\nvar checkBorderColor = function checkBorderColor(_ref2) {\n  var disabled = _ref2.disabled,\n      selected = _ref2.selected,\n      error = _ref2.error,\n      hover = _ref2.hover;\n  if (disabled) return (0, _palette.color)(\"black10\");\n  if (selected) return (0, _palette.color)(\"black100\");\n  if (error) return (0, _palette.color)(\"red100\");\n  return (0, _palette.color)(\"black10\");\n};\n\nvar checkBackgroundColor = function checkBackgroundColor(_ref3) {\n  var disabled = _ref3.disabled,\n      selected = _ref3.selected;\n\n  switch (true) {\n    case disabled:\n      return (0, _palette.color)(\"black5\");\n\n    case selected:\n      return (0, _palette.color)(\"black100\");\n\n    default:\n      return (0, _palette.color)(\"white100\");\n  }\n};\n\nvar CheckboxButton = _styledComponents.default.div.attrs({}).withConfig({\n  displayName: \"Checkbox__CheckboxButton\",\n  componentId: \"s15cp8c6-1\"\n})([\"\", \";\", \";background-color:\", \";border-color:\", \";width:\", \"px;height:\", \"px;transition:background-color 0.25s,border-color 0.25s;\"], _styledSystem.borders, _styledSystem.space, checkBackgroundColor, checkBorderColor, (0, _palette.space)(SIZE), (0, _palette.space)(SIZE));\n\nvar Label = _styledComponents.default.div.withConfig({\n  displayName: \"Checkbox__Label\",\n  componentId: \"s15cp8c6-2\"\n})([\"\"]);\n\nvar hoverStyles = function hoverStyles(_ref4) {\n  var selected = _ref4.selected,\n      hover = _ref4.hover,\n      disabled = _ref4.disabled;\n  var styles = \"\\n    background-color: \".concat((0, _palette.color)(\"black10\"), \";\\n    border-color: \").concat((0, _palette.color)(\"black10\"), \";\\n  \");\n\n  if (hover && !selected && !disabled) {\n    return (0, _styledComponents.css)([\"\", \"{\", \";}\"], CheckboxButton, styles);\n  }\n\n  if (!selected && !disabled) {\n    return (0, _styledComponents.css)([\"&:hover \", \"{\", \";}\"], CheckboxButton, styles);\n  }\n};\n\nvar Container = (0, _styledComponents.default)(_Flex.Flex).attrs({}).withConfig({\n  displayName: \"Checkbox__Container\",\n  componentId: \"s15cp8c6-3\"\n})([\"user-select:none;cursor:\", \";transition:color 0.25s;\", \";\"], function (_ref5) {\n  var disabled = _ref5.disabled;\n  return !disabled && \"pointer\";\n}, hoverStyles);",{"version":3,"sources":["src/Styleguide/Elements/Checkbox.tsx"],"names":["SIZE","BORDER_WIDTH","Checkbox","props","disabled","error","color","selected","children","hover","onSelect","iconColor","labelColor","React","Component","StyledSvg","styled","svg","Check","strokeColor","checkBorderColor","checkBackgroundColor","CheckboxButton","div","attrs","borders","styledSpace","Label","hoverStyles","styles","css","Container","Flex"],"mappings":"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","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { color, space } from \"@artsy/palette\"\nimport React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport {\n  BorderProps,\n  borders,\n  SizeProps,\n  space as styledSpace,\n  SpaceProps,\n} from \"styled-system\"\nimport { Flex, FlexProps } from \"Styleguide/Elements/Flex\"\n\nconst SIZE = 2\nconst BORDER_WIDTH = 2\n\nexport interface CheckboxProps {\n  disabled?: boolean\n  selected?: boolean\n  error?: boolean\n  /**\n   * Used to force the checkbox into the visual hover state. Useful for testing.\n   */\n  hover?: boolean\n  onSelect?: (selected: boolean) => void\n}\n\nexport interface CheckboxToggleProps\n  extends CheckboxProps,\n    BorderProps,\n    SizeProps,\n    SpaceProps {}\n\nexport class Checkbox extends React.Component<CheckboxProps> {\n  labelColor = () => {\n    const { disabled, error } = this.props\n    if (disabled) return { color: color(\"black10\") }\n    if (error) return { color: color(\"red100\") }\n  }\n\n  iconColor = () => {\n    const { disabled, selected } = this.props\n    if (disabled && selected) {\n      return color(\"black30\")\n    } else if (disabled) {\n      return color(\"black5\")\n    }\n    return color(\"white100\")\n  }\n\n  render() {\n    const { selected, children, error, disabled, hover } = this.props\n\n    return (\n      <Container\n        className={hover && \"hover\"}\n        my={0.5}\n        onClick={() =>\n          !disabled && this.props.onSelect && this.props.onSelect(!selected)\n        }\n        selected={selected}\n        hover={hover}\n        disabled={disabled}\n        alignItems=\"center\"\n      >\n        <CheckboxButton\n          border={1}\n          mr={1}\n          selected={selected}\n          error={error}\n          disabled={disabled}\n        >\n          <Check color={this.iconColor()} />\n        </CheckboxButton>\n        <Label style={this.labelColor()}>{children}</Label>\n      </Container>\n    )\n  }\n}\n\nconst StyledSvg = styled.svg`\n  position: relative;\n  top: -${BORDER_WIDTH}px;\n  left: -${BORDER_WIDTH}px;\n`\n\nconst Check = ({ color: strokeColor }) => (\n  <StyledSvg\n    width={`${space(SIZE)}px`}\n    height={`${space(SIZE)}px`}\n    viewBox=\"0 0 20 20\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill=\"none\"\n      stroke={strokeColor}\n      strokeWidth=\"2\"\n      d=\"M4 9.7L8.2 14 16 6\"\n    />\n  </StyledSvg>\n)\n\nconst checkBorderColor = ({ disabled, selected, error, hover }) => {\n  if (disabled) return color(\"black10\")\n  if (selected) return color(\"black100\")\n  if (error) return color(\"red100\")\n  return color(\"black10\")\n}\n\nconst checkBackgroundColor = ({ disabled, selected }) => {\n  switch (true) {\n    case disabled:\n      return color(\"black5\")\n    case selected:\n      return color(\"black100\")\n    default:\n      return color(\"white100\")\n  }\n}\n\nconst CheckboxButton = styled.div.attrs<CheckboxToggleProps>({})`\n  ${borders};\n  ${styledSpace};\n  background-color: ${checkBackgroundColor};\n  border-color: ${checkBorderColor};\n  width: ${space(SIZE)}px;\n  height: ${space(SIZE)}px;\n  transition: background-color 0.25s, border-color 0.25s;\n`\n\nconst Label = styled.div``\n\nconst hoverStyles = ({ selected, hover, disabled }) => {\n  const styles = `\n    background-color: ${color(\"black10\")};\n    border-color: ${color(\"black10\")};\n  `\n  if (hover && !selected && !disabled) {\n    return css`\n      ${CheckboxButton} {\n        ${styles};\n      }\n    `\n  }\n  if (!selected && !disabled) {\n    return css`\n      &:hover ${CheckboxButton} {\n        ${styles};\n      }\n    `\n  }\n}\n\ninterface ContainerProps extends FlexProps {\n  selected: boolean\n  hover: boolean\n}\nconst Container = styled(Flex).attrs<ContainerProps>({})`\n  user-select: none;\n  cursor: ${({ disabled }) => !disabled && \"pointer\"};\n  transition: color 0.25s;\n  ${hoverStyles};\n`\n"]}]}
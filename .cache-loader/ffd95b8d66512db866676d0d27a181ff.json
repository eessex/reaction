{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/InquiryArtwork.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/InquiryArtwork.tsx","mtime":1524585020000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.InquiryArtwork = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Colors = _interopRequireDefault(require(\"../Assets/Colors\"));\n\nvar _Artwork = _interopRequireDefault(require(\"./Artwork\"));\n\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\n\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n  width: 80px;\\n  height: 80px;\\n  border-radius: 100%;\\n  border: 5px solid \", \";\\n  background: transparent;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  transition: border-color 0.3s;\\n\"], [\"\\n  width: 80px;\\n  height: 80px;\\n  border-radius: 100%;\\n  border: 5px solid \", \";\\n  background: transparent;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  transition: border-color 0.3s;\\n\"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar OverlayBackground =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"InquiryArtwork__OverlayBackground\",\n  componentId: \"vgxyaf-0\"\n})([\"background-color:\", \";height:100%;width:100%;position:absolute;z-index:10;top:0;left:0;opacity:0.8;text-align:center;pointer-events:none;display:flex;justify-content:center;align-items:center;\"], _Colors.default.purpleRegular);\n\nvar Div = _styledComponents.default.div;\nvar Circle = Div(_templateObject, function (props) {\n  return props.selected ? \"white\" : \"transparent\";\n});\n\nvar Overlay = function Overlay(props) {\n  return _react.default.createElement(OverlayBackground, null, _react.default.createElement(Circle, {\n    selected: props.selected\n  }, _react.default.createElement(_Icon.default, {\n    name: \"check\",\n    color: \"white\"\n  })));\n};\n\nvar InquiryArtwork = function InquiryArtwork(props) {\n  return _react.default.createElement(_Artwork.default, _extends({}, props, {\n    extended: false,\n    Overlay: Overlay,\n    showOverlayOnHover: true\n  }));\n};\n\nexports.InquiryArtwork = InquiryArtwork;\n\nvar _default = (0, _reactRelay.createFragmentContainer)(InquiryArtwork, {\n  artwork: function artwork() {\n    var node = require(\"../__generated__/InquiryArtwork_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"395ab37180661dd93a2a1ee189b363b5\") {\n      console.error(\"The definition of 'InquiryArtwork_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../__generated__/InquiryArtwork_artwork.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/InquiryArtwork.tsx"],"names":["OverlayBackground","div","purpleRegular","Div","Circle","props","selected","Overlay","InquiryArtwork"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;AAMA,IAAMA;AAAA;AAAoB,0BAAOC,GAA3B;AAAA;AAAA;AAAA,yMACgB,gBAAOC,aADvB,CAAN;;AAeA,IAAMC,MAAmC,0BAAOF,GAAhD;AACA,IAAMG,SAASD,GAAT,kBAIgB;AAAA,SAAUE,MAAMC,QAAN,GAAiB,OAAjB,GAA2B,aAArC;AAAA,CAJhB,CAAN;;AAaA,IAAMC,UAAmC,SAAnCA,OAAmC;AAAA,SACvC,6BAAC,iBAAD,QACE,6BAAC,MAAD;AAAQ,cAAUF,MAAMC;AAAxB,KACE;AAAM,UAAK,OAAX;AAAmB,WAAM;AAAzB,IADF,CADF,CADuC;AAAA,CAAzC;;AAQO,IAAME,iBAA0C,SAA1CA,cAA0C,QAAS;AAC9D,SACE,4DAAaH,KAAb;AAAoB,cAAU,KAA9B;AAAqC,aAASE,OAA9C;AAAuD;AAAvD,KADF;AAGD,CAJM;;;;eAMQ,yCACbC,cADa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,E","file":"/Users/eve/development/reaction/src/Components/InquiryArtwork.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled, { StyledFunction } from \"styled-components\"\n\nimport colors from \"../Assets/Colors\"\nimport Artwork, { ArtworkProps, OverlayProps } from \"./Artwork\"\nimport Icon from \"./Icon\"\n\ninterface CircleProps extends React.HTMLProps<HTMLDivElement> {\n  selected?: boolean\n}\n\nconst OverlayBackground = styled.div`\n  background-color: ${colors.purpleRegular};\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  opacity: 0.8;\n  text-align: center;\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst Div: StyledFunction<CircleProps> = styled.div\nconst Circle = Div`\n  width: 80px;\n  height: 80px;\n  border-radius: 100%;\n  border: 5px solid ${props => (props.selected ? \"white\" : \"transparent\")};\n  background: transparent;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  transition: border-color 0.3s;\n`\n\nconst Overlay: React.SFC<OverlayProps> = props => (\n  <OverlayBackground>\n    <Circle selected={props.selected}>\n      <Icon name=\"check\" color=\"white\" />\n    </Circle>\n  </OverlayBackground>\n)\n\nexport const InquiryArtwork: React.SFC<ArtworkProps> = props => {\n  return (\n    <Artwork {...props} extended={false} Overlay={Overlay} showOverlayOnHover />\n  )\n}\n\nexport default createFragmentContainer(\n  InquiryArtwork,\n  graphql`\n    fragment InquiryArtwork_artwork on Artwork {\n      ...Artwork_artwork\n    }\n  `\n)\n"]}]}
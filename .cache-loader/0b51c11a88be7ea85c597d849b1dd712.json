{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Onboarding/Steps/Genes/GeneSearchResults.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Onboarding/Steps/Genes/GeneSearchResults.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _graphql, _graphql2, _dec, _class;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withContext } from \"../../../../Artsy/SystemContext\";\nimport { garamond } from \"../../../../Assets/Fonts\";\nimport * as React from \"react\";\nimport { commitMutation, createFragmentContainer, graphql, QueryRenderer } from \"react-relay\";\nimport track from \"react-tracking\";\nimport styled from \"styled-components\";\nimport Events from \"../../../../Utils/Events\";\nimport ReplaceTransition from \"../../../Animation/ReplaceTransition\";\nimport ItemLink, { LinkContainer } from \"../../ItemLink\";\nvar NoResultsContainer = styled.div.withConfig({\n  displayName: \"GeneSearchResults__NoResultsContainer\",\n  componentId: \"s1wx1lgn-0\"\n})([\"\", \";text-align:center;font-style:italic;border-bottom:none;font-weight:lighter;\"], garamond(\"s17\"));\nvar GeneSearchResultsContent = (_dec = track({}, {\n  dispatch: function dispatch(data) {\n    return Events.postEvent(data);\n  }\n}), _dec(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneSearchResultsContent, _React$Component);\n\n  function GeneSearchResultsContent(props, context) {\n    var _this;\n\n    _classCallCheck(this, GeneSearchResultsContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeneSearchResultsContent).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"excludedGeneIds\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"followCount\", 0);\n\n    _this.excludedGeneIds = new Set(_this.props.viewer.match_gene.map(function (item) {\n      return item._id;\n    }));\n    return _this;\n  }\n\n  _createClass(GeneSearchResultsContent, [{\n    key: \"onGeneFollowed\",\n    value: function onGeneFollowed(gene, store, data) {\n      var suggestedGene = store.get(data.followGene.gene.similar.edges[0].node.__id);\n      this.excludedGeneIds.add(suggestedGene.getValue(\"_id\"));\n      var suggestedGenesRootField = store.get(\"client:root:viewer\");\n      var suggestedGenes = suggestedGenesRootField.getLinkedRecords(\"match_gene\", {\n        term: this.props.term\n      });\n      var updatedSuggestedGenes = suggestedGenes.map(function (geneItem) {\n        return geneItem.getValue(\"id\") === gene.id ? suggestedGene : geneItem;\n      });\n      suggestedGenesRootField.setLinkedRecords(updatedSuggestedGenes, \"match_gene\", {\n        term: this.props.term\n      });\n      this.followCount += 1;\n      this.props.updateFollowCount(this.followCount);\n      this.props.tracking.trackEvent({\n        action: \"Followed Gene\",\n        entity_id: gene._id,\n        entity_slug: gene.id,\n        context_module: \"onboarding search\"\n      });\n    }\n  }, {\n    key: \"followedGene\",\n    value: function followedGene(gene) {\n      var _this2 = this;\n\n      this.excludedGeneIds.add(gene._id);\n      commitMutation(this.props.relay.environment, {\n        mutation: _graphql || (_graphql = function _graphql() {\n          var node = require(\"../../../../__generated__/GeneSearchResultsFollowGeneMutation.graphql\");\n\n          if (node.hash && node.hash !== \"3d621343f23280ba5000ed5cb3e9da08\") {\n            console.error(\"The definition of 'GeneSearchResultsFollowGeneMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../../../__generated__/GeneSearchResultsFollowGeneMutation.graphql\");\n        }),\n        variables: {\n          input: {\n            gene_id: gene.id\n          },\n          excludedGeneIds: Array.from(this.excludedGeneIds)\n        },\n        updater: function updater(store, data) {\n          return _this2.onGeneFollowed(gene, store, data);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var items = this.props.viewer.match_gene.map(function (item, index) {\n        return React.createElement(LinkContainer, {\n          key: \"gene-search-results-\".concat(index)\n        }, React.createElement(ReplaceTransition, {\n          transitionEnterTimeout: 1000,\n          transitionLeaveTimeout: 400\n        }, React.createElement(ItemLink, {\n          href: \"#\",\n          item: item,\n          key: item.id,\n          id: item.id,\n          name: item.name,\n          image_url: item.image.cropped.url,\n          onClick: function onClick() {\n            return _this3.followedGene(item);\n          }\n        })));\n      });\n\n      if (items.length < 1) {\n        return React.createElement(NoResultsContainer, null, \"No Results Found\");\n      }\n\n      return React.createElement(\"div\", null, items);\n    }\n  }]);\n\n  return GeneSearchResultsContent;\n}(React.Component)) || _class);\nvar GeneSearchResultsContentContainer = createFragmentContainer(GeneSearchResultsContent, {\n  viewer: function viewer() {\n    var node = require(\"../../../../__generated__/GeneSearchResultsContent_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"0bea268b7e1c4adf4585567dbc12f2ca\") {\n      console.error(\"The definition of 'GeneSearchResultsContent_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/GeneSearchResultsContent_viewer.graphql\");\n  }\n});\n\nvar GeneSearchResultsComponent = function GeneSearchResultsComponent(_ref) {\n  var term = _ref.term,\n      relayEnvironment = _ref.relayEnvironment,\n      updateFollowCount = _ref.updateFollowCount;\n  return React.createElement(QueryRenderer, {\n    environment: relayEnvironment,\n    query: _graphql2 || (_graphql2 = function _graphql2() {\n      var node = require(\"../../../../__generated__/GeneSearchResultsQuery.graphql\");\n\n      if (node.hash && node.hash !== \"6f403a1a5970448a89a84de12bc8d072\") {\n        console.error(\"The definition of 'GeneSearchResultsQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../../../__generated__/GeneSearchResultsQuery.graphql\");\n    }),\n    variables: {\n      term: term\n    },\n    render: function render(_ref2) {\n      var error = _ref2.error,\n          props = _ref2.props;\n\n      if (props) {\n        return React.createElement(GeneSearchResultsContentContainer, {\n          viewer: props.viewer,\n          term: term,\n          updateFollowCount: updateFollowCount\n        });\n      } else {\n        return null;\n      }\n    }\n  });\n};\n\nexport var GeneSearchResults = withContext(GeneSearchResultsComponent);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Onboarding/Steps/Genes/GeneSearchResults.tsx"],"names":["withContext","garamond","React","commitMutation","createFragmentContainer","graphql","QueryRenderer","track","styled","Events","ReplaceTransition","ItemLink","LinkContainer","NoResultsContainer","div","GeneSearchResultsContent","dispatch","data","postEvent","props","context","excludedGeneIds","Set","viewer","match_gene","map","item","_id","gene","store","suggestedGene","get","followGene","similar","edges","node","__id","add","getValue","suggestedGenesRootField","suggestedGenes","getLinkedRecords","term","updatedSuggestedGenes","geneItem","id","setLinkedRecords","followCount","updateFollowCount","tracking","trackEvent","action","entity_id","entity_slug","context_module","relay","environment","mutation","variables","input","gene_id","Array","from","updater","onGeneFollowed","items","index","name","image","cropped","url","followedGene","length","Component","GeneSearchResultsContentContainer","GeneSearchResultsComponent","relayEnvironment","error","GeneSearchResults"],"mappings":"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","sourcesContent":["import { GeneSearchResultsContent_viewer } from \"__generated__/GeneSearchResultsContent_viewer.graphql\"\nimport {\n  GeneSearchResultsFollowGeneMutation,\n  GeneSearchResultsFollowGeneMutationResponse,\n} from \"__generated__/GeneSearchResultsFollowGeneMutation.graphql\"\nimport { GeneSearchResultsQuery } from \"__generated__/GeneSearchResultsQuery.graphql\"\nimport { ContextProps, withContext } from \"Artsy/SystemContext\"\nimport { garamond } from \"Assets/Fonts\"\nimport * as React from \"react\"\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  QueryRenderer,\n  RelayProp,\n} from \"react-relay\"\nimport track from \"react-tracking\"\nimport { RecordSourceSelectorProxy } from \"relay-runtime\"\nimport styled from \"styled-components\"\nimport Events from \"../../../../Utils/Events\"\nimport ReplaceTransition from \"../../../Animation/ReplaceTransition\"\nimport ItemLink, { LinkContainer } from \"../../ItemLink\"\nimport { FollowProps } from \"../../Types\"\n\ntype Gene = GeneSearchResultsContent_viewer[\"match_gene\"][0]\n\ninterface ContainerProps extends FollowProps {\n  term: string\n}\n\ninterface Props extends React.HTMLProps<HTMLAnchorElement>, ContainerProps {\n  tracking?: any\n  relay?: RelayProp\n  viewer: GeneSearchResultsContent_viewer\n}\n\nconst NoResultsContainer = styled.div`\n  ${garamond(\"s17\")};\n  text-align: center;\n  font-style: italic;\n  border-bottom: none;\n  font-weight: lighter;\n`\n\n@track({}, { dispatch: data => Events.postEvent(data) })\nclass GeneSearchResultsContent extends React.Component<Props, null> {\n  private excludedGeneIds: Set<string>\n  followCount: number = 0\n\n  constructor(props: Props, context: any) {\n    super(props, context)\n    this.excludedGeneIds = new Set(\n      this.props.viewer.match_gene.map(item => item._id)\n    )\n  }\n\n  onGeneFollowed(\n    gene: Gene,\n    store: RecordSourceSelectorProxy,\n    data: GeneSearchResultsFollowGeneMutationResponse\n  ): void {\n    const suggestedGene = store.get(\n      data.followGene.gene.similar.edges[0].node.__id\n    )\n    this.excludedGeneIds.add(suggestedGene.getValue(\"_id\"))\n\n    const suggestedGenesRootField = store.get(\"client:root:viewer\")\n    const suggestedGenes = suggestedGenesRootField.getLinkedRecords(\n      \"match_gene\",\n      { term: this.props.term }\n    )\n    const updatedSuggestedGenes = suggestedGenes.map(\n      geneItem =>\n        geneItem.getValue(\"id\") === gene.id ? suggestedGene : geneItem\n    )\n\n    suggestedGenesRootField.setLinkedRecords(\n      updatedSuggestedGenes,\n      \"match_gene\",\n      { term: this.props.term }\n    )\n\n    this.followCount += 1\n\n    this.props.updateFollowCount(this.followCount)\n\n    this.props.tracking.trackEvent({\n      action: \"Followed Gene\",\n      entity_id: gene._id,\n      entity_slug: gene.id,\n      context_module: \"onboarding search\",\n    })\n  }\n\n  followedGene(gene: Gene) {\n    this.excludedGeneIds.add(gene._id)\n\n    commitMutation<GeneSearchResultsFollowGeneMutation>(\n      this.props.relay.environment,\n      {\n        mutation: graphql`\n          mutation GeneSearchResultsFollowGeneMutation(\n            $input: FollowGeneInput!\n            $excludedGeneIds: [String]!\n          ) {\n            followGene(input: $input) {\n              gene {\n                similar(first: 1, exclude_gene_ids: $excludedGeneIds) {\n                  edges {\n                    node {\n                      id\n                      _id\n                      __id\n                      name\n                      image {\n                        cropped(width: 100, height: 100) {\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n        variables: {\n          input: {\n            gene_id: gene.id,\n          },\n          excludedGeneIds: Array.from(this.excludedGeneIds),\n        },\n        updater: (store, data) => this.onGeneFollowed(gene, store, data),\n      }\n    )\n  }\n\n  render() {\n    const items = this.props.viewer.match_gene.map((item, index) => (\n      <LinkContainer key={`gene-search-results-${index}`}>\n        <ReplaceTransition\n          transitionEnterTimeout={1000}\n          transitionLeaveTimeout={400}\n        >\n          <ItemLink\n            href=\"#\"\n            item={item}\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            image_url={item.image.cropped.url}\n            onClick={() => this.followedGene(item)}\n          />\n        </ReplaceTransition>\n      </LinkContainer>\n    ))\n\n    if (items.length < 1) {\n      return <NoResultsContainer>No Results Found</NoResultsContainer>\n    }\n\n    return <div>{items}</div>\n  }\n}\n\nconst GeneSearchResultsContentContainer = createFragmentContainer(\n  GeneSearchResultsContent,\n  graphql`\n    fragment GeneSearchResultsContent_viewer on Viewer {\n      match_gene(term: $term) {\n        name\n        id\n        _id\n        image {\n          cropped(width: 100, height: 100) {\n            url\n          }\n        }\n      }\n    }\n  `\n)\n\nconst GeneSearchResultsComponent: React.SFC<ContainerProps & ContextProps> = ({\n  term,\n  relayEnvironment,\n  updateFollowCount,\n}) => {\n  return (\n    <QueryRenderer<GeneSearchResultsQuery>\n      environment={relayEnvironment}\n      query={graphql`\n        query GeneSearchResultsQuery($term: String!) {\n          viewer {\n            ...GeneSearchResultsContent_viewer\n          }\n        }\n      `}\n      variables={{ term }}\n      render={({ error, props }) => {\n        if (props) {\n          return (\n            <GeneSearchResultsContentContainer\n              viewer={props.viewer}\n              term={term}\n              updateFollowCount={updateFollowCount}\n            />\n          )\n        } else {\n          return null\n        }\n      }}\n    />\n  )\n}\n\nexport const GeneSearchResults = withContext(GeneSearchResultsComponent)\n"]}]}
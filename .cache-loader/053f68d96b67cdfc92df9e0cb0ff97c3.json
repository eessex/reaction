{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artwork/Components/ArtworkSidebar/ArtworkSidebarCurrentBidInfo.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artwork/Components/ArtworkSidebar/ArtworkSidebarCurrentBidInfo.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Box, Flex, Sans, Serif } from \"@artsy/palette\";\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport { LoosingBid } from \"../../../../Assets/Icons/LoosingBid\";\nimport { WinningBid } from \"../../../../Assets/Icons/WinningBid\";\nexport var ArtworkSidebarCurrentBidInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArtworkSidebarCurrentBidInfo, _React$Component);\n\n  function ArtworkSidebarCurrentBidInfo() {\n    _classCallCheck(this, ArtworkSidebarCurrentBidInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ArtworkSidebarCurrentBidInfo).apply(this, arguments));\n  }\n\n  _createClass(ArtworkSidebarCurrentBidInfo, [{\n    key: \"render\",\n    value: function render() {\n      var artwork = this.props.artwork;\n\n      if (artwork.sale && artwork.sale.is_closed) {\n        return React.createElement(Box, {\n          pt: 2,\n          pb: 2\n        }, React.createElement(Serif, {\n          size: \"5t\",\n          weight: \"semibold\",\n          color: \"black100\"\n        }, \"Bidding closed\"));\n      }\n\n      var bidsPresent = artwork.sale_artwork.counts.bidder_positions > 0;\n      var bidPrompt = bidsPresent ? \"Current bid\" : \"Starting Bid\";\n      var bidColor = artwork.sale_artwork.is_with_reserve && bidsPresent && artwork.sale_artwork.reserve_status === \"reserve_not_met\" ? \"red100\" : \"black60\";\n      var bidTextParts = [];\n\n      if (bidsPresent) {\n        bidTextParts.push(artwork.sale_artwork.counts.bidder_positions === 1 ? \"1 bid\" : artwork.sale_artwork.counts.bidder_positions + \" bids\");\n      }\n\n      artwork.sale_artwork.reserve_message && bidTextParts.push(artwork.sale_artwork.reserve_message);\n      var bidText = bidTextParts.join(\", \");\n      /**\n       * NOTE: This is making an incorrect assumption that there could only ever\n       *       be 1 live sale with this work. When we run into that case, there is\n       *       likely design work to be done too, so we can adjust this then.\n       */\n\n      var myLotStanding = artwork.myLotStanding && artwork.myLotStanding[0];\n      var activeBid = myLotStanding && myLotStanding.active_bid;\n      var myBidPresent = !!activeBid;\n      return React.createElement(Box, {\n        pt: 2,\n        pb: 2\n      }, React.createElement(Flex, {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      }, React.createElement(Serif, {\n        size: \"5t\",\n        weight: \"semibold\",\n        pr: 1\n      }, bidPrompt), React.createElement(Flex, {\n        flexDirection: \"row\",\n        justifyContent: \"right\",\n        alignContent: \"baseline\"\n      }, myBidPresent && React.createElement(Box, {\n        pt: 0.5\n      }, activeBid.is_winning ? React.createElement(WinningBid, null) : React.createElement(LoosingBid, null)), React.createElement(Serif, {\n        size: \"5t\",\n        weight: \"semibold\",\n        pl: 0.5\n      }, artwork.sale_artwork.current_bid.display))), React.createElement(Flex, {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      }, React.createElement(Sans, {\n        size: \"2\",\n        color: bidColor,\n        pr: 1\n      }, bidText), myBidPresent && activeBid.max_bid && React.createElement(Sans, {\n        size: \"2\",\n        color: \"black60\",\n        pl: 1\n      }, \"Your max: \", activeBid.max_bid.display)));\n    }\n  }]);\n\n  return ArtworkSidebarCurrentBidInfo;\n}(React.Component);\nexport var ArtworkSidebarCurrentBidInfoFragmentContainer = createFragmentContainer(ArtworkSidebarCurrentBidInfo, {\n  artwork: function artwork() {\n    var node = require(\"../../../../__generated__/ArtworkSidebarCurrentBidInfo_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"7a4114f15229a31cf19814409e1c51c7\") {\n      console.error(\"The definition of 'ArtworkSidebarCurrentBidInfo_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/ArtworkSidebarCurrentBidInfo_artwork.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artwork/Components/ArtworkSidebar/ArtworkSidebarCurrentBidInfo.tsx"],"names":["Box","Flex","Sans","Serif","React","createFragmentContainer","graphql","LoosingBid","WinningBid","ArtworkSidebarCurrentBidInfo","artwork","props","sale","is_closed","bidsPresent","sale_artwork","counts","bidder_positions","bidPrompt","bidColor","is_with_reserve","reserve_status","bidTextParts","push","reserve_message","bidText","join","myLotStanding","activeBid","active_bid","myBidPresent","is_winning","current_bid","display","max_bid","Component","ArtworkSidebarCurrentBidInfoFragmentContainer"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,gBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,aAAjD;AAGA,SAASC,UAAT;AACA,SAASC,UAAT;AAMA,WAAaC,4BAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAGW;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;;AAGP,UAAIA,OAAO,CAACE,IAAR,IAAgBF,OAAO,CAACE,IAAR,CAAaC,SAAjC,EAA4C;AAC1C,eACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE;AAAhB,WACE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,IAAZ;AAAiB,UAAA,MAAM,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAC;AAAzC,4BADF,CADF;AAOD;;AAED,UAAMC,WAAW,GAAGJ,OAAO,CAACK,YAAR,CAAqBC,MAArB,CAA4BC,gBAA5B,GAA+C,CAAnE;AACA,UAAMC,SAAS,GAAGJ,WAAW,GAAG,aAAH,GAAmB,cAAhD;AACA,UAAMK,QAAQ,GACZT,OAAO,CAACK,YAAR,CAAqBK,eAArB,IACAN,WADA,IAEAJ,OAAO,CAACK,YAAR,CAAqBM,cAArB,KAAwC,iBAFxC,GAGI,QAHJ,GAII,SALN;AAMA,UAAMC,YAAY,GAAG,EAArB;;AACA,UAAIR,WAAJ,EAAiB;AACfQ,QAAAA,YAAY,CAACC,IAAb,CACEb,OAAO,CAACK,YAAR,CAAqBC,MAArB,CAA4BC,gBAA5B,KAAiD,CAAjD,GACI,OADJ,GAEIP,OAAO,CAACK,YAAR,CAAqBC,MAArB,CAA4BC,gBAA5B,GAA+C,OAHrD;AAKD;;AACDP,MAAAA,OAAO,CAACK,YAAR,CAAqBS,eAArB,IACEF,YAAY,CAACC,IAAb,CAAkBb,OAAO,CAACK,YAAR,CAAqBS,eAAvC,CADF;AAEA,UAAMC,OAAO,GAAGH,YAAY,CAACI,IAAb,CAAkB,IAAlB,CAAhB;AAEA;;;;;;AAKA,UAAMC,aAAa,GAAGjB,OAAO,CAACiB,aAAR,IAAyBjB,OAAO,CAACiB,aAAR,CAAsB,CAAtB,CAA/C;AACA,UAAMC,SAAS,GAAGD,aAAa,IAAIA,aAAa,CAACE,UAAjD;AACA,UAAMC,YAAY,GAAG,CAAC,CAACF,SAAvB;AACA,aACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE;AAAhB,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAmB,QAAA,aAAa,EAAC,KAAjC;AAAuC,QAAA,cAAc,EAAC;AAAtD,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,MAAM,EAAC,UAAxB;AAAmC,QAAA,EAAE,EAAE;AAAvC,SACGV,SADH,CADF,EAIE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAC,KADhB;AAEE,QAAA,cAAc,EAAC,OAFjB;AAGE,QAAA,YAAY,EAAC;AAHf,SAKGY,YAAY,IACX,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAT,SACGF,SAAS,CAACG,UAAV,GAAuB,oBAAC,UAAD,OAAvB,GAAwC,oBAAC,UAAD,OAD3C,CANJ,EAUE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,MAAM,EAAC,UAAxB;AAAmC,QAAA,EAAE,EAAE;AAAvC,SACGrB,OAAO,CAACK,YAAR,CAAqBiB,WAArB,CAAiCC,OADpC,CAVF,CAJF,CADF,EAoBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAmB,QAAA,aAAa,EAAC,KAAjC;AAAuC,QAAA,cAAc,EAAC;AAAtD,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,KAAK,EAAEd,QAAtB;AAAgC,QAAA,EAAE,EAAE;AAApC,SACGM,OADH,CADF,EAIGK,YAAY,IACXF,SAAS,CAACM,OADX,IAEG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,KAAK,EAAC,SAArB;AAA+B,QAAA,EAAE,EAAE;AAAnC,uBACaN,SAAS,CAACM,OAAV,CAAkBD,OAD/B,CANN,CApBF,CADF;AAkCD;AA9EH;;AAAA;AAAA,EAAkD7B,KAAK,CAAC+B,SAAxD;AAiFA,OAAO,IAAMC,6CAA6C,GAAG/B,uBAAuB,CAClFI,4BADkF;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAA7E","sourcesContent":["import { Box, Flex, Sans, Serif } from \"@artsy/palette\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\n\nimport { ArtworkSidebarCurrentBidInfo_artwork } from \"__generated__/ArtworkSidebarCurrentBidInfo_artwork.graphql\"\nimport { LoosingBid } from \"Assets/Icons/LoosingBid\"\nimport { WinningBid } from \"Assets/Icons/WinningBid\"\n\nexport interface ArtworkSidebarCurrentBidInfoProps {\n  artwork: ArtworkSidebarCurrentBidInfo_artwork\n}\n\nexport class ArtworkSidebarCurrentBidInfo extends React.Component<\n  ArtworkSidebarCurrentBidInfoProps\n> {\n  render() {\n    const { artwork } = this.props\n\n    if (artwork.sale && artwork.sale.is_closed) {\n      return (\n        <Box pt={2} pb={2}>\n          <Serif size=\"5t\" weight=\"semibold\" color=\"black100\">\n            Bidding closed\n          </Serif>\n        </Box>\n      )\n    }\n\n    const bidsPresent = artwork.sale_artwork.counts.bidder_positions > 0\n    const bidPrompt = bidsPresent ? \"Current bid\" : \"Starting Bid\"\n    const bidColor =\n      artwork.sale_artwork.is_with_reserve &&\n      bidsPresent &&\n      artwork.sale_artwork.reserve_status === \"reserve_not_met\"\n        ? \"red100\"\n        : \"black60\"\n    const bidTextParts = []\n    if (bidsPresent) {\n      bidTextParts.push(\n        artwork.sale_artwork.counts.bidder_positions === 1\n          ? \"1 bid\"\n          : artwork.sale_artwork.counts.bidder_positions + \" bids\"\n      )\n    }\n    artwork.sale_artwork.reserve_message &&\n      bidTextParts.push(artwork.sale_artwork.reserve_message)\n    const bidText = bidTextParts.join(\", \")\n\n    /**\n     * NOTE: This is making an incorrect assumption that there could only ever\n     *       be 1 live sale with this work. When we run into that case, there is\n     *       likely design work to be done too, so we can adjust this then.\n     */\n    const myLotStanding = artwork.myLotStanding && artwork.myLotStanding[0]\n    const activeBid = myLotStanding && myLotStanding.active_bid\n    const myBidPresent = !!activeBid\n    return (\n      <Box pt={2} pb={2}>\n        <Flex width=\"100%\" flexDirection=\"row\" justifyContent=\"space-between\">\n          <Serif size=\"5t\" weight=\"semibold\" pr={1}>\n            {bidPrompt}\n          </Serif>\n          <Flex\n            flexDirection=\"row\"\n            justifyContent=\"right\"\n            alignContent=\"baseline\"\n          >\n            {myBidPresent && (\n              <Box pt={0.5}>\n                {activeBid.is_winning ? <WinningBid /> : <LoosingBid />}\n              </Box>\n            )}\n            <Serif size=\"5t\" weight=\"semibold\" pl={0.5}>\n              {artwork.sale_artwork.current_bid.display}\n            </Serif>\n          </Flex>\n        </Flex>\n        <Flex width=\"100%\" flexDirection=\"row\" justifyContent=\"space-between\">\n          <Sans size=\"2\" color={bidColor} pr={1}>\n            {bidText}\n          </Sans>\n          {myBidPresent &&\n            activeBid.max_bid && (\n              <Sans size=\"2\" color=\"black60\" pl={1}>\n                Your max: {activeBid.max_bid.display}\n              </Sans>\n            )}\n        </Flex>\n      </Box>\n    )\n  }\n}\n\nexport const ArtworkSidebarCurrentBidInfoFragmentContainer = createFragmentContainer(\n  ArtworkSidebarCurrentBidInfo,\n  graphql`\n    fragment ArtworkSidebarCurrentBidInfo_artwork on Artwork {\n      myLotStanding(live: true) {\n        active_bid {\n          is_winning\n          max_bid {\n            display\n          }\n        }\n      }\n      sale {\n        is_open\n        is_closed\n      }\n      sale_artwork {\n        lot_label\n        estimate\n        is_with_reserve\n        reserve_message\n        reserve_status\n        current_bid {\n          display\n        }\n        counts {\n          bidder_positions\n        }\n      }\n    }\n  `\n)\n"]}]}
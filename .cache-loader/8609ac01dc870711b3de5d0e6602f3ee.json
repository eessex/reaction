{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Utils/resizer.ts","dependencies":[{"path":"/Users/eve/development/reaction/src/Utils/resizer.ts","mtime":1524585020000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resize = exports.crop = void 0;\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GEMINI_CLOUDFRONT_URL = \"https://d7hftxdivxxvm.cloudfront.net\";\nvar GEMINI_DISPLAY_CLOUDFRONT_URL = \"https://de5y2r7wr8mpb.cloudfront.net\";\n\nvar warn = function warn(message) {\n  if (process.env.NODE_ENV === \"development\") {\n    console.warn(message);\n  }\n};\n\nvar crop = function crop(src, options) {\n  var width = options.width,\n      height = options.height,\n      quality = options.quality,\n      isDisplayAd = options.isDisplayAd;\n\n  if (!width && !height) {\n    warn(\"requires width and height\");\n    return src;\n  } else if (width === 0) {\n    warn(\"width must be non-zero\");\n    return src;\n  } else if (height === 0) {\n    warn(\"height must be non-zero\");\n    return src;\n  }\n\n  var config = {\n    resize_to: \"fill\",\n    src: src,\n    width: width,\n    height: height,\n    quality: quality || 95\n  };\n  var url = isDisplayAd ? GEMINI_DISPLAY_CLOUDFRONT_URL : GEMINI_CLOUDFRONT_URL;\n  return [url, _qs.default.stringify(config)].join(\"?\");\n};\n\nexports.crop = crop;\n\nvar resize = function resize(src, options) {\n  var width = options.width,\n      height = options.height,\n      quality = options.quality,\n      isDisplayAd = options.isDisplayAd;\n  var resizeTo;\n\n  if (width && !height) {\n    resizeTo = \"width\";\n  } else if (height && !width) {\n    resizeTo = \"height\";\n  } else {\n    resizeTo = \"fit\";\n  }\n\n  var config = {\n    resize_to: resizeTo,\n    src: src,\n    width: width,\n    height: height,\n    quality: quality || 95\n  };\n  var url = isDisplayAd ? GEMINI_DISPLAY_CLOUDFRONT_URL : GEMINI_CLOUDFRONT_URL;\n  return [url, _qs.default.stringify(config)].join(\"?\");\n};\n\nexports.resize = resize;",{"version":3,"sources":["src/Utils/resizer.ts"],"names":["GEMINI_CLOUDFRONT_URL","GEMINI_DISPLAY_CLOUDFRONT_URL","warn","process","env","NODE_ENV","console","message","crop","src","options","width","height","quality","isDisplayAd","config","resize_to","url","stringify","join","resize","resizeTo"],"mappings":";;;;;;;AAAA;;;;AACA,IAAMA,wBAAwB,sCAA9B;AACA,IAAMC,gCAAgC,sCAAtC;;AAEA,IAAMC,OAAO,SAAPA,IAAO,UAAW;AACtB,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,YAAQJ,IAAR,CAAaK,OAAb;AACD;AACF,CAJD;;AAMO,IAAMC,OAAO,SAAPA,IAAO,CAClBC,GADkB,EAElBC,OAFkB,EAQf;AAAA,MACKC,KADL,GAC6CD,OAD7C,CACKC,KADL;AAAA,MACYC,MADZ,GAC6CF,OAD7C,CACYE,MADZ;AAAA,MACoBC,OADpB,GAC6CH,OAD7C,CACoBG,OADpB;AAAA,MAC6BC,WAD7B,GAC6CJ,OAD7C,CAC6BI,WAD7B;;AAGH,MAAI,CAACH,KAAD,IAAU,CAACC,MAAf,EAAuB;AACrBV,SAAK,2BAAL;AACA,WAAOO,GAAP;AACD,GAHD,MAGO,IAAIE,UAAU,CAAd,EAAiB;AACtBT,SAAK,wBAAL;AACA,WAAOO,GAAP;AACD,GAHM,MAGA,IAAIG,WAAW,CAAf,EAAkB;AACvBV,SAAK,yBAAL;AACA,WAAOO,GAAP;AACD;;AAED,MAAMM,SAAS;AACbC,eAAW,MADE;AAEbP,YAFa;AAGbE,gBAHa;AAIbC,kBAJa;AAKbC,aAASA,WAAW;AALP,GAAf;AAQA,MAAMI,MAAMH,cACRb,6BADQ,GAERD,qBAFJ;AAGA,SAAO,CAACiB,GAAD,EAAM,YAAGC,SAAH,CAAaH,MAAb,CAAN,EAA4BI,IAA5B,CAAiC,GAAjC,CAAP;AACD,CAlCM;;;;AAoCA,IAAMC,SAAS,SAATA,MAAS,CACpBX,GADoB,EAEpBC,OAFoB,EAQjB;AAAA,MACKC,KADL,GAC6CD,OAD7C,CACKC,KADL;AAAA,MACYC,MADZ,GAC6CF,OAD7C,CACYE,MADZ;AAAA,MACoBC,OADpB,GAC6CH,OAD7C,CACoBG,OADpB;AAAA,MAC6BC,WAD7B,GAC6CJ,OAD7C,CAC6BI,WAD7B;AAGH,MAAIO,QAAJ;;AACA,MAAIV,SAAS,CAACC,MAAd,EAAsB;AACpBS,eAAW,OAAX;AACD,GAFD,MAEO,IAAIT,UAAU,CAACD,KAAf,EAAsB;AAC3BU,eAAW,QAAX;AACD,GAFM,MAEA;AACLA,eAAW,KAAX;AACD;;AAED,MAAMN,SAAS;AACbC,eAAWK,QADE;AAEbZ,YAFa;AAGbE,gBAHa;AAIbC,kBAJa;AAKbC,aAASA,WAAW;AALP,GAAf;AAQA,MAAMI,MAAMH,cACRb,6BADQ,GAERD,qBAFJ;AAGA,SAAO,CAACiB,GAAD,EAAM,YAAGC,SAAH,CAAaH,MAAb,CAAN,EAA4BI,IAA5B,CAAiC,GAAjC,CAAP;AACD,CAhCM","file":"/Users/eve/development/reaction/src/Utils/resizer.ts","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import qs from \"qs\"\nconst GEMINI_CLOUDFRONT_URL = \"https://d7hftxdivxxvm.cloudfront.net\"\nconst GEMINI_DISPLAY_CLOUDFRONT_URL = \"https://de5y2r7wr8mpb.cloudfront.net\"\n\nconst warn = message => {\n  if (process.env.NODE_ENV === \"development\") {\n    console.warn(message)\n  }\n}\n\nexport const crop = (\n  src: string,\n  options: {\n    width: number\n    height: number\n    quality?: number\n    isDisplayAd?: boolean\n  }\n) => {\n  const { width, height, quality, isDisplayAd } = options\n\n  if (!width && !height) {\n    warn(\"requires width and height\")\n    return src\n  } else if (width === 0) {\n    warn(\"width must be non-zero\")\n    return src\n  } else if (height === 0) {\n    warn(\"height must be non-zero\")\n    return src\n  }\n\n  const config = {\n    resize_to: \"fill\",\n    src,\n    width,\n    height,\n    quality: quality || 95,\n  }\n\n  const url = isDisplayAd\n    ? GEMINI_DISPLAY_CLOUDFRONT_URL\n    : GEMINI_CLOUDFRONT_URL\n  return [url, qs.stringify(config)].join(\"?\")\n}\n\nexport const resize = (\n  src: string,\n  options: {\n    width?: number\n    height?: number\n    quality?: number\n    isDisplayAd?: boolean\n  }\n) => {\n  const { width, height, quality, isDisplayAd } = options\n\n  let resizeTo\n  if (width && !height) {\n    resizeTo = \"width\"\n  } else if (height && !width) {\n    resizeTo = \"height\"\n  } else {\n    resizeTo = \"fit\"\n  }\n\n  const config = {\n    resize_to: resizeTo,\n    src,\n    width,\n    height,\n    quality: quality || 95,\n  }\n\n  const url = isDisplayAd\n    ? GEMINI_DISPLAY_CLOUDFRONT_URL\n    : GEMINI_CLOUDFRONT_URL\n  return [url, qs.stringify(config)].join(\"?\")\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Publishing/Icon/IconLayoutSplit.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Icon/IconLayoutSplit.tsx","mtime":1524585020000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IconLayoutSplit = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconLayoutSplit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IconLayoutSplit, _Component);\n\n  function IconLayoutSplit() {\n    _classCallCheck(this, IconLayoutSplit);\n\n    return _possibleConstructorReturn(this, (IconLayoutSplit.__proto__ || Object.getPrototypeOf(IconLayoutSplit)).apply(this, arguments));\n  }\n\n  _createClass(IconLayoutSplit, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"svg\", {\n        className: \"layout-split\",\n        width: \"45px\",\n        height: \"30px\",\n        viewBox: \"0 0 45 30\",\n        xmlns: \"http://www.w3.org/2000/svg\"\n      }, _react.default.createElement(\"g\", {\n        stroke: \"none\",\n        strokeWidth: \"1\",\n        fill: \"none\",\n        fillRule: \"evenodd\"\n      }, _react.default.createElement(\"g\", {\n        className: \"layout-split-group\",\n        fill: this.props.fill ? this.props.fill : \"#000\"\n      }, _react.default.createElement(\"g\", null, _react.default.createElement(\"polyline\", {\n        points: \"0 2 20 2 20 0 0 0\"\n      }), _react.default.createElement(\"polyline\", {\n        points: \"0 7 20 7 20 5 0 5\"\n      }), _react.default.createElement(\"polyline\", {\n        points: \"0 12 16 12 16 10 0 10\"\n      }), _react.default.createElement(\"rect\", {\n        x: \"25\",\n        y: \"0\",\n        width: \"20\",\n        height: \"30\"\n      })))));\n    }\n  }]);\n\n  return IconLayoutSplit;\n}(_react.Component);\n\nexports.IconLayoutSplit = IconLayoutSplit;",{"version":3,"sources":["src/Components/Publishing/Icon/IconLayoutSplit.tsx"],"names":["IconLayoutSplit","props","fill"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,e;;;;;;;;;;;;;6BACF;AACP,aACE;AACE,mBAAU,cADZ;AAEE,eAAM,MAFR;AAGE,gBAAO,MAHT;AAIE,iBAAQ,WAJV;AAKE,eAAM;AALR,SAOE;AAAG,gBAAO,MAAV;AAAiB,qBAAY,GAA7B;AAAiC,cAAK,MAAtC;AAA6C,kBAAS;AAAtD,SACE;AACE,mBAAU,oBADZ;AAEE,cAAM,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAA7B,GAAoC;AAF5C,SAIE,wCACE;AAAU,gBAAO;AAAjB,QADF,EAEE;AAAU,gBAAO;AAAjB,QAFF,EAGE;AAAU,gBAAO;AAAjB,QAHF,EAIE;AAAM,WAAE,IAAR;AAAa,WAAE,GAAf;AAAmB,eAAM,IAAzB;AAA8B,gBAAO;AAArC,QAJF,CAJF,CADF,CAPF,CADF;AAuBD","file":"/Users/eve/development/reaction/src/Components/Publishing/Icon/IconLayoutSplit.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React, { Component } from \"react\"\n\nexport class IconLayoutSplit extends Component<any, null> {\n  render() {\n    return (\n      <svg\n        className=\"layout-split\"\n        width=\"45px\"\n        height=\"30px\"\n        viewBox=\"0 0 45 30\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g\n            className=\"layout-split-group\"\n            fill={this.props.fill ? this.props.fill : \"#000\"}\n          >\n            <g>\n              <polyline points=\"0 2 20 2 20 0 0 0\" />\n              <polyline points=\"0 7 20 7 20 5 0 5\" />\n              <polyline points=\"0 12 16 12 16 10 0 10\" />\n              <rect x=\"25\" y=\"0\" width=\"20\" height=\"30\" />\n            </g>\n          </g>\n        </g>\n      </svg>\n    )\n  }\n}\n"]}]}
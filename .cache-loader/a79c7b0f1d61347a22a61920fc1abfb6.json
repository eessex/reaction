{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Authentication/Desktop/ResetPasswordForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/ResetPasswordForm.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResetPasswordForm = void 0;\n\nvar _formik = require(\"formik\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _commonElements = require(\"../commonElements\");\n\nvar _Inverted = _interopRequireDefault(require(\"../../Buttons/Inverted\"));\n\nvar _Input = _interopRequireDefault(require(\"../../Input\"));\n\nvar _Types = require(\"../Types\");\n\nvar _Validators = require(\"../Validators\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ResetButton = (0, _styledComponents.default)(_Inverted.default).attrs({\n  type: \"submit\",\n  block: true\n}).withConfig({\n  displayName: \"ResetPasswordForm__ResetButton\",\n  componentId: \"r8ns5r-0\"\n})([\"margin:auto 0 10px 0;\"]);\n\nvar ResetPasswordForm = function ResetPasswordForm(props) {\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: props.values,\n    onSubmit: props.handleSubmit,\n    validationSchema: _Validators.ResetPasswordValidator\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting,\n        isValid = _ref.isValid,\n        status = _ref.status;\n    var hasErrors = Object.keys(errors).length > 0;\n    return _react.default.createElement(_commonElements.FormContainer, {\n      onSubmit: handleSubmit,\n      height: 180\n    }, _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.email && errors.email,\n      placeholder: \"Enter your email address\",\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), status && !status.success && _react.default.createElement(_commonElements.Error, {\n      show: true\n    }, status.error), _react.default.createElement(ResetButton, {\n      block: true,\n      type: \"submit\",\n      disabled: isSubmitting || hasErrors\n    }, \"Send Reset Instructions\"), _react.default.createElement(_commonElements.Footer, {\n      handleTypeChange: function handleTypeChange() {\n        return props.handleTypeChange(_Types.ModalType.login);\n      },\n      mode: \"reset_password\"\n    }));\n  });\n};\n\nexports.ResetPasswordForm = ResetPasswordForm;",{"version":3,"sources":["src/Components/Authentication/Desktop/ResetPasswordForm.tsx"],"names":["ResetButton","attrs","type","block","ResetPasswordForm","props","values","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","isValid","status","hasErrors","Object","keys","length","email","success","error","handleTypeChange","login"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAKA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,cAAc,kDAAeC,KAAf,CAAqB;AACvCC,QAAM,QADiC;AAEvCC,SAAO;AAFgC,CAArB,CAAd;AAAA;AAAA;AAAA,6BAAN;;AAOO,IAAMC,oBAAuC,SAAvCA,iBAAuC,QAAS;AAC3D,SACE;AACE,mBAAeC,MAAMC,MADvB;AAEE,cAAUD,MAAME,YAFlB;AAGE;AAHF,KAKG,gBAU+B;AAAA,QAT9BD,MAS8B,QAT9BA,MAS8B;AAAA,QAR9BE,MAQ8B,QAR9BA,MAQ8B;AAAA,QAP9BC,OAO8B,QAP9BA,OAO8B;AAAA,QAN9BC,YAM8B,QAN9BA,YAM8B;AAAA,QAL9BC,UAK8B,QAL9BA,UAK8B;AAAA,QAJ9BJ,YAI8B,QAJ9BA,YAI8B;AAAA,QAH9BK,YAG8B,QAH9BA,YAG8B;AAAA,QAF9BC,OAE8B,QAF9BA,OAE8B;AAAA,QAD9BC,MAC8B,QAD9BA,MAC8B;AAC9B,QAAMC,YAAYC,OAAOC,IAAP,CAAYT,MAAZ,EAAoBU,MAApB,GAA6B,CAA/C;AAEA,WACE;AAAM,gBAAUX,YAAhB;AAA8B,cAAQ;AAAtC,OACE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOE,QAAQU,KAAR,IAAiBX,OAAOW,KAHjC;AAIE,mBAAY,0BAJd;AAKE,YAAK,OALP;AAME,aAAM,OANR;AAOE,YAAK,OAPP;AAQE,aAAOb,OAAOa,KARhB;AASE,gBAAUT,YATZ;AAUE,cAAQC;AAVV,MADF,EAaGG,UAAU,CAACA,OAAOM,OAAlB,IAA6B;AAAO;AAAP,OAAaN,OAAOO,KAApB,CAbhC,EAcE,6BAAC,WAAD;AACE,iBADF;AAEE,YAAK,QAFP;AAGE,gBAAUT,gBAAgBG;AAH5B,iCAdF,EAqBE;AACE,wBAAkB;AAAA,eAAMV,MAAMiB,gBAAN,CAAuB,iBAAUC,KAAjC,CAAN;AAAA,OADpB;AAEE,YAAK;AAFP,MArBF,CADF;AA4BD,GA9CH,CADF;AAkDD,CAnDM","file":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/ResetPasswordForm.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { Formik, FormikProps } from \"formik\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport {\n  Error,\n  Footer,\n  FormContainer as Form,\n} from \"Components/Authentication/commonElements\"\nimport Button from \"Components/Buttons/Inverted\"\nimport Input from \"Components/Input\"\nimport { FormComponentType, InputValues, ModalType } from \"../Types\"\nimport { ResetPasswordValidator } from \"../Validators\"\n\nconst ResetButton = styled(Button).attrs({\n  type: \"submit\",\n  block: true,\n})`\n  margin: auto 0 10px 0;\n`\n\nexport const ResetPasswordForm: FormComponentType = props => {\n  return (\n    <Formik\n      initialValues={props.values}\n      onSubmit={props.handleSubmit}\n      validationSchema={ResetPasswordValidator}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        isValid,\n        status,\n      }: FormikProps<InputValues>) => {\n        const hasErrors = Object.keys(errors).length > 0\n\n        return (\n          <Form onSubmit={handleSubmit} height={180}>\n            <Input\n              block\n              quick\n              error={touched.email && errors.email}\n              placeholder=\"Enter your email address\"\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {status && !status.success && <Error show>{status.error}</Error>}\n            <ResetButton\n              block\n              type=\"submit\"\n              disabled={isSubmitting || hasErrors}\n            >\n              Send Reset Instructions\n            </ResetButton>\n            <Footer\n              handleTypeChange={() => props.handleTypeChange(ModalType.login)}\n              mode=\"reset_password\"\n            />\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n"]}]}
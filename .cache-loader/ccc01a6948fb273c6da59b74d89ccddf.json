{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/OverlayTrigger/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/OverlayTrigger/index.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { cloneElement } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { Overlay } from \"react-overlays\";\nimport styled from \"styled-components\";\nexport var OverlayTrigger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OverlayTrigger, _React$Component);\n\n  function OverlayTrigger() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OverlayTrigger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OverlayTrigger)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"target\", void 0);\n\n    return _this;\n  }\n\n  _createClass(OverlayTrigger, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          overlay = _this$props.overlay,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"overlay\", \"children\"]);\n\n      return React.createElement(Container, null, React.createElement(Container, {\n        ref: function ref(element) {\n          return _this2.target = element;\n        }\n      }, children), React.createElement(Overlay, _extends({}, props, {\n        target: function target() {\n          return findDOMNode(_this2.target);\n        }\n      }), cloneElement(overlay, _objectSpread({}, overlay.props, {\n        style: _objectSpread({}, overlay.props.style, {\n          position: \"absolute\"\n        })\n      }))));\n    }\n  }]);\n\n  return OverlayTrigger;\n}(React.Component);\nvar Container = styled.div.withConfig({\n  displayName: \"OverlayTrigger__Container\",\n  componentId: \"s120xniz-0\"\n})([\"display:inline-block;\"]);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/OverlayTrigger/index.tsx"],"names":["React","cloneElement","findDOMNode","Overlay","styled","OverlayTrigger","props","overlay","children","element","target","style","position","Component","Container","div"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,YAAhB,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAIA,WAAaC,cAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAGW;AAAA;;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACuBF,KADvB;;AAGP,aACE,oBAAC,SAAD,QACE,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAE,aAAAG,OAAO;AAAA,iBAAK,MAAI,CAACC,MAAL,GAAcD,OAAnB;AAAA;AAAvB,SACGD,QADH,CADF,EAKE,oBAAC,OAAD,eAAaF,KAAb;AAAoB,QAAA,MAAM,EAAE;AAAA,iBAAMJ,WAAW,CAAC,MAAI,CAACQ,MAAN,CAAjB;AAAA;AAA5B,UACGT,YAAY,CAACM,OAAD,oBACRA,OAAO,CAACD,KADA;AAEXK,QAAAA,KAAK,oBACAJ,OAAO,CAACD,KAAR,CAAcK,KADd;AAEHC,UAAAA,QAAQ,EAAE;AAFP;AAFM,SADf,CALF,CADF;AAiBD;AAvBH;;AAAA;AAAA,EAAoCZ,KAAK,CAACa,SAA1C;AA0BA,IAAMC,SAAS,GAAGV,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,6BAAf","sourcesContent":["import React, { cloneElement, ReactInstance } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport { Overlay } from \"react-overlays\"\nimport styled from \"styled-components\"\n\nimport { OverlayTriggerProps } from \"./types\"\n\nexport class OverlayTrigger extends React.Component<OverlayTriggerProps> {\n  private target: ReactInstance\n\n  render() {\n    const { overlay, children, ...props } = this.props\n\n    return (\n      <Container>\n        <Container ref={element => (this.target = element)}>\n          {children}\n        </Container>\n\n        <Overlay {...props} target={() => findDOMNode(this.target)}>\n          {cloneElement(overlay, {\n            ...overlay.props,\n            style: {\n              ...overlay.props.style,\n              position: \"absolute\",\n            },\n          })}\n        </Overlay>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  display: inline-block;\n`\n"]}]}
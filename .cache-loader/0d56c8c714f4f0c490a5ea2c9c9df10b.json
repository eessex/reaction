{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Artwork/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Artwork/index.tsx","mtime":1524249962000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Artwork = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\n\nvar _Theme = _interopRequireDefault(require(\"../../Assets/Theme\"));\n\nvar _Metadata = _interopRequireWildcard(require(\"./Metadata\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Container =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"Artwork__Container\",\n  componentId: \"s1cqdy0c-0\"\n})([\"width:100%;\"]);\n\nvar ImageContainer =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"Artwork__ImageContainer\",\n  componentId: \"s1cqdy0c-1\"\n})([\"width:100%;position:relative;cursor:pointer;&:before{content:\\\"\\\";display:block;padding-bottom:100%;}& .overlay-container{transition:opacity 0.25s;&.hovered{opacity:0;visibility:hidden;}&.selected{opacity:1;visibility:visible;}}&:hover{& .overlay-container.hovered{\", \";}}\"], (0, _styledComponents.css)([\"@media (min-width:\", \"px){opacity:1;visibility:visible;}\"], _Theme.default.flexboxgrid.breakpoints.sm + 1));\n\nvar Image =\n/*#__PURE__*/\n_styledComponents.default.img.withConfig({\n  displayName: \"Artwork__Image\",\n  componentId: \"s1cqdy0c-2\"\n})([\"max-width:100%;max-height:100%;margin:auto;position:absolute;left:0;top:0;bottom:0;right:0;\"]);\n\nvar Artwork =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Artwork, _React$Component);\n\n  function Artwork() {\n    var _ref;\n\n    var _temp, _this;\n\n    _classCallCheck(this, Artwork);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = Artwork.__proto__ || Object.getPrototypeOf(Artwork)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        isSelected: false\n      }\n    }), Object.defineProperty(_assertThisInitialized(_this), \"onSelected\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(e) {\n        if (!_this.props.Overlay) {\n          return;\n        }\n\n        _this.setState({\n          isSelected: !_this.state.isSelected\n        });\n\n        if (_this.props.onSelect) {\n          _this.props.onSelect(!_this.state.isSelected);\n        }\n      }\n    }), _temp));\n  }\n\n  _createClass(Artwork, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          artwork = _props.artwork,\n          Overlay = _props.Overlay,\n          useRelay = _props.useRelay,\n          showOverlayOnHover = _props.showOverlayOnHover;\n      var overlayClasses = \"overlay-container\";\n      overlayClasses += showOverlayOnHover ? \" hovered\" : \"\";\n      overlayClasses += this.state.isSelected ? \" selected\" : \"\";\n      var MetadataBlock = useRelay ? _Metadata.default : _Metadata.Metadata;\n      return _react.default.createElement(Container, {\n        onClick: this.onSelected\n      }, _react.default.createElement(ImageContainer, null, _react.default.createElement(Image, {\n        src: artwork.image.url\n      }), _react.default.createElement(\"div\", {\n        className: overlayClasses\n      }, Overlay && _react.default.createElement(Overlay, {\n        selected: this.state.isSelected,\n        useRelay: useRelay\n      }))), _react.default.createElement(MetadataBlock, {\n        extended: this.props.extended,\n        artwork: artwork,\n        useRelay: useRelay\n      }));\n    }\n  }]);\n\n  return Artwork;\n}(_react.default.Component);\n\nexports.Artwork = Artwork;\nObject.defineProperty(Artwork, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    extended: true,\n    overlay: null,\n    useRelay: true,\n    showOverlayOnHover: false\n  }\n});\n\nvar _default = (0, _reactRelay.createFragmentContainer)(Artwork, {\n  artwork: function artwork() {\n    var node = require(\"../../__generated__/Artwork_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"05646294ec1ef54a4ec29ece7e30681e\") {\n      console.error(\"The definition of 'Artwork_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Artwork_artwork.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/Artwork/index.tsx"],"names":["Container","div","ImageContainer","flexboxgrid","breakpoints","sm","Image","img","Artwork","isSelected","props","Overlay","setState","state","onSelect","artwork","useRelay","showOverlayOnHover","overlayClasses","MetadataBlock","onSelected","image","url","extended","Component","overlay"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA;AAAA;AAAY,0BAAOC,GAAnB;AAAA;AAAA;AAAA,mBAAN;;AAIA,IAAMC;AAAA;AAAiB,0BAAOD,GAAxB;AAAA;AAAA;AAAA,kXA4BuB,eAAME,WAAN,CAAkBC,WAAlB,CAA8BC,EAA9B,GAAmC,CA5B1D,EAAN;;AAqCA,IAAMC;AAAA;AAAQ,0BAAOC,GAAf;AAAA;AAAA;AAAA,mGAAN;;IA4BaC,O;;;;;;;;;;;;;;;;;;;;aAQH;AACNC,oBAAY;AADN;;;;;aAIK,kBAAK;AAChB,YAAI,CAAC,MAAKC,KAAL,CAAWC,OAAhB,EAAyB;AACvB;AACD;;AAED,cAAKC,QAAL,CAAc;AACZH,sBAAY,CAAC,MAAKI,KAAL,CAAWJ;AADZ,SAAd;;AAIA,YAAI,MAAKC,KAAL,CAAWI,QAAf,EAAyB;AACvB,gBAAKJ,KAAL,CAAWI,QAAX,CAAoB,CAAC,MAAKD,KAAL,CAAWJ,UAAhC;AACD;AACF;;;;;;6BAEQ;AAAA,mBACoD,KAAKC,KADzD;AAAA,UACCK,OADD,UACCA,OADD;AAAA,UACUJ,OADV,UACUA,OADV;AAAA,UACmBK,QADnB,UACmBA,QADnB;AAAA,UAC6BC,kBAD7B,UAC6BA,kBAD7B;AAEP,UAAIC,iBAAiB,mBAArB;AAEAA,wBAAkBD,qBAAqB,UAArB,GAAkC,EAApD;AACAC,wBAAkB,KAAKL,KAAL,CAAWJ,UAAX,GAAwB,WAAxB,GAAsC,EAAxD;AAEA,UAAMU,gBAAgBH,iDAAtB;AAEA,aACE,6BAAC,SAAD;AAAW,iBAAS,KAAKI;AAAzB,SACE,6BAAC,cAAD,QACE,6BAAC,KAAD;AAAO,aAAKL,QAAQM,KAAR,CAAcC;AAA1B,QADF,EAEE;AAAK,mBAAWJ;AAAhB,SACGP,WACC,6BAAC,OAAD;AAAS,kBAAU,KAAKE,KAAL,CAAWJ,UAA9B;AAA0C,kBAAUO;AAApD,QAFJ,CAFF,CADF,EASE,6BAAC,aAAD;AACE,kBAAU,KAAKN,KAAL,CAAWa,QADvB;AAEE,iBAASR,OAFX;AAGE,kBAAUC;AAHZ,QATF,CADF;AAiBD;;;;EApD0B,eAAMQ,S;;;sBAAtBhB,O;;;;SACW;AACpBe,cAAU,IADU;AAEpBE,aAAS,IAFW;AAGpBT,cAAU,IAHU;AAIpBC,wBAAoB;AAJA;;;eAsDT,yCACbT,OADa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,E","file":"/Users/eve/development/reaction/src/Components/Artwork/index.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled, { css } from \"styled-components\"\n\nimport theme from \"../../Assets/Theme\"\nimport RelayMetadata, { Metadata } from \"./Metadata\"\n\nconst Container = styled.div`\n  width: 100%;\n`\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n\n  &:before {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n\n  & .overlay-container {\n    transition: opacity 0.25s;\n\n    &.hovered {\n      opacity: 0;\n      visibility: hidden;\n    }\n\n    &.selected {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  &:hover {\n    & .overlay-container.hovered {\n      ${css`\n        @media (min-width: ${theme.flexboxgrid.breakpoints.sm + 1}px) {\n          opacity: 1;\n          visibility: visible;\n        }\n      `};\n    }\n  }\n`\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  margin: auto;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport interface OverlayProps {\n  selected: boolean\n  useRelay?: boolean\n}\n\nexport interface ArtworkProps extends RelayProps {\n  extended?: boolean\n  Overlay?: React.SFC<OverlayProps>\n  useRelay?: boolean\n  onSelect?: (selected: boolean) => void\n  showOverlayOnHover?: boolean\n}\n\nexport interface ArtworkState {\n  isSelected: boolean\n}\n\nexport class Artwork extends React.Component<ArtworkProps, ArtworkState> {\n  static defaultProps = {\n    extended: true,\n    overlay: null,\n    useRelay: true,\n    showOverlayOnHover: false,\n  }\n\n  state = {\n    isSelected: false,\n  }\n\n  onSelected = e => {\n    if (!this.props.Overlay) {\n      return\n    }\n\n    this.setState({\n      isSelected: !this.state.isSelected,\n    })\n\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.state.isSelected)\n    }\n  }\n\n  render() {\n    const { artwork, Overlay, useRelay, showOverlayOnHover } = this.props\n    let overlayClasses = \"overlay-container\"\n\n    overlayClasses += showOverlayOnHover ? \" hovered\" : \"\"\n    overlayClasses += this.state.isSelected ? \" selected\" : \"\"\n\n    const MetadataBlock = useRelay ? RelayMetadata : Metadata\n\n    return (\n      <Container onClick={this.onSelected}>\n        <ImageContainer>\n          <Image src={artwork.image.url} />\n          <div className={overlayClasses}>\n            {Overlay && (\n              <Overlay selected={this.state.isSelected} useRelay={useRelay} />\n            )}\n          </div>\n        </ImageContainer>\n        <MetadataBlock\n          extended={this.props.extended}\n          artwork={artwork}\n          useRelay={useRelay}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  Artwork,\n  graphql`\n    fragment Artwork_artwork on Artwork {\n      id\n      image {\n        url(version: \"large\")\n        aspect_ratio\n      }\n      ...Metadata_artwork\n    }\n  `\n)\n\ninterface RelayProps {\n  artwork: {\n    id: string | null\n    image: {\n      url: string | null\n      aspect_ratio: number | null\n    } | null\n  }\n}\n"]}]}
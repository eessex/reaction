{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Onboarding/Steps/Artists/PopularArtists.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Onboarding/Steps/Artists/PopularArtists.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _graphql, _graphql2, _dec, _class;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withContext } from \"../../../../Artsy/SystemContext\";\nimport * as React from \"react\";\nimport { commitMutation, createFragmentContainer, graphql, QueryRenderer } from \"react-relay\";\nimport track from \"react-tracking\";\nimport Events from \"../../../../Utils/Events\";\nimport ReplaceTransition from \"../../../Animation/ReplaceTransition\";\nimport ItemLink, { LinkContainer } from \"../../ItemLink\";\nvar PopularArtistsContent = (_dec = track({}, {\n  dispatch: function dispatch(data) {\n    return Events.postEvent(data);\n  }\n}), _dec(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopularArtistsContent, _React$Component);\n\n  function PopularArtistsContent(props, context) {\n    var _this;\n\n    _classCallCheck(this, PopularArtistsContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopularArtistsContent).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"excludedArtistIds\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"followCount\", 0);\n\n    _this.excludedArtistIds = new Set(_this.props.popular_artists.artists.filter(Boolean).map(function (item) {\n      return item._id;\n    }));\n    return _this;\n  }\n\n  _createClass(PopularArtistsContent, [{\n    key: \"onArtistFollowed\",\n    value: function onArtistFollowed(artist, store, data) {\n      var suggestedArtistEdge = data.followArtist.artist.related.suggested.edges[0];\n      var popularArtist = data.followArtist.popular_artists.artists[0];\n      var artistToSuggest = store.get((suggestedArtistEdge && suggestedArtistEdge.node || popularArtist).__id);\n      this.excludedArtistIds.add(artistToSuggest.getValue(\"_id\"));\n      var popularArtistsRootField = store.get(\"client:root\").getLinkedRecord(\"popular_artists\", {\n        exclude_followed_artists: true\n      });\n      var updatedPopularArtists = popularArtistsRootField.getLinkedRecords(\"artists\").filter(Boolean).map(function (artistItem) {\n        return artistItem.getDataID() === artist.__id ? artistToSuggest : artistItem;\n      });\n      popularArtistsRootField.setLinkedRecords(updatedPopularArtists, \"artists\");\n      this.followCount += 1;\n      this.props.updateFollowCount(this.followCount);\n      this.props.tracking.trackEvent({\n        action: \"Followed Artist\",\n        entity_id: artist._id,\n        entity_slug: artist.id,\n        context_module: \"onboarding recommended\"\n      });\n    }\n  }, {\n    key: \"onFollowedArtist\",\n    value: function onFollowedArtist(artist) {\n      var _this2 = this;\n\n      commitMutation(this.props.relay.environment, {\n        mutation: _graphql || (_graphql = function _graphql() {\n          var node = require(\"../../../../__generated__/PopularArtistsFollowArtistMutation.graphql\");\n\n          if (node.hash && node.hash !== \"e4118fabe762390fe9a4d9510a83afad\") {\n            console.error(\"The definition of 'PopularArtistsFollowArtistMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../../../__generated__/PopularArtistsFollowArtistMutation.graphql\");\n        }),\n        variables: {\n          input: {\n            artist_id: artist.id,\n            unfollow: false\n          },\n          excludedArtistIds: Array.from(this.excludedArtistIds)\n        },\n        updater: function updater(store, data) {\n          return _this2.onArtistFollowed(artist, store, data);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var artistItems = this.props.popular_artists.artists.filter(Boolean).map(function (artist, index) {\n        return React.createElement(LinkContainer, {\n          key: \"popular-artists-\".concat(index)\n        }, React.createElement(ReplaceTransition, {\n          transitionEnterTimeout: 1000,\n          transitionLeaveTimeout: 400\n        }, React.createElement(ItemLink, {\n          href: \"#\",\n          item: artist,\n          key: artist.id,\n          id: artist.id,\n          name: artist.name,\n          image_url: artist.image && artist.image.cropped.url,\n          onClick: function onClick() {\n            return _this3.onFollowedArtist(artist);\n          }\n        })));\n      });\n      return React.createElement(\"div\", null, artistItems);\n    }\n  }]);\n\n  return PopularArtistsContent;\n}(React.Component)) || _class);\nvar PopularArtistContentContainer = createFragmentContainer(PopularArtistsContent, {\n  popular_artists: function popular_artists() {\n    var node = require(\"../../../../__generated__/PopularArtistsContent_popular_artists.graphql\");\n\n    if (node.hash && node.hash !== \"c225d449a992dcdbb01fc35937dc96ba\") {\n      console.error(\"The definition of 'PopularArtistsContent_popular_artists' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/PopularArtistsContent_popular_artists.graphql\");\n  }\n});\n\nvar PopularArtistsComponent = function PopularArtistsComponent(_ref) {\n  var relayEnvironment = _ref.relayEnvironment,\n      updateFollowCount = _ref.updateFollowCount;\n  return React.createElement(QueryRenderer, {\n    environment: relayEnvironment,\n    query: _graphql2 || (_graphql2 = function _graphql2() {\n      var node = require(\"../../../../__generated__/PopularArtistsQuery.graphql\");\n\n      if (node.hash && node.hash !== \"6d83082e5c6129f5dfcdf118bb6f5462\") {\n        console.error(\"The definition of 'PopularArtistsQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../../../__generated__/PopularArtistsQuery.graphql\");\n    }),\n    variables: {},\n    render: function render(_ref2) {\n      var error = _ref2.error,\n          props = _ref2.props;\n\n      if (props) {\n        return React.createElement(PopularArtistContentContainer, {\n          popular_artists: props.popular_artists,\n          updateFollowCount: updateFollowCount\n        });\n      } else {\n        return null;\n      }\n    }\n  });\n};\n\nexport var PopularArtists = withContext(PopularArtistsComponent);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Onboarding/Steps/Artists/PopularArtists.tsx"],"names":["withContext","React","commitMutation","createFragmentContainer","graphql","QueryRenderer","track","Events","ReplaceTransition","ItemLink","LinkContainer","PopularArtistsContent","dispatch","data","postEvent","props","context","excludedArtistIds","Set","popular_artists","artists","filter","Boolean","map","item","_id","artist","store","suggestedArtistEdge","followArtist","related","suggested","edges","popularArtist","artistToSuggest","get","node","__id","add","getValue","popularArtistsRootField","getLinkedRecord","exclude_followed_artists","updatedPopularArtists","getLinkedRecords","artistItem","getDataID","setLinkedRecords","followCount","updateFollowCount","tracking","trackEvent","action","entity_id","entity_slug","id","context_module","relay","environment","mutation","variables","input","artist_id","unfollow","Array","from","updater","onArtistFollowed","artistItems","index","name","image","cropped","url","onFollowedArtist","Component","PopularArtistContentContainer","PopularArtistsComponent","relayEnvironment","error","PopularArtists"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA,SAAuBA,WAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,cADF,EAEEC,uBAFF,EAGEC,OAHF,EAIEC,aAJF,QAMO,aANP;AAOA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAOC,MAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,QAAP,IAAmBC,aAAnB;IA2BMC,qB,WADLL,KAAK,CAAC,EAAD,EAAK;AAAEM,EAAAA,QAAQ,EAAE,kBAAAC,IAAI;AAAA,WAAIN,MAAM,CAACO,SAAP,CAAiBD,IAAjB,CAAJ;AAAA;AAAhB,CAAL,C;;;;;AAKJ,iCAAYE,KAAZ,EAA0BC,OAA1B,EAAwC;AAAA;;AAAA;;AACtC,+FAAMD,KAAN,EAAaC,OAAb;;AADsC;;AAAA,0FAFlB,CAEkB;;AAEtC,UAAKC,iBAAL,GAAyB,IAAIC,GAAJ,CACvB,MAAKH,KAAL,CAAWI,eAAX,CAA2BC,OAA3B,CAAmCC,MAAnC,CAA0CC,OAA1C,EAAmDC,GAAnD,CAAuD,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,GAAT;AAAA,KAA3D,CADuB,CAAzB;AAFsC;AAKvC;;;;qCAGCC,M,EACAC,K,EACAd,I,EACM;AACN,UAAMe,mBAAmB,GACvBf,IAAI,CAACgB,YAAL,CAAkBH,MAAlB,CAAyBI,OAAzB,CAAiCC,SAAjC,CAA2CC,KAA3C,CAAiD,CAAjD,CADF;AAEA,UAAMC,aAAa,GAAGpB,IAAI,CAACgB,YAAL,CAAkBV,eAAlB,CAAkCC,OAAlC,CAA0C,CAA1C,CAAtB;AACA,UAAMc,eAAe,GAAGP,KAAK,CAACQ,GAAN,CACtB,CAAEP,mBAAmB,IAAIA,mBAAmB,CAACQ,IAA5C,IAAqDH,aAAtD,EAAqEI,IAD/C,CAAxB;AAGA,WAAKpB,iBAAL,CAAuBqB,GAAvB,CAA2BJ,eAAe,CAACK,QAAhB,CAAyB,KAAzB,CAA3B;AAEA,UAAMC,uBAAuB,GAAGb,KAAK,CAClCQ,GAD6B,CACzB,aADyB,EAE7BM,eAF6B,CAEb,iBAFa,EAEM;AAAEC,QAAAA,wBAAwB,EAAE;AAA5B,OAFN,CAAhC;AAIA,UAAMC,qBAAqB,GAAGH,uBAAuB,CAClDI,gBAD2B,CACV,SADU,EAE3BvB,MAF2B,CAEpBC,OAFoB,EAG3BC,GAH2B,CAI1B,UAAAsB,UAAU;AAAA,eACRA,UAAU,CAACC,SAAX,OAA2BpB,MAAM,CAACW,IAAlC,GAAyCH,eAAzC,GAA2DW,UADnD;AAAA,OAJgB,CAA9B;AAQAL,MAAAA,uBAAuB,CAACO,gBAAxB,CAAyCJ,qBAAzC,EAAgE,SAAhE;AAEA,WAAKK,WAAL,IAAoB,CAApB;AAEA,WAAKjC,KAAL,CAAWkC,iBAAX,CAA6B,KAAKD,WAAlC;AAEA,WAAKjC,KAAL,CAAWmC,QAAX,CAAoBC,UAApB,CAA+B;AAC7BC,QAAAA,MAAM,EAAE,iBADqB;AAE7BC,QAAAA,SAAS,EAAE3B,MAAM,CAACD,GAFW;AAG7B6B,QAAAA,WAAW,EAAE5B,MAAM,CAAC6B,EAHS;AAI7BC,QAAAA,cAAc,EAAE;AAJa,OAA/B;AAMD;;;qCAEgB9B,M,EAAgB;AAAA;;AAC/BxB,MAAAA,cAAc,CACZ,KAAKa,KAAL,CAAW0C,KAAX,CAAiBC,WADL,EAEZ;AACEC,QAAAA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UADV;AAmDEC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAEpC,MAAM,CAAC6B,EADb;AAELQ,YAAAA,QAAQ,EAAE;AAFL,WADE;AAKT9C,UAAAA,iBAAiB,EAAE+C,KAAK,CAACC,IAAN,CAAW,KAAKhD,iBAAhB;AALV,SAnDb;AA0DEiD,QAAAA,OAAO,EAAE,iBAACvC,KAAD,EAAQd,IAAR;AAAA,iBAAiB,MAAI,CAACsD,gBAAL,CAAsBzC,MAAtB,EAA8BC,KAA9B,EAAqCd,IAArC,CAAjB;AAAA;AA1DX,OAFY,CAAd;AA+DD;;;6BAEQ;AAAA;;AACP,UAAMuD,WAAW,GAAG,KAAKrD,KAAL,CAAWI,eAAX,CAA2BC,OAA3B,CACjBC,MADiB,CACVC,OADU,EAEjBC,GAFiB,CAEb,UAACG,MAAD,EAAS2C,KAAT;AAAA,eACH,oBAAC,aAAD;AAAe,UAAA,GAAG,4BAAqBA,KAArB;AAAlB,WACE,oBAAC,iBAAD;AACE,UAAA,sBAAsB,EAAE,IAD1B;AAEE,UAAA,sBAAsB,EAAE;AAF1B,WAIE,oBAAC,QAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,IAAI,EAAE3C,MAFR;AAGE,UAAA,GAAG,EAAEA,MAAM,CAAC6B,EAHd;AAIE,UAAA,EAAE,EAAE7B,MAAM,CAAC6B,EAJb;AAKE,UAAA,IAAI,EAAE7B,MAAM,CAAC4C,IALf;AAME,UAAA,SAAS,EAAE5C,MAAM,CAAC6C,KAAP,IAAgB7C,MAAM,CAAC6C,KAAP,CAAaC,OAAb,CAAqBC,GANlD;AAOE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,gBAAL,CAAsBhD,MAAtB,CAAN;AAAA;AAPX,UAJF,CADF,CADG;AAAA,OAFa,CAApB;AAqBA,aAAO,iCAAM0C,WAAN,CAAP;AACD;;;;EA3IiCnE,KAAK,CAAC0E,S;AA8I1C,IAAMC,6BAA6B,GAAGzE,uBAAuB,CAC3DQ,qBAD2D;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAA7D;;AAmBA,IAAMkE,uBAA8D,GAAG,SAAjEA,uBAAiE,OAGjE;AAAA,MAFJC,gBAEI,QAFJA,gBAEI;AAAA,MADJ7B,iBACI,QADJA,iBACI;AACJ,SACE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAE6B,gBADf;AAEE,IAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAFP;AASE,IAAA,SAAS,EAAE,EATb;AAUE,IAAA,MAAM,EAAE,uBAAsB;AAAA,UAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,UAAZhE,KAAY,SAAZA,KAAY;;AAC5B,UAAIA,KAAJ,EAAW;AACT,eACE,oBAAC,6BAAD;AACE,UAAA,eAAe,EAAEA,KAAK,CAACI,eADzB;AAEE,UAAA,iBAAiB,EAAE8B;AAFrB,UADF;AAMD,OAPD,MAOO;AACL,eAAO,IAAP;AACD;AACF;AArBH,IADF;AAyBD,CA7BD;;AA+BA,OAAO,IAAM+B,cAAc,GAAGhF,WAAW,CAAC6E,uBAAD,CAAlC","sourcesContent":["import { PopularArtistsContent_popular_artists } from \"__generated__/PopularArtistsContent_popular_artists.graphql\"\nimport {\n  PopularArtistsFollowArtistMutation,\n  PopularArtistsFollowArtistMutationResponse,\n} from \"__generated__/PopularArtistsFollowArtistMutation.graphql\"\nimport { PopularArtistsQuery } from \"__generated__/PopularArtistsQuery.graphql\"\nimport { ContextProps, withContext } from \"Artsy/SystemContext\"\nimport * as React from \"react\"\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  QueryRenderer,\n  RelayProp,\n} from \"react-relay\"\nimport track from \"react-tracking\"\nimport { RecordSourceSelectorProxy } from \"relay-runtime\"\nimport Events from \"../../../../Utils/Events\"\nimport ReplaceTransition from \"../../../Animation/ReplaceTransition\"\nimport ItemLink, { LinkContainer } from \"../../ItemLink\"\nimport { FollowProps } from \"../../Types\"\n\ninterface Artist {\n  id: string | null\n  _id: string | null\n  __id: string | null\n  name: string | null\n  image: {\n    cropped: {\n      url: string | null\n    }\n  } | null\n}\n\nexport interface RelayProps {\n  tracking?: any\n  relay?: RelayProp\n  popular_artists: PopularArtistsContent_popular_artists\n}\n\ninterface Props\n  extends React.HTMLProps<HTMLAnchorElement>,\n    RelayProps,\n    FollowProps {}\n\n@track({}, { dispatch: data => Events.postEvent(data) })\nclass PopularArtistsContent extends React.Component<Props, null> {\n  private excludedArtistIds: Set<string>\n  followCount: number = 0\n\n  constructor(props: Props, context: any) {\n    super(props, context)\n    this.excludedArtistIds = new Set(\n      this.props.popular_artists.artists.filter(Boolean).map(item => item._id)\n    )\n  }\n\n  onArtistFollowed(\n    artist: Artist,\n    store: RecordSourceSelectorProxy,\n    data: PopularArtistsFollowArtistMutationResponse\n  ): void {\n    const suggestedArtistEdge =\n      data.followArtist.artist.related.suggested.edges[0]\n    const popularArtist = data.followArtist.popular_artists.artists[0]\n    const artistToSuggest = store.get(\n      ((suggestedArtistEdge && suggestedArtistEdge.node) || popularArtist).__id\n    )\n    this.excludedArtistIds.add(artistToSuggest.getValue(\"_id\"))\n\n    const popularArtistsRootField = store\n      .get(\"client:root\")\n      .getLinkedRecord(\"popular_artists\", { exclude_followed_artists: true })\n\n    const updatedPopularArtists = popularArtistsRootField\n      .getLinkedRecords(\"artists\")\n      .filter(Boolean)\n      .map(\n        artistItem =>\n          artistItem.getDataID() === artist.__id ? artistToSuggest : artistItem\n      )\n\n    popularArtistsRootField.setLinkedRecords(updatedPopularArtists, \"artists\")\n\n    this.followCount += 1\n\n    this.props.updateFollowCount(this.followCount)\n\n    this.props.tracking.trackEvent({\n      action: \"Followed Artist\",\n      entity_id: artist._id,\n      entity_slug: artist.id,\n      context_module: \"onboarding recommended\",\n    })\n  }\n\n  onFollowedArtist(artist: Artist) {\n    commitMutation<PopularArtistsFollowArtistMutation>(\n      this.props.relay.environment,\n      {\n        mutation: graphql`\n          mutation PopularArtistsFollowArtistMutation(\n            $input: FollowArtistInput!\n            $excludedArtistIds: [String]!\n          ) {\n            followArtist(input: $input) {\n              popular_artists(\n                size: 1\n                exclude_followed_artists: true\n                exclude_artist_ids: $excludedArtistIds\n              ) {\n                artists {\n                  id\n                  _id\n                  __id\n                  name\n                  image {\n                    cropped(width: 100, height: 100) {\n                      url\n                    }\n                  }\n                }\n              }\n              artist {\n                __id\n                related {\n                  suggested(\n                    first: 1\n                    exclude_followed_artists: true\n                    exclude_artist_ids: $excludedArtistIds\n                  ) {\n                    edges {\n                      node {\n                        id\n                        _id\n                        __id\n                        name\n                        image {\n                          cropped(width: 100, height: 100) {\n                            url\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n        variables: {\n          input: {\n            artist_id: artist.id,\n            unfollow: false,\n          },\n          excludedArtistIds: Array.from(this.excludedArtistIds),\n        },\n        updater: (store, data) => this.onArtistFollowed(artist, store, data),\n      }\n    )\n  }\n\n  render() {\n    const artistItems = this.props.popular_artists.artists\n      .filter(Boolean)\n      .map((artist, index) => (\n        <LinkContainer key={`popular-artists-${index}`}>\n          <ReplaceTransition\n            transitionEnterTimeout={1000}\n            transitionLeaveTimeout={400}\n          >\n            <ItemLink\n              href=\"#\"\n              item={artist}\n              key={artist.id}\n              id={artist.id}\n              name={artist.name}\n              image_url={artist.image && artist.image.cropped.url}\n              onClick={() => this.onFollowedArtist(artist)}\n            />\n          </ReplaceTransition>\n        </LinkContainer>\n      ))\n\n    return <div>{artistItems}</div>\n  }\n}\n\nconst PopularArtistContentContainer = createFragmentContainer(\n  PopularArtistsContent,\n  graphql`\n    fragment PopularArtistsContent_popular_artists on PopularArtists {\n      artists {\n        id\n        _id\n        __id\n        name\n        image {\n          cropped(width: 100, height: 100) {\n            url\n          }\n        }\n      }\n    }\n  `\n)\n\nconst PopularArtistsComponent: React.SFC<ContextProps & FollowProps> = ({\n  relayEnvironment,\n  updateFollowCount,\n}) => {\n  return (\n    <QueryRenderer<PopularArtistsQuery>\n      environment={relayEnvironment}\n      query={graphql`\n        query PopularArtistsQuery {\n          popular_artists(exclude_followed_artists: true) {\n            ...PopularArtistsContent_popular_artists\n          }\n        }\n      `}\n      variables={{}}\n      render={({ error, props }) => {\n        if (props) {\n          return (\n            <PopularArtistContentContainer\n              popular_artists={props.popular_artists}\n              updateFollowCount={updateFollowCount}\n            />\n          )\n        } else {\n          return null\n        }\n      }}\n    />\n  )\n}\n\nexport const PopularArtists = withContext(PopularArtistsComponent)\n"]}]}
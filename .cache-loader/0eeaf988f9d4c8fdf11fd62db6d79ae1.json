{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Gene/GeneArtworksContent.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Gene/GeneArtworksContent.tsx","mtime":1518817219000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.GeneArtworksContent = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _ArtworkGrid = _interopRequireDefault(require(\"../ArtworkGrid\"));\n\nvar _Spinner = _interopRequireDefault(require(\"../Spinner\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar SpinnerContainer =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"GeneArtworksContent__SpinnerContainer\",\n  componentId: \"s1blwcdt-0\"\n})([\"width:100%;height:100px;position:relative;\"]);\n\nvar PageSize = 10;\n\nvar GeneArtworksContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneArtworksContent, _React$Component);\n\n  function GeneArtworksContent() {\n    var _ref;\n\n    var _temp, _this;\n\n    _classCallCheck(this, GeneArtworksContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = GeneArtworksContent.__proto__ || Object.getPrototypeOf(GeneArtworksContent)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"finishedPaginatingWithError\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: false\n    }), Object.defineProperty(_assertThisInitialized(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        loading: false\n      }\n    }), _temp));\n  }\n\n  _createClass(GeneArtworksContent, [{\n    key: \"loadMoreArtworks\",\n    value: function loadMoreArtworks() {\n      var _this2 = this;\n\n      var hasMore = this.props.filtered_artworks.artworks.pageInfo.hasNextPage;\n      var origLength = this.props.filtered_artworks.artworks.edges.length;\n\n      if (hasMore && !this.state.loading && !this.finishedPaginatingWithError) {\n        this.setState({\n          loading: true\n        }, function () {\n          _this2.props.relay.loadMore(PageSize, function (error) {\n            if (error) {\n              console.error(error);\n            }\n\n            var newLength = _this2.props.filtered_artworks.artworks.edges.length;\n            var newHasMore = _this2.props.filtered_artworks.artworks.pageInfo.hasNextPage;\n\n            if (newLength - origLength < PageSize && newHasMore) {\n              console.error(\"Total count inconsistent with actual records returned for gene: \".concat(_this2.props.geneID));\n              _this2.finishedPaginatingWithError = true;\n            }\n\n            _this2.setState({\n              loading: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", null, React.createElement(_ArtworkGrid.default, {\n        artworks: this.props.filtered_artworks.artworks,\n        columnCount: 4,\n        itemMargin: 40,\n        onLoadMore: function onLoadMore() {\n          return _this3.loadMoreArtworks();\n        }\n      }), React.createElement(SpinnerContainer, null, this.state.loading ? React.createElement(_Spinner.default, null) : \"\"));\n    }\n  }]);\n\n  return GeneArtworksContent;\n}(React.Component);\n\nexports.GeneArtworksContent = GeneArtworksContent;\n\nvar _default = (0, _reactRelay.createPaginationContainer)(GeneArtworksContent, {\n  filtered_artworks: function filtered_artworks() {\n    var node = require(\"../../__generated__/GeneArtworksContent_filtered_artworks.graphql\");\n\n    if (node.hash && node.hash !== \"d30d59f658dfd8265d9991f69697e6f5\") {\n      console.error(\"The definition of 'GeneArtworksContent_filtered_artworks' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/GeneArtworksContent_filtered_artworks.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.filtered_artworks.artworks;\n  },\n  getFragmentVariables: function getFragmentVariables(prevVars, totalCount) {\n    return _extends({}, prevVars, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(props, _ref2, fragmentVariables) {\n    var count = _ref2.count,\n        cursor = _ref2.cursor;\n    return _extends({}, fragmentVariables, {\n      count: count,\n      cursor: cursor,\n      filteredArtworksNodeID: props.filtered_artworks.__id\n    });\n  },\n  query: function query() {\n    var node = require(\"../../__generated__/GeneArtworksContentQuery.graphql\");\n\n    if (node.hash && node.hash !== \"f4d2d86f15f82d4e5690d66b96f784c4\") {\n      console.error(\"The definition of 'GeneArtworksContentQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/GeneArtworksContentQuery.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/Gene/GeneArtworksContent.tsx"],"names":["SpinnerContainer","div","PageSize","GeneArtworksContent","loading","hasMore","props","filtered_artworks","artworks","pageInfo","hasNextPage","origLength","edges","length","state","finishedPaginatingWithError","setState","relay","loadMore","error","console","newLength","newHasMore","geneID","loadMoreArtworks","React","Component","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","fragmentVariables","cursor","filteredArtworksNodeID","__id","query"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAMA;AAAA;AAAmB,0BAAOC,GAA1B;AAAA;AAAA;AAAA,kDAAN;;AAMA,IAAMC,WAAW,EAAjB;;IAEaC,mB;;;;;;;;;;;;;;;;;;;;aAC2B;;;;;aAE9B;AACNC,iBAAS;AADH;;;;;;uCAIW;AAAA;;AACjB,UAAMC,UAAU,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,QAA7B,CAAsCC,QAAtC,CAA+CC,WAA/D;AACA,UAAMC,aAAa,KAAKL,KAAL,CAAWC,iBAAX,CAA6BC,QAA7B,CAAsCI,KAAtC,CAA4CC,MAA/D;;AACA,UAAIR,WAAW,CAAC,KAAKS,KAAL,CAAWV,OAAvB,IAAkC,CAAC,KAAKW,2BAA5C,EAAyE;AACvE,aAAKC,QAAL,CAAc;AAAEZ,mBAAS;AAAX,SAAd,EAAiC,YAAM;AACrC,iBAAKE,KAAL,CAAWW,KAAX,CAAiBC,QAAjB,CAA0BhB,QAA1B,EAAoC,iBAAS;AAC3C,gBAAIiB,KAAJ,EAAW;AACTC,sBAAQD,KAAR,CAAcA,KAAd;AACD;;AACD,gBAAME,YAAY,OAAKf,KAAL,CAAWC,iBAAX,CAA6BC,QAA7B,CAAsCI,KAAtC,CAA4CC,MAA9D;AACA,gBAAMS,aAAa,OAAKhB,KAAL,CAAWC,iBAAX,CAA6BC,QAA7B,CAAsCC,QAAtC,CAChBC,WADH;;AAEA,gBAAIW,YAAYV,UAAZ,GAAyBT,QAAzB,IAAqCoB,UAAzC,EAAqD;AACnDF,sBAAQD,KAAR,2EACqE,OAChEb,KADgE,CAC1DiB,MAFX;AAIA,qBAAKR,2BAAL,GAAmC,IAAnC;AACD;;AACD,mBAAKC,QAAL,CAAc;AAAEZ,uBAAS;AAAX,aAAd;AACD,WAfD;AAgBD,SAjBD;AAkBD;AACF;;;6BAEQ;AAAA;;AACP,aACE,iCACE;AACE,kBAAU,KAAKE,KAAL,CAAWC,iBAAX,CAA6BC,QADzC;AAEE,qBAAa,CAFf;AAGE,oBAAY,EAHd;AAIE,oBAAY;AAAA,iBAAM,OAAKgB,gBAAL,EAAN;AAAA;AAJd,QADF,EAOE,oBAAC,gBAAD,QACG,KAAKV,KAAL,CAAWV,OAAX,GAAqB,2CAArB,GAAmC,EADtC,CAPF,CADF;AAaD;;;;EA9CsCqB,MAAMC,S;;;;eAiDhC,2CACbvB,mBADa,EAEb;AACEI;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADF,CAFa,EA6Bb;AACEoB,aAAW,SADb;AAEEC,wBAFF,kCAEyBtB,KAFzB,EAEgC;AAC5B,WAAOA,MAAMC,iBAAN,CAAwBC,QAA/B;AACD,GAJH;AAKEqB,sBALF,gCAKuBC,QALvB,EAKiCC,UALjC,EAK6C;AACzC,wBACKD,QADL;AAEEE,aAAOD;AAFT;AAID,GAVH;AAWEE,cAXF,wBAWe3B,KAXf,SAWyC4B,iBAXzC,EAW4D;AAAA,QAApCF,KAAoC,SAApCA,KAAoC;AAAA,QAA7BG,MAA6B,SAA7BA,MAA6B;AACxD,wBAGKD,iBAHL;AAIEF,kBAJF;AAKEG,oBALF;AAMEC,8BAAwB9B,MAAMC,iBAAN,CAAwB8B;AANlD;AAQD,GApBH;AAqBEC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AArBF,CA7Ba,C","file":"/Users/eve/development/reaction/src/Components/Gene/GeneArtworksContent.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import * as React from \"react\"\nimport {\n  ConnectionData,\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\nimport ArtworkGrid from \"../ArtworkGrid\"\nimport Spinner from \"../Spinner\"\n\ninterface Props extends RelayProps {\n  relay?: RelayPaginationProp\n  geneID: string\n}\n\ninterface State {\n  loading: boolean\n}\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`\n\nconst PageSize = 10\n\nexport class GeneArtworksContent extends React.Component<Props, State> {\n  private finishedPaginatingWithError = false\n\n  state = {\n    loading: false,\n  }\n\n  loadMoreArtworks() {\n    const hasMore = this.props.filtered_artworks.artworks.pageInfo.hasNextPage\n    const origLength = this.props.filtered_artworks.artworks.edges.length\n    if (hasMore && !this.state.loading && !this.finishedPaginatingWithError) {\n      this.setState({ loading: true }, () => {\n        this.props.relay.loadMore(PageSize, error => {\n          if (error) {\n            console.error(error)\n          }\n          const newLength = this.props.filtered_artworks.artworks.edges.length\n          const newHasMore = this.props.filtered_artworks.artworks.pageInfo\n            .hasNextPage\n          if (newLength - origLength < PageSize && newHasMore) {\n            console.error(\n              `Total count inconsistent with actual records returned for gene: ${this\n                .props.geneID}`\n            )\n            this.finishedPaginatingWithError = true\n          }\n          this.setState({ loading: false })\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ArtworkGrid\n          artworks={this.props.filtered_artworks.artworks as any}\n          columnCount={4}\n          itemMargin={40}\n          onLoadMore={() => this.loadMoreArtworks()}\n        />\n        <SpinnerContainer>\n          {this.state.loading ? <Spinner /> : \"\"}\n        </SpinnerContainer>\n      </div>\n    )\n  }\n}\n\nexport default createPaginationContainer(\n  GeneArtworksContent,\n  {\n    filtered_artworks: graphql`\n      fragment GeneArtworksContent_filtered_artworks on FilterArtworks\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\", defaultValue: \"\" }\n        ) {\n        __id\n        artworks: artworks_connection(\n          first: $count\n          after: $cursor\n          sort: $sort\n        ) @connection(key: \"GeneArtworksContent_filtered_artworks\") {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          ...ArtworkGrid_artworks\n          edges {\n            node {\n              __id\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.filtered_artworks.artworks as ConnectionData\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return {\n        ...prevVars,\n        count: totalCount,\n      }\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n        filteredArtworksNodeID: props.filtered_artworks.__id,\n      }\n    },\n    query: graphql`\n      query GeneArtworksContentQuery(\n        $filteredArtworksNodeID: ID!\n        $count: Int!\n        $cursor: String\n        $sort: String\n      ) {\n        node(__id: $filteredArtworksNodeID) {\n          ...GeneArtworksContent_filtered_artworks\n            @arguments(count: $count, cursor: $cursor)\n        }\n      }\n    `,\n  }\n)\n\ninterface RelayProps {\n  filtered_artworks: {\n    artworks: {\n      edges: Array<{}>\n      pageInfo: {\n        hasNextPage: boolean\n      }\n    }\n  }\n}\n"]}]}
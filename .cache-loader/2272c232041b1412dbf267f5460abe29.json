{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Publishing/Sections/Truncator.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Sections/Truncator.tsx","mtime":1524839155000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Truncator = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _server = _interopRequireDefault(require(\"react-dom/server\"));\n\nvar _ErrorBoundary = require(\"../../ErrorBoundary\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Truncator = function Truncator(_ref) {\n  var children = _ref.children,\n      maxLineCount = _ref.maxLineCount;\n\n  var html = _server.default.renderToStaticMarkup(_react.default.createElement(\"span\", null, children)); // FIXME: Make safe for tests\n\n\n  var HTMLEllipsis;\n\n  if (process.env.NODE_ENV !== \"test\") {\n    HTMLEllipsis = require(\"react-lines-ellipsis/lib/html\");\n  } else {\n    HTMLEllipsis = function HTMLEllipsis(_ref2) {\n      var unsafeHTML = _ref2.unsafeHTML;\n      return _react.default.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: unsafeHTML\n        }\n      });\n    };\n  }\n\n  return _react.default.createElement(_ErrorBoundary.ErrorBoundary, null, _react.default.createElement(HTMLEllipsis, {\n    unsafeHTML: html,\n    trimRight: false,\n    maxLine: maxLineCount || 2,\n    ellipsis: \"...\"\n  }));\n};\n\nexports.Truncator = Truncator;",{"version":3,"sources":["src/Components/Publishing/Sections/Truncator.tsx"],"names":["Truncator","children","maxLineCount","html","renderToStaticMarkup","HTMLEllipsis","process","env","NODE_ENV","require","unsafeHTML","__html"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAMO,IAAMA,YAA8B,SAA9BA,SAA8B,OAAgC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AACzE,MAAMC,OAAO,gBAASC,oBAAT,CAA8B,2CAAOH,QAAP,CAA9B,CAAb,CADyE,CAGzE;;;AACA,MAAII,YAAJ;;AAEA,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnCH,mBAAeI,QAAQ,+BAAR,CAAf;AACD,GAFD,MAEO;AACLJ,mBAAe;AAAA,UAAGK,UAAH,SAAGA,UAAH;AAAA,aACb;AACE,iCAAyB;AACvBC,kBAAQD;AADe;AAD3B,QADa;AAAA,KAAf;AAOD;;AAED,SACE,iEACE,6BAAC,YAAD;AACE,gBAAYP,IADd;AAEE,eAAW,KAFb;AAGE,aAASD,gBAAgB,CAH3B;AAIE,cAAS;AAJX,IADF,CADF;AAUD,CA5BM","file":"/Users/eve/development/reaction/src/Components/Publishing/Sections/Truncator.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom/server\"\nimport { ErrorBoundary } from \"../../ErrorBoundary\"\n\ninterface Props {\n  maxLineCount?: number\n}\n\nexport const Truncator: React.SFC<Props> = ({ children, maxLineCount }) => {\n  const html = ReactDOM.renderToStaticMarkup(<span>{children}</span>)\n\n  // FIXME: Make safe for tests\n  let HTMLEllipsis\n\n  if (process.env.NODE_ENV !== \"test\") {\n    HTMLEllipsis = require(\"react-lines-ellipsis/lib/html\")\n  } else {\n    HTMLEllipsis = ({ unsafeHTML }) => (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: unsafeHTML,\n        }}\n      />\n    )\n  }\n\n  return (\n    <ErrorBoundary>\n      <HTMLEllipsis\n        unsafeHTML={html}\n        trimRight={false}\n        maxLine={maxLineCount || 2}\n        ellipsis=\"...\"\n      />\n    </ErrorBoundary>\n  )\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Publishing/Sections/FullscreenViewer/FullscreenViewer.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Sections/FullscreenViewer/FullscreenViewer.tsx","mtime":1519658991000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FullscreenViewer = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactSlick = _interopRequireDefault(require(\"react-slick\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Helpers = require(\"../../../Helpers\");\n\nvar _Icon = _interopRequireDefault(require(\"../../../Icon\"));\n\nvar _Slide = require(\"./Slide\");\n\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  position: absolute;\\n  height: 100vh;\\n  top: 0;\\n  box-sizing: border-box;\\n  \", \";\\n  \", \";\\n  \", \" {\\n    z-index: 10;\\n    cursor: pointer;\\n    padding: 60px;\\n  };\\n  \", \";\\n\"], [\"\\n  display: flex;\\n  align-items: center;\\n  position: absolute;\\n  height: 100vh;\\n  top: 0;\\n  box-sizing: border-box;\\n  \", \";\\n  \", \";\\n  \", \" {\\n    z-index: 10;\\n    cursor: pointer;\\n    padding: 60px;\\n  };\\n  \", \";\\n\"]),\n    _templateObject2 = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n    display: none;\\n  \"], [\"\\n    display: none;\\n  \"]);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar FullscreenViewer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FullscreenViewer, _Component);\n\n  function FullscreenViewer(props) {\n    var _this;\n\n    _classCallCheck(this, FullscreenViewer);\n\n    _this = _possibleConstructorReturn(this, (FullscreenViewer.__proto__ || Object.getPrototypeOf(FullscreenViewer)).call(this, props));\n    Object.defineProperty(_assertThisInitialized(_this), \"slider\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"handleKeydown\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(e) {\n        if (e.keyCode === 27) {\n          _this.close(e);\n        }\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"toggleCaption\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        _this.setState({\n          isCaptionOpen: !_this.state.isCaptionOpen\n        });\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"close\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(e) {\n        _this.props.onClose();\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"renderImageComponents\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        var images = _this.props.images;\n        return (0, _lodash.map)(images, function (section, i) {\n          return _react.default.createElement(_Slide.Slide, {\n            isCaptionOpen: _this.state.isCaptionOpen,\n            section: section,\n            index: i + 1,\n            total: images.length,\n            key: i\n          });\n        });\n      }\n    });\n    _this.state = {\n      isCaptionOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(FullscreenViewer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.slider) {\n        this.slider.innerSlider.list.setAttribute(\"tabindex\", 0);\n        this.slider.innerSlider.list.focus();\n      }\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        onToggleCaption: this.toggleCaption\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sliderSettings = {\n        dots: false,\n        infinite: false,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        accessibility: true,\n        lazyLoad: true,\n        draggable: true,\n        nextArrow: _react.default.createElement(RightArrow, null),\n        prevArrow: _react.default.createElement(LeftArrow, null),\n        initialSlide: this.props.slideIndex\n      };\n\n      if (!this.props.show) {\n        return null;\n      }\n\n      return _react.default.createElement(FullscreenViewerContainer, {\n        onKeyDown: this.handleKeydown\n      }, _react.default.createElement(_reactSlick.default, _extends({}, sliderSettings, {\n        ref: function ref(slider) {\n          return _this2.slider = slider;\n        }\n      }), this.renderImageComponents()), _react.default.createElement(Close, {\n        onClick: this.close\n      }, _react.default.createElement(_Icon.default, {\n        name: \"close\",\n        color: \"gray\",\n        fontSize: \"24px\"\n      })));\n    }\n  }]);\n\n  return FullscreenViewer;\n}(_react.Component);\n\nexports.FullscreenViewer = FullscreenViewer;\nObject.defineProperty(FullscreenViewer, \"childContextTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    onToggleCaption: _propTypes.default.func\n  }\n});\n\nvar LeftArrow = function LeftArrow(props) {\n  return _react.default.createElement(NavArrow, {\n    direction: \"left\",\n    onClick: props.onClick\n  }, _react.default.createElement(_Icon.default, {\n    name: \"chevron-left\",\n    color: \"black\",\n    fontSize: \"24px\"\n  }));\n};\n\nvar RightArrow = function RightArrow(props) {\n  return _react.default.createElement(NavArrow, {\n    direction: \"right\",\n    onClick: props.onClick\n  }, _react.default.createElement(_Icon.default, {\n    name: \"chevron-right\",\n    color: \"black\",\n    fontSize: \"24px\"\n  }));\n};\n\nvar FullscreenViewerContainer =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"FullscreenViewer__FullscreenViewerContainer\",\n  componentId: \"wa7mcn-0\"\n})([\"width:100vw;height:100vh;overflow:hidden;position:fixed;z-index:1070;top:0;left:0;background-color:white;\"]);\n\nvar Close =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"FullscreenViewer__Close\",\n  componentId: \"wa7mcn-1\"\n})([\"position:absolute;right:0;top:0;margin:20px;cursor:pointer;\"]);\n\nvar div = _styledComponents.default.div;\nvar NavArrow = div(_templateObject, function (props) {\n  return props.direction === \"left\" ? \"left: 0px;\" : \"\";\n}, function (props) {\n  return props.direction === \"right\" ? \"right: 0px;\" : \"\";\n}, _Icon.default, _Helpers.pMedia.sm(_templateObject2));",{"version":3,"sources":["src/Components/Publishing/Sections/FullscreenViewer/FullscreenViewer.tsx"],"names":["FullscreenViewer","props","e","keyCode","close","setState","isCaptionOpen","state","onClose","images","section","i","length","slider","innerSlider","list","setAttribute","focus","onToggleCaption","toggleCaption","sliderSettings","dots","infinite","slidesToShow","slidesToScroll","accessibility","lazyLoad","draggable","nextArrow","prevArrow","initialSlide","slideIndex","show","handleKeydown","renderImageComponents","func","LeftArrow","onClick","RightArrow","FullscreenViewerContainer","div","Close","NavArrow","direction","sm"],"mappings":"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","file":"/Users/eve/development/reaction/src/Components/Publishing/Sections/FullscreenViewer/FullscreenViewer.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { map } from \"lodash\"\nimport PropTypes from \"prop-types\"\nimport React, { Component, HTMLProps } from \"react\"\nimport Slider from \"react-slick\"\nimport styled, { StyledFunction } from \"styled-components\"\nimport { pMedia } from \"../../../Helpers\"\nimport Icon from \"../../../Icon\"\nimport { Slide } from \"./Slide\"\n\ninterface FullscreenViewerProps extends HTMLProps<HTMLDivElement> {\n  images: any\n  show: boolean\n  onClose: () => void\n  slideIndex?: number\n}\n\ninterface FullscreenViewerState {\n  isCaptionOpen: boolean\n}\n\nexport class FullscreenViewer extends Component<\n  FullscreenViewerProps,\n  FullscreenViewerState\n> {\n  static childContextTypes = {\n    onToggleCaption: PropTypes.func,\n  }\n\n  private slider: any\n\n  constructor(props) {\n    super(props)\n    this.state = { isCaptionOpen: false }\n  }\n\n  componentDidUpdate() {\n    if (this.slider) {\n      this.slider.innerSlider.list.setAttribute(\"tabindex\", 0)\n      this.slider.innerSlider.list.focus()\n    }\n  }\n\n  handleKeydown = e => {\n    if (e.keyCode === 27) {\n      this.close(e)\n    }\n  }\n\n  getChildContext() {\n    return { onToggleCaption: this.toggleCaption }\n  }\n\n  toggleCaption = () => {\n    this.setState({ isCaptionOpen: !this.state.isCaptionOpen })\n  }\n\n  close = e => {\n    this.props.onClose()\n  }\n\n  renderImageComponents = () => {\n    const images = this.props.images\n    return map(images, (section, i) => {\n      return (\n        <Slide\n          isCaptionOpen={this.state.isCaptionOpen}\n          section={section}\n          index={i + 1}\n          total={images.length}\n          key={i}\n        />\n      )\n    })\n  }\n\n  render() {\n    const sliderSettings = {\n      dots: false,\n      infinite: false,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      accessibility: true,\n      lazyLoad: true,\n      draggable: true,\n      nextArrow: <RightArrow />,\n      prevArrow: <LeftArrow />,\n      initialSlide: this.props.slideIndex,\n    }\n    if (!this.props.show) {\n      return null\n    }\n    return (\n      <FullscreenViewerContainer onKeyDown={this.handleKeydown}>\n        <Slider {...sliderSettings} ref={slider => (this.slider = slider)}>\n          {this.renderImageComponents()}\n        </Slider>\n        <Close onClick={this.close}>\n          <Icon name=\"close\" color=\"gray\" fontSize=\"24px\" />\n        </Close>\n      </FullscreenViewerContainer>\n    )\n  }\n}\n\nconst LeftArrow = props => {\n  return (\n    <NavArrow direction=\"left\" onClick={props.onClick}>\n      <Icon name=\"chevron-left\" color=\"black\" fontSize=\"24px\" />\n    </NavArrow>\n  )\n}\n\nconst RightArrow = props => {\n  return (\n    <NavArrow direction=\"right\" onClick={props.onClick}>\n      <Icon name=\"chevron-right\" color=\"black\" fontSize=\"24px\" />\n    </NavArrow>\n  )\n}\n\nconst FullscreenViewerContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  position: fixed;\n  z-index: 1070;\n  top: 0;\n  left: 0;\n  background-color: white;\n`\nconst Close = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 20px;\n  cursor: pointer;\n`\ninterface NavArrowProps extends React.HTMLProps<HTMLDivElement> {\n  direction: string\n}\nconst div: StyledFunction<NavArrowProps> = styled.div\nconst NavArrow = div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  height: 100vh;\n  top: 0;\n  box-sizing: border-box;\n  ${props => (props.direction === \"left\" ? \"left: 0px;\" : \"\")};\n  ${props => (props.direction === \"right\" ? \"right: 0px;\" : \"\")};\n  ${Icon} {\n    z-index: 10;\n    cursor: pointer;\n    padding: 60px;\n  };\n  ${pMedia.sm`\n    display: none;\n  `};\n`\n"]}]}
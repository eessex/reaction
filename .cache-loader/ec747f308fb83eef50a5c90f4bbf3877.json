{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Artwork/GridItem.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Artwork/GridItem.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _pickBy from \"lodash/pickBy\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, Sans } from \"@artsy/palette\";\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport { data as sd } from \"sharify\";\nimport styled from \"styled-components\";\nimport { Responsive } from \"../../Utils/Responsive\";\nimport colors from \"../../Assets/Colors\";\nimport RelayMetadata, { Metadata } from \"./Metadata\";\nimport RelaySaveButton, { SaveButton } from \"./Save\";\nvar Image = styled.img.withConfig({\n  displayName: \"GridItem__Image\",\n  componentId: \"fp8wpb-0\"\n})([\"width:100%;position:absolute;top:0;left:0;\"]);\nvar Placeholder = styled.div.withConfig({\n  displayName: \"GridItem__Placeholder\",\n  componentId: \"fp8wpb-1\"\n})([\"background-color:\", \";position:relative;width:100%;\"], colors.grayMedium);\nvar IMAGE_QUALITY = 80;\nvar Badge = styled.div.withConfig({\n  displayName: \"GridItem__Badge\",\n  componentId: \"fp8wpb-2\"\n})([\"border-radius:2px;letter-spacing:0.3px;padding:1px 5px 0px 6px;background-color:white;box-shadow:0 2px 5px 0 rgba(0,0,0,0.1);text-transform:uppercase;margin-left:5px;\"]);\nvar Badges = styled(Flex).withConfig({\n  displayName: \"GridItem__Badges\",\n  componentId: \"fp8wpb-3\"\n})([\"position:absolute;bottom:8px;left:3px;\"]);\n\nvar ArtworkGridItemContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArtworkGridItemContainer, _React$Component);\n\n  function ArtworkGridItemContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArtworkGridItemContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArtworkGridItemContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isMounted: false\n    });\n\n    return _this;\n  }\n\n  _createClass(ArtworkGridItemContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        isMounted: true\n      });\n    }\n  }, {\n    key: \"getImageUrl\",\n    value: function getImageUrl(breakpoints) {\n      var imageURL = this.props.artwork.image.url;\n\n      if (!imageURL) {\n        return null;\n      }\n\n      if (this.state.isMounted) {\n        var breakpoint = Object.keys(_pickBy(breakpoints))[0];\n\n        var getWidth = function getWidth() {\n          switch (breakpoint) {\n            case \"xs\":\n            case \"sm\":\n            case \"md\":\n              return 400;\n\n            case \"lg\":\n            case \"xl\":\n            default:\n              return 300;\n          }\n        };\n\n        var width = Math.floor(getWidth());\n        var height = Math.floor(width / this.props.artwork.image.aspect_ratio); // Either scale or crop, based on if an aspect ratio is available.\n\n        var type = this.props.artwork.image.aspect_ratio ? \"fit\" : \"fill\"; // tslint:disable-next-line:max-line-length\n\n        return \"\".concat(sd.GEMINI_CLOUDFRONT_URL, \"/?resize_to=\").concat(type, \"&width=\").concat(width, \"&height=\").concat(height, \"&quality=\").concat(IMAGE_QUALITY, \"&src=\").concat(encodeURIComponent(imageURL));\n      }\n    }\n  }, {\n    key: \"renderArtworkBadge\",\n    value: function renderArtworkBadge(_ref) {\n      var is_biddable = _ref.is_biddable,\n          is_acquireable = _ref.is_acquireable;\n      return React.createElement(React.Fragment, null, React.createElement(Badges, null, is_biddable && React.createElement(Badge, null, React.createElement(Sans, {\n        size: \"1\"\n      }, \"Bid\")), is_acquireable && React.createElement(Badge, null, React.createElement(Sans, {\n        size: \"1\"\n      }, \"Buy Now\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          className = _this$props.className,\n          artwork = _this$props.artwork,\n          useRelay = _this$props.useRelay,\n          user = _this$props.user;\n      var SaveButtonBlock = useRelay ? RelaySaveButton : SaveButton;\n      var MetadataBlock = useRelay ? RelayMetadata : Metadata;\n      var userSpread = {};\n\n      if (user) {\n        userSpread = {\n          user: user\n        };\n      }\n\n      var hasBuyNowLabFeature = user && user.lab_features && user.lab_features.includes(\"New Buy Now Flow\");\n      return React.createElement(Responsive, null, function (_ref2) {\n        var hover = _ref2.hover,\n            breakpoints = _objectWithoutProperties(_ref2, [\"hover\"]);\n\n        return React.createElement(\"div\", {\n          className: className,\n          style: style\n        }, React.createElement(Placeholder, {\n          style: {\n            paddingBottom: artwork.image.placeholder\n          }\n        }, React.createElement(\"a\", {\n          href: artwork.href\n        }, React.createElement(Image, {\n          src: _this2.getImageUrl(breakpoints)\n        })), hasBuyNowLabFeature && _this2.renderArtworkBadge(artwork), (hover === undefined || hover) && React.createElement(SaveButtonBlock, _extends({\n          className: \"artwork-save\",\n          artwork: artwork,\n          style: {\n            position: \"absolute\",\n            right: \"10px\",\n            bottom: \"10px\"\n          },\n          useRelay: useRelay\n        }, userSpread, {\n          mediator: _this2.props.mediator\n        }))), React.createElement(MetadataBlock, {\n          artwork: artwork,\n          useRelay: useRelay\n        }));\n      });\n    }\n  }]);\n\n  return ArtworkGridItemContainer;\n}(React.Component);\n\n_defineProperty(ArtworkGridItemContainer, \"defaultProps\", {\n  useRelay: true\n});\n\nexport var ArtworkGridItem = styled(ArtworkGridItemContainer).withConfig({\n  displayName: \"GridItem__ArtworkGridItem\",\n  componentId: \"fp8wpb-4\"\n})([\".artwork-save{opacity:0;}&:hover .artwork-save{opacity:1;}\"]);\nexport default createFragmentContainer(ArtworkGridItem, {\n  artwork: function artwork() {\n    var node = require(\"../../__generated__/GridItem_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"7d787e18a67dccb515e738babcc841fc\") {\n      console.error(\"The definition of 'GridItem_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/GridItem_artwork.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Artwork/GridItem.tsx"],"names":["Flex","Sans","React","createFragmentContainer","graphql","data","sd","styled","Responsive","colors","RelayMetadata","Metadata","RelaySaveButton","SaveButton","Image","img","Placeholder","div","grayMedium","IMAGE_QUALITY","Badge","Badges","ArtworkGridItemContainer","isMounted","setState","breakpoints","imageURL","props","artwork","image","url","state","breakpoint","Object","keys","getWidth","width","Math","floor","height","aspect_ratio","type","GEMINI_CLOUDFRONT_URL","encodeURIComponent","is_biddable","is_acquireable","style","className","useRelay","user","SaveButtonBlock","MetadataBlock","userSpread","hasBuyNowLabFeature","lab_features","includes","hover","paddingBottom","placeholder","href","getImageUrl","renderArtworkBadge","undefined","position","right","bottom","mediator","Component","ArtworkGridItem"],"mappings":"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","sourcesContent":["import { Flex, Sans } from \"@artsy/palette\"\nimport { GridItem_artwork } from \"__generated__/GridItem_artwork.graphql\"\nimport { pickBy } from \"lodash\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport styled from \"styled-components\"\nimport { Responsive } from \"Utils/Responsive\"\nimport colors from \"../../Assets/Colors\"\nimport RelayMetadata, { Metadata } from \"./Metadata\"\nimport RelaySaveButton, { SaveButton } from \"./Save\"\n\nconst Image = styled.img`\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`\n\nconst Placeholder = styled.div`\n  background-color: ${colors.grayMedium};\n  position: relative;\n  width: 100%;\n`\n\ninterface Props extends React.HTMLProps<ArtworkGridItemContainer> {\n  useRelay?: boolean\n  artwork: GridItem_artwork\n  style?: any\n  user?: User\n  mediator?: {\n    trigger: (action: string, config: object) => void\n  }\n}\n\ninterface State {\n  isMounted: boolean\n}\n\nconst IMAGE_QUALITY = 80\n\nconst Badge = styled.div`\n  border-radius: 2px;\n  letter-spacing: 0.3px;\n  padding: 1px 5px 0px 6px;\n  background-color: white;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);\n  text-transform: uppercase;\n  margin-left: 5px;\n`\n\nconst Badges = styled(Flex)`\n  position: absolute;\n  bottom: 8px;\n  left: 3px;\n`\n\nclass ArtworkGridItemContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    useRelay: true,\n  }\n\n  state = {\n    isMounted: false,\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true,\n    })\n  }\n\n  getImageUrl(breakpoints) {\n    const imageURL = this.props.artwork.image.url\n\n    if (!imageURL) {\n      return null\n    }\n\n    if (this.state.isMounted) {\n      const breakpoint = Object.keys(pickBy(breakpoints))[0]\n      const getWidth = () => {\n        switch (breakpoint) {\n          case \"xs\":\n          case \"sm\":\n          case \"md\":\n            return 400\n          case \"lg\":\n          case \"xl\":\n          default:\n            return 300\n        }\n      }\n\n      const width = Math.floor(getWidth())\n      const height = Math.floor(width / this.props.artwork.image.aspect_ratio)\n\n      // Either scale or crop, based on if an aspect ratio is available.\n      const type = this.props.artwork.image.aspect_ratio ? \"fit\" : \"fill\"\n      // tslint:disable-next-line:max-line-length\n      return `${\n        sd.GEMINI_CLOUDFRONT_URL\n      }/?resize_to=${type}&width=${width}&height=${height}&quality=${IMAGE_QUALITY}&src=${encodeURIComponent(\n        imageURL\n      )}`\n    }\n  }\n\n  renderArtworkBadge({ is_biddable, is_acquireable }) {\n    return (\n      <React.Fragment>\n        <Badges>\n          {is_biddable && (\n            <Badge>\n              <Sans size=\"1\">Bid</Sans>\n            </Badge>\n          )}\n          {is_acquireable && (\n            <Badge>\n              <Sans size=\"1\">Buy Now</Sans>\n            </Badge>\n          )}\n        </Badges>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const { style, className, artwork, useRelay, user } = this.props\n    const SaveButtonBlock = useRelay ? RelaySaveButton : SaveButton\n    const MetadataBlock = useRelay ? RelayMetadata : Metadata\n\n    let userSpread = {}\n    if (user) {\n      userSpread = { user }\n    }\n\n    const hasBuyNowLabFeature =\n      user &&\n      user.lab_features &&\n      user.lab_features.includes(\"New Buy Now Flow\")\n    return (\n      <Responsive>\n        {({ hover, ...breakpoints }) => {\n          return (\n            <div className={className} style={style}>\n              <Placeholder style={{ paddingBottom: artwork.image.placeholder }}>\n                <a href={artwork.href}>\n                  <Image src={this.getImageUrl(breakpoints)} />\n                </a>\n                {hasBuyNowLabFeature && this.renderArtworkBadge(artwork)}\n                {/* The undefined check is a fallback for Force code that uses\n                    Reaction code without wrapping the tree in a Responsive\n                    provider component. */}\n                {(hover === undefined || hover) && (\n                  <SaveButtonBlock\n                    className=\"artwork-save\"\n                    artwork={artwork}\n                    style={{\n                      position: \"absolute\",\n                      right: \"10px\",\n                      bottom: \"10px\",\n                    }}\n                    useRelay={useRelay}\n                    {...userSpread}\n                    mediator={this.props.mediator}\n                  />\n                )}\n              </Placeholder>\n              <MetadataBlock artwork={artwork} useRelay={useRelay} />\n            </div>\n          )\n        }}\n      </Responsive>\n    )\n  }\n}\n\nexport const ArtworkGridItem = styled(ArtworkGridItemContainer)`\n  .artwork-save {\n    opacity: 0;\n  }\n\n  &:hover .artwork-save {\n    opacity: 1;\n  }\n`\n\nexport default createFragmentContainer(\n  ArtworkGridItem,\n  graphql`\n    fragment GridItem_artwork on Artwork {\n      image {\n        placeholder\n        url(version: \"large\")\n        aspect_ratio\n      }\n      is_biddable\n      is_acquireable\n      href\n      ...Metadata_artwork\n      ...Save_artwork\n    }\n  `\n)\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Utils/ColorPreview.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Utils/ColorPreview.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Display, Flex, themeProps } from \"@artsy/palette\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { color } from \"styled-system\"; // http://24ways.org/2010/calculating-color-contrast/\n\nfunction getContrast(hex) {\n  var r = parseInt(hex.substr(1, 2), 16);\n  var g = parseInt(hex.substr(3, 2), 16);\n  var b = parseInt(hex.substr(5, 2), 16);\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 128 ? \"black\" : \"white\";\n}\n\nvar visibleColor = function visibleColor(name) {\n  return getContrast(themeProps.colors[name]);\n};\n\nvar ColorBlock = styled.div.attrs({}).withConfig({\n  displayName: \"ColorPreview__ColorBlock\",\n  componentId: \"s1wx09u5-0\"\n})([\"width:100px;height:100px;padding:5px;\", \";\"], color);\n\nvar LabeledColorBlock = function LabeledColorBlock(_ref) {\n  var name = _ref.name;\n  return React.createElement(ColorBlock, {\n    bg: name\n  }, React.createElement(Flex, {\n    flexDirection: \"column\"\n  }, React.createElement(Display, {\n    color: visibleColor(name),\n    size: \"4t\"\n  }, name.toUpperCase()), React.createElement(Display, {\n    color: visibleColor(name),\n    size: \"4t\"\n  }, themeProps.colors[name])));\n};\n\nvar Grid = styled.div.withConfig({\n  displayName: \"ColorPreview__Grid\",\n  componentId: \"s1wx09u5-1\"\n})([\"display:grid;grid-template-columns:100px 100px 100px 100px;grid-gap:10px;\"]);\nexport var ColorPreview = function ColorPreview() {\n  return React.createElement(Grid, null, Object.keys(themeProps.colors).map(function (name, key) {\n    return React.createElement(LabeledColorBlock, {\n      name: name,\n      key: key\n    });\n  }));\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Styleguide/Utils/ColorPreview.tsx"],"names":["Display","Flex","themeProps","React","styled","color","getContrast","hex","r","parseInt","substr","g","b","yiq","visibleColor","name","colors","ColorBlock","div","attrs","LabeledColorBlock","toUpperCase","Grid","ColorPreview","Object","keys","map","key"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,IAAlB,EAAwBC,UAAxB,QAA0C,gBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAA0BC,KAA1B,QAAmD,eAAnD,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAMC,CAAC,GAAGC,QAAQ,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAlB;AACA,MAAMC,CAAC,GAAGF,QAAQ,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAlB;AACA,MAAME,CAAC,GAAGH,QAAQ,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAlB;AACA,MAAMG,GAAG,GAAG,CAACL,CAAC,GAAG,GAAJ,GAAUG,CAAC,GAAG,GAAd,GAAoBC,CAAC,GAAG,GAAzB,IAAgC,IAA5C;AACA,SAAOC,GAAG,IAAI,GAAP,GAAa,OAAb,GAAuB,OAA9B;AACD;;AACD,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,SAAIT,WAAW,CAACJ,UAAU,CAACc,MAAX,CAAkBD,IAAlB,CAAD,CAAf;AAAA,CAAzB;;AAIA,IAAME,UAAU,GAAGb,MAAM,CAACc,GAAP,CAAWC,KAAX,CAAkC,EAAlC,CAAH;AAAA;AAAA;AAAA,mDAIZd,KAJY,CAAhB;;AAOA,IAAMe,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGL,IAAH,QAAGA,IAAH;AAAA,SACxB,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEA;AAAhB,KACE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC;AAApB,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAED,YAAY,CAACC,IAAD,CAA5B;AAAoC,IAAA,IAAI,EAAC;AAAzC,KACGA,IAAI,CAACM,WAAL,EADH,CADF,EAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,YAAY,CAACC,IAAD,CAA5B;AAAoC,IAAA,IAAI,EAAC;AAAzC,KACGb,UAAU,CAACc,MAAX,CAAkBD,IAAlB,CADH,CAJF,CADF,CADwB;AAAA,CAA1B;;AAaA,IAAMO,IAAI,GAAGlB,MAAM,CAACc,GAAV;AAAA;AAAA;AAAA,iFAAV;AAMA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA,SAC1B,oBAAC,IAAD,QACGC,MAAM,CAACC,IAAP,CAAYvB,UAAU,CAACc,MAAvB,EAA+BU,GAA/B,CAAmC,UAACX,IAAD,EAAOY,GAAP;AAAA,WAClC,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEZ,IAAzB;AAA+B,MAAA,GAAG,EAAEY;AAApC,MADkC;AAAA,GAAnC,CADH,CAD0B;AAAA,CAArB","sourcesContent":["import { Display, Flex, themeProps } from \"@artsy/palette\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { BackgroundProps, color, ColorProps } from \"styled-system\"\n\n// http://24ways.org/2010/calculating-color-contrast/\nfunction getContrast(hex) {\n  const r = parseInt(hex.substr(1, 2), 16)\n  const g = parseInt(hex.substr(3, 2), 16)\n  const b = parseInt(hex.substr(5, 2), 16)\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000\n  return yiq >= 128 ? \"black\" : \"white\"\n}\nconst visibleColor = name => getContrast(themeProps.colors[name])\n\nexport interface ColorBlockProps extends ColorProps, BackgroundProps {}\n\nconst ColorBlock = styled.div.attrs<ColorBlockProps>({})`\n  width: 100px;\n  height: 100px;\n  padding: 5px;\n  ${color};\n`\n\nconst LabeledColorBlock = ({ name }) => (\n  <ColorBlock bg={name}>\n    <Flex flexDirection=\"column\">\n      <Display color={visibleColor(name)} size=\"4t\">\n        {name.toUpperCase()}\n      </Display>\n      <Display color={visibleColor(name)} size=\"4t\">\n        {themeProps.colors[name]}\n      </Display>\n    </Flex>\n  </ColorBlock>\n)\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 100px 100px 100px 100px;\n  grid-gap: 10px;\n`\n\nexport const ColorPreview = () => (\n  <Grid>\n    {Object.keys(themeProps.colors).map((name, key) => (\n      <LabeledColorBlock name={name} key={key} />\n    ))}\n  </Grid>\n)\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Tag/TagArtworks.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Tag/TagArtworks.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nimport Dropdown from \"../ArtworkFilter/Dropdown\";\nimport ForSaleCheckbox from \"../ArtworkFilter/ForSaleCheckbox\";\nimport Headline from \"../ArtworkFilter/Headline\";\nimport TotalCount from \"../ArtworkFilter/TotalCount\";\nimport BorderedPulldown from \"../BorderedPulldown\";\nimport TagArtworksContent from \"./TagArtworksContent\";\nvar FilterBar = styled.div.withConfig({\n  displayName: \"TagArtworks__FilterBar\",\n  componentId: \"s2b8s28-0\"\n})([\"vertical-align:middle;text-align:center;> div{display:inline-block;}\"]);\nvar SubFilterBar = styled.div.withConfig({\n  displayName: \"TagArtworks__SubFilterBar\",\n  componentId: \"s2b8s28-1\"\n})([\"display:flex;justify-content:space-between;padding:40px 0 20px;align-items:center;\"]);\nexport var TagArtworks =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TagArtworks, _React$Component);\n\n  function TagArtworks() {\n    _classCallCheck(this, TagArtworks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TagArtworks).apply(this, arguments));\n  }\n\n  _createClass(TagArtworks, [{\n    key: \"renderDropdown\",\n    value: function renderDropdown() {\n      var _this = this;\n\n      return this.props.tag.filtered_artworks.aggregations.map(function (aggregation) {\n        return React.createElement(Dropdown, {\n          aggregation: aggregation,\n          key: aggregation.slice,\n          selected: aggregation.slice && _this.props[aggregation.slice.toLowerCase()],\n          onSelected: _this.props.onDropdownSelected\n        });\n      });\n    }\n  }, {\n    key: \"renderForSaleToggle\",\n    value: function renderForSaleToggle() {\n      return React.createElement(ForSaleCheckbox, {\n        checked: this.props.for_sale,\n        onChange: this.props.onForSaleToggleSelected\n      });\n    }\n  }, {\n    key: \"renderArtworks\",\n    value: function renderArtworks() {\n      var _this2 = this;\n\n      var pulldownOptions = [{\n        val: \"-partner_updated_at\",\n        name: \"Recently Updated\"\n      }, {\n        val: \"-year\",\n        name: \"Artwork Year (desc.)\"\n      }, {\n        val: \"year\",\n        name: \"Artwork Year (asc.)\"\n      }];\n      var selectedSort = pulldownOptions.find(function (sort) {\n        return sort.val === _this2.props.sort;\n      });\n      return React.createElement(\"div\", null, React.createElement(SubFilterBar, null, React.createElement(\"div\", {\n        style: {\n          lineHeight: \"1.8em\"\n        }\n      }, React.createElement(Headline, {\n        medium: this.props.medium,\n        price_range: this.props.price_range,\n        dimension_range: this.props.dimension_range,\n        for_sale: this.props.for_sale,\n        facet: this.props.tag.filtered_artworks.facet,\n        aggregations: this.props.tag.filtered_artworks.aggregations\n      }), React.createElement(TotalCount, {\n        filter_artworks: this.props.tag.filtered_artworks\n      })), React.createElement(BorderedPulldown, {\n        defaultValue: \"Recently Updated\",\n        selectedName: selectedSort && selectedSort.name,\n        options: pulldownOptions,\n        onChange: this.props.onSortSelected\n      })), React.createElement(TagArtworksContent, {\n        tagID: this.props.tag.id,\n        filtered_artworks: this.props.tag.filtered_artworks\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(FilterBar, null, this.renderForSaleToggle(), this.renderDropdown()), this.renderArtworks());\n    }\n  }]);\n\n  return TagArtworks;\n}(React.Component);\nexport default createFragmentContainer(TagArtworks, {\n  tag: function tag() {\n    var node = require(\"../../__generated__/TagArtworks_tag.graphql\");\n\n    if (node.hash && node.hash !== \"e338dce3de7771de5f87d5d3605e6c19\") {\n      console.error(\"The definition of 'TagArtworks_tag' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/TagArtworks_tag.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Tag/TagArtworks.tsx"],"names":["React","createFragmentContainer","graphql","styled","Dropdown","ForSaleCheckbox","Headline","TotalCount","BorderedPulldown","TagArtworksContent","FilterBar","div","SubFilterBar","TagArtworks","props","tag","filtered_artworks","aggregations","map","aggregation","slice","toLowerCase","onDropdownSelected","for_sale","onForSaleToggleSelected","pulldownOptions","val","name","selectedSort","find","sort","lineHeight","medium","price_range","dimension_range","facet","onSortSelected","id","renderForSaleToggle","renderDropdown","renderArtworks","Component"],"mappings":"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","sourcesContent":["import { TagArtworks_tag } from \"__generated__/TagArtworks_tag.graphql\"\nimport * as React from \"react\"\nimport {\n  createFragmentContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\nimport Dropdown from \"../ArtworkFilter/Dropdown\"\nimport ForSaleCheckbox from \"../ArtworkFilter/ForSaleCheckbox\"\nimport Headline from \"../ArtworkFilter/Headline\"\nimport TotalCount from \"../ArtworkFilter/TotalCount\"\nimport BorderedPulldown from \"../BorderedPulldown\"\nimport TagArtworksContent from \"./TagArtworksContent\"\n\ninterface Filters {\n  for_sale?: boolean\n  dimension_range?: string\n  price_range?: string\n  medium?: string\n}\n\ninterface Props extends Filters {\n  relay: RelayPaginationProp\n  tag: TagArtworks_tag\n  onDropdownSelected: (slice: string, value: string) => void\n  onSortSelected: (sort: string) => void\n  onForSaleToggleSelected: () => void\n  sort?: string\n}\n\nconst FilterBar = styled.div`\n  vertical-align: middle;\n  text-align: center;\n\n  > div {\n    display: inline-block;\n  }\n`\n\nconst SubFilterBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 40px 0 20px;\n  align-items: center;\n`\n\nexport class TagArtworks extends React.Component<Props, null> {\n  renderDropdown() {\n    return this.props.tag.filtered_artworks.aggregations.map(aggregation => {\n      return (\n        <Dropdown\n          aggregation={aggregation}\n          key={aggregation.slice}\n          selected={\n            aggregation.slice && this.props[aggregation.slice.toLowerCase()]\n          }\n          onSelected={this.props.onDropdownSelected}\n        />\n      )\n    })\n  }\n\n  renderForSaleToggle() {\n    return (\n      <ForSaleCheckbox\n        checked={this.props.for_sale}\n        onChange={this.props.onForSaleToggleSelected}\n      />\n    )\n  }\n\n  renderArtworks() {\n    const pulldownOptions = [\n      { val: \"-partner_updated_at\", name: \"Recently Updated\" },\n      { val: \"-year\", name: \"Artwork Year (desc.)\" },\n      { val: \"year\", name: \"Artwork Year (asc.)\" },\n    ]\n    const selectedSort = pulldownOptions.find(\n      sort => sort.val === this.props.sort\n    )\n    return (\n      <div>\n        <SubFilterBar>\n          <div style={{ lineHeight: \"1.8em\" }}>\n            <Headline\n              medium={this.props.medium}\n              price_range={this.props.price_range}\n              dimension_range={this.props.dimension_range}\n              for_sale={this.props.for_sale}\n              facet={this.props.tag.filtered_artworks.facet}\n              aggregations={this.props.tag.filtered_artworks.aggregations}\n            />\n            <TotalCount filter_artworks={this.props.tag.filtered_artworks} />\n          </div>\n          <BorderedPulldown\n            defaultValue=\"Recently Updated\"\n            selectedName={selectedSort && selectedSort.name}\n            options={pulldownOptions}\n            onChange={this.props.onSortSelected}\n          />\n        </SubFilterBar>\n        <TagArtworksContent\n          tagID={this.props.tag.id}\n          filtered_artworks={this.props.tag.filtered_artworks}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <FilterBar>\n          {this.renderForSaleToggle()}\n          {this.renderDropdown()}\n        </FilterBar>\n        {this.renderArtworks()}\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(TagArtworks, {\n  tag: graphql`\n    fragment TagArtworks_tag on Tag\n      @argumentDefinitions(\n        for_sale: { type: \"Boolean\" }\n        medium: { type: \"String\", defaultValue: \"*\" }\n        aggregations: {\n          type: \"[ArtworkAggregation]\"\n          defaultValue: [MEDIUM, TOTAL, PRICE_RANGE, DIMENSION_RANGE]\n        }\n        price_range: { type: \"String\", defaultValue: \"*\" }\n        dimension_range: { type: \"String\", defaultValue: \"*\" }\n      ) {\n      id\n      filtered_artworks(\n        aggregations: $aggregations\n        for_sale: $for_sale\n        medium: $medium\n        price_range: $price_range\n        dimension_range: $dimension_range\n        size: 0\n      ) {\n        ...TotalCount_filter_artworks\n        ...TagArtworksContent_filtered_artworks\n        aggregations {\n          slice\n          counts {\n            name\n            id\n          }\n          ...Dropdown_aggregation\n        }\n        facet {\n          ...Headline_facet\n        }\n      }\n    }\n  `,\n})\n"]}]}
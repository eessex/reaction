{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Artsy/Analytics/Schema/Result.ts","dependencies":[{"path":"/Users/eve/development/reaction/src/Artsy/Analytics/Schema/Result.ts","mtime":1535727458000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["",{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { ActionName, OwnerType } from \"./Values\"\n\n/**\n * The base interface for either a successful or failure event.\n */\ninterface Result {\n  /**\n   * The action name that will be used to tie this back to an interaction.\n   */\n  action_name: ActionName\n\n  /**\n   * The type of the entity that owns this result.\n   */\n  owner_type: OwnerType\n\n  /**\n   * The database ID of the entity. E.g. in the case of an entity that comes out\n   * of Gravity this should be its Mongo ID.\n   */\n  owner_id: string\n\n  /**\n   * The slug of the entity, if it has one.\n   */\n  owner_slug?: string\n}\n\n/**\n * A successful result.\n */\nexport interface Success extends Result {\n  /**\n   * Used to identify the event as a success one.\n   */\n  result: \"Success\"\n}\n\n/**\n * A failure result.\n */\nexport interface Failure extends Result {\n  /**\n   * Used to identify the event as a failure one.\n   */\n  result: \"Failure\"\n\n  /**\n   * The reason for the failure.\n   */\n  error: string\n}\n"]}]}
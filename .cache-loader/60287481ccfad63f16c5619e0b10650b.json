{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Authentication/Desktop/LoginForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/LoginForm.tsx","mtime":1527877289000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginForm = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _formik = require(\"formik\");\n\nvar _commonElements = require(\"../commonElements\");\n\nvar _Validators = require(\"../Validators\");\n\nvar _Input = _interopRequireDefault(require(\"../../Input\"));\n\nvar _Text = _interopRequireDefault(require(\"../../Text\"));\n\nvar _Colors = _interopRequireDefault(require(\"../../../Assets/Colors\"));\n\nvar _Types = require(\"../Types\");\n\nvar _Checkbox = _interopRequireDefault(require(\"../../Checkbox\"));\n\nvar _Fonts = require(\"../../../Assets/Fonts\");\n\nvar _Inverted = _interopRequireDefault(require(\"../../Buttons/Inverted\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ForgotPasswordLink =\n/*#__PURE__*/\n(0, _styledComponents.default)(_commonElements.ChangeMode).withConfig({\n  displayName: \"LoginForm__ForgotPasswordLink\",\n  componentId: \"n8b9j6-0\"\n})([\"margin-left:auto;\"]);\n\nvar Row =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"LoginForm__Row\",\n  componentId: \"n8b9j6-1\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\n\nvar LoginText =\n/*#__PURE__*/\n(0, _styledComponents.default)(_Text.default).attrs({\n  color: _Colors.default.grayDark,\n  align: \"center\"\n}).withConfig({\n  displayName: \"LoginForm__LoginText\",\n  componentId: \"n8b9j6-2\"\n})([\"margin-top:0;\", \";\"], (0, _Fonts.garamond)(\"s14\"));\nvar LoginButton =\n/*#__PURE__*/\n(0, _styledComponents.default)(_Inverted.default).attrs({\n  type: \"submit\",\n  block: true\n}).withConfig({\n  displayName: \"LoginForm__LoginButton\",\n  componentId: \"n8b9j6-3\"\n})([\"margin:auto 0 10px 0;\"]);\n\nvar LoginForm = function LoginForm(props) {\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: props.values,\n    onSubmit: props.handleSubmit,\n    validationSchema: _Validators.LoginValidator\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting,\n        isValid = _ref.isValid,\n        status = _ref.status;\n    var hasErrors = Object.keys(errors).length > 0 || !!status;\n    return _react.default.createElement(_commonElements.FormContainer, {\n      onSubmit: handleSubmit\n    }, _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.email && errors.email,\n      placeholder: \"Enter your email address\",\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.password && errors.password,\n      placeholder: \"Enter your password\",\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), _react.default.createElement(Row, null, _react.default.createElement(_Checkbox.default, {\n      type: \"checkbox\",\n      name: \"remember-me\",\n      onChange: handleChange,\n      onBlur: handleBlur\n    }, _react.default.createElement(_Text.default, {\n      color: _Colors.default.grayDark\n    }, \"Remember me\")), _react.default.createElement(ForgotPasswordLink, {\n      onClick: function onClick() {\n        return props.handleTypeChange(_Types.ModalType.resetPassword);\n      }\n    }, \"Forgot Password?\")), _react.default.createElement(LoginButton, {\n      disabled: isSubmitting || hasErrors\n    }, \"Log In\"), _react.default.createElement(_commonElements.GrayFacebookButton, null, \"Sign In with Facebook\"), _react.default.createElement(LoginText, null, \"Don't have an account?\", \" \", _react.default.createElement(_commonElements.ChangeMode, {\n      onClick: function onClick() {\n        return props.handleTypeChange(_Types.ModalType.signup);\n      }\n    }, \"Sign Up\")));\n  });\n};\n\nexports.LoginForm = LoginForm;",{"version":3,"sources":["src/Components/Authentication/Desktop/LoginForm.tsx"],"names":["ForgotPasswordLink","Row","div","LoginText","attrs","color","grayDark","align","LoginButton","type","block","LoginForm","props","values","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","isValid","status","hasErrors","Object","keys","length","email","password","handleTypeChange","resetPassword","signup"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA;AAAA;AAAqB,0DAArB;AAAA;AAAA;AAAA,yBAAN;;AAIA,IAAMC;AAAA;AAAM,0BAAOC,GAAb;AAAA;AAAA;AAAA,2DAAN;;AAMA,IAAMC;AAAA;AAAY,8CAAaC,KAAb,CAAmB;AACnCC,SAAO,gBAAOC,QADqB;AAEnCC,SAAO;AAF4B,CAAnB,CAAZ;AAAA;AAAA;AAAA,2BAKF,qBAAS,KAAT,CALE,CAAN;AAQA,IAAMC;AAAA;AAAc,kDAAeJ,KAAf,CAAqB;AACvCK,QAAM,QADiC;AAEvCC,SAAO;AAFgC,CAArB,CAAd;AAAA;AAAA;AAAA,6BAAN;;AAOO,IAAMC,YAA+B,SAA/BA,SAA+B,QAAS;AACnD,SACE;AACE,mBAAeC,MAAMC,MADvB;AAEE,cAAUD,MAAME,YAFlB;AAGE;AAHF,KAKG,gBAU+B;AAAA,QAT9BD,MAS8B,QAT9BA,MAS8B;AAAA,QAR9BE,MAQ8B,QAR9BA,MAQ8B;AAAA,QAP9BC,OAO8B,QAP9BA,OAO8B;AAAA,QAN9BC,YAM8B,QAN9BA,YAM8B;AAAA,QAL9BC,UAK8B,QAL9BA,UAK8B;AAAA,QAJ9BJ,YAI8B,QAJ9BA,YAI8B;AAAA,QAH9BK,YAG8B,QAH9BA,YAG8B;AAAA,QAF9BC,OAE8B,QAF9BA,OAE8B;AAAA,QAD9BC,MAC8B,QAD9BA,MAC8B;AAC9B,QAAMC,YAAYC,OAAOC,IAAP,CAAYT,MAAZ,EAAoBU,MAApB,GAA6B,CAA7B,IAAkC,CAAC,CAACJ,MAAtD;AAEA,WACE;AAAM,gBAAUP;AAAhB,OACE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOE,QAAQU,KAAR,IAAiBX,OAAOW,KAHjC;AAIE,mBAAY,0BAJd;AAKE,YAAK,OALP;AAME,aAAM,OANR;AAOE,YAAK,OAPP;AAQE,aAAOb,OAAOa,KARhB;AASE,gBAAUT,YATZ;AAUE,cAAQC;AAVV,MADF,EAaE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOF,QAAQW,QAAR,IAAoBZ,OAAOY,QAHpC;AAIE,mBAAY,qBAJd;AAKE,YAAK,UALP;AAME,aAAM,UANR;AAOE,YAAK,UAPP;AAQE,aAAOd,OAAOc,QARhB;AASE,gBAAUV,YATZ;AAUE,cAAQC;AAVV,MAbF,EAyBE,6BAAC,GAAD,QACE;AACE,YAAK,UADP;AAEE,YAAK,aAFP;AAGE,gBAAUD,YAHZ;AAIE,cAAQC;AAJV,OAME;AAAM,aAAO,gBAAOZ;AAApB,qBANF,CADF,EASE,6BAAC,kBAAD;AACE,eAAS;AAAA,eAAMM,MAAMgB,gBAAN,CAAuB,iBAAUC,aAAjC,CAAN;AAAA;AADX,0BATF,CAzBF,EAwCE,6BAAC,WAAD;AAAa,gBAAUV,gBAAgBG;AAAvC,gBAxCF,EA2CE,+FA3CF,EA4CE,6BAAC,SAAD,kCACyB,GADzB,EAEE;AACE,eAAS;AAAA,eAAMV,MAAMgB,gBAAN,CAAuB,iBAAUE,MAAjC,CAAN;AAAA;AADX,iBAFF,CA5CF,CADF;AAuDD,GAzEH,CADF;AA6ED,CA9EM","file":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/LoginForm.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Formik, FormikProps } from \"formik\"\n\nimport {\n  ChangeMode,\n  FormContainer as Form,\n  GrayFacebookButton,\n} from \"../commonElements\"\n\nimport { LoginValidator } from \"Components/Authentication/Validators\"\nimport Input from \"Components/Input\"\nimport Text from \"Components/Text\"\nimport Colors from \"Assets/Colors\"\nimport { FormComponentType, InputValues, ModalType } from \"../Types\"\nimport Checkbox from \"Components/Checkbox\"\nimport { garamond } from \"Assets/Fonts\"\nimport Button from \"Components/Buttons/Inverted\"\n\nconst ForgotPasswordLink = styled(ChangeMode)`\n  margin-left: auto;\n`\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst LoginText = styled(Text).attrs({\n  color: Colors.grayDark,\n  align: \"center\",\n})`\n  margin-top: 0;\n  ${garamond(\"s14\")};\n`\n\nconst LoginButton = styled(Button).attrs({\n  type: \"submit\",\n  block: true,\n})`\n  margin: auto 0 10px 0;\n`\n\nexport const LoginForm: FormComponentType = props => {\n  return (\n    <Formik\n      initialValues={props.values}\n      onSubmit={props.handleSubmit}\n      validationSchema={LoginValidator}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        isValid,\n        status,\n      }: FormikProps<InputValues>) => {\n        const hasErrors = Object.keys(errors).length > 0 || !!status\n\n        return (\n          <Form onSubmit={handleSubmit}>\n            <Input\n              block\n              quick\n              error={touched.email && errors.email}\n              placeholder=\"Enter your email address\"\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <Input\n              block\n              quick\n              error={touched.password && errors.password}\n              placeholder=\"Enter your password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <Row>\n              <Checkbox\n                type=\"checkbox\"\n                name=\"remember-me\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n              >\n                <Text color={Colors.grayDark}>Remember me</Text>\n              </Checkbox>\n              <ForgotPasswordLink\n                onClick={() => props.handleTypeChange(ModalType.resetPassword)}\n              >\n                Forgot Password?\n              </ForgotPasswordLink>\n            </Row>\n            <LoginButton disabled={isSubmitting || hasErrors}>\n              Log In\n            </LoginButton>\n            <GrayFacebookButton>Sign In with Facebook</GrayFacebookButton>\n            <LoginText>\n              Don't have an account?{\" \"}\n              <ChangeMode\n                onClick={() => props.handleTypeChange(ModalType.signup)}\n              >\n                Sign Up\n              </ChangeMode>\n            </LoginText>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n"]}]}
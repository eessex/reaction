{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Spinner.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Spinner.tsx","mtime":1509397574000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Spinner = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Spinner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Spinner, _React$Component);\n\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    return _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));\n  }\n\n  _createClass(Spinner, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        className: this.props.className\n      });\n    }\n  }]);\n\n  return Spinner;\n}(_react.default.Component);\n\nexports.Spinner = Spinner;\nvar spin =\n/*#__PURE__*/\n(0, _styledComponents.keyframes)([\"100%{transform:rotate(360deg)}\"]);\nvar StyledSpinner =\n/*#__PURE__*/\n(0, _styledComponents.default)(Spinner).withConfig({\n  displayName: \"Spinner__StyledSpinner\",\n  componentId: \"s1a7qnq6-0\"\n})([\"background:black;animation:\", \" 1s infinite linear;width:\", \"px;height:\", \"px;position:absolute;top:calc(50% - \", \"px / 2);left:calc(50% - \", \"px / 2);\"], spin, function (props) {\n  return props.width;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.width;\n});\nStyledSpinner.defaultProps = {\n  width: 25,\n  height: 6\n};\nvar _default = StyledSpinner;\nexports.default = _default;",{"version":3,"sources":["src/Components/Spinner.tsx"],"names":["Spinner","props","className","Component","spin","StyledSpinner","width","height","defaultProps"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;IAOaA,O;;;;;;;;;;;;;6BACF;AACP,aAAO;AAAK,mBAAW,KAAKC,KAAL,CAAWC;AAA3B,QAAP;AACD;;;;EAH0B,eAAMC,S;;;AAMnC,IAAMC;AAAA;AAAA,oEAAN;AAMA,IAAMC;AAAA;AAAgB,+BAAOL,OAAP,CAAhB;AAAA;AAAA;AAAA,gKAESI,IAFT,EAGK;AAAA,SAASH,MAAMK,KAAf;AAAA,CAHL,EAIM;AAAA,SAASL,MAAMM,MAAf;AAAA,CAJN,EAMc;AAAA,SAASN,MAAMM,MAAf;AAAA,CANd,EAOe;AAAA,SAASN,MAAMK,KAAf;AAAA,CAPf,CAAN;AAUAD,cAAcG,YAAd,GAA6B;AAC3BF,SAAO,EADoB;AAE3BC,UAAQ;AAFmB,CAA7B;eAKeF,a","file":"/Users/eve/development/reaction/src/Components/Spinner.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\n\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends React.HTMLProps<Spinner> {\n  width?: number\n  height?: number\n}\n\nexport class Spinner extends React.Component<Props, null> {\n  render() {\n    return <div className={this.props.className} />\n  }\n}\n\nconst spin = keyframes`\n  100% {\n    transform: rotate(360deg)\n  }\n`\n\nconst StyledSpinner = styled(Spinner)`\n  background: black;\n  animation: ${spin} 1s infinite linear;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  position: absolute;\n  top: calc(50% - ${props => props.height}px / 2);\n  left: calc(50% - ${props => props.width}px / 2);\n`\n\nStyledSpinner.defaultProps = {\n  width: 25,\n  height: 6,\n}\n\nexport default StyledSpinner\n"]}]}
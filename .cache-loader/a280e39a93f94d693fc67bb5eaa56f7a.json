{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/ArtworkGrid.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/ArtworkGrid.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; // @ts-ignore\n\nimport { createFragmentContainer, graphql } from \"react-relay\"; // @ts-ignore\n\nimport styled from \"styled-components\";\nimport RelayGridItem, { ArtworkGridItem } from \"./Artwork/GridItem\";\nexport var ArtworkGridContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArtworkGridContainer, _React$Component);\n\n  function ArtworkGridContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArtworkGridContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArtworkGridContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      interval: null,\n      loading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(ArtworkGridContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.onLoadMore) {\n        var _interval = setInterval(function () {\n          _this2.maybeLoadMore();\n        }, 150);\n\n        this.setState({\n          interval: _interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.interval) {\n        clearInterval(this.state.interval);\n      }\n    }\n  }, {\n    key: \"maybeLoadMore\",\n    value: function maybeLoadMore() {\n      var threshold = window.innerHeight + window.scrollY;\n      var el = ReactDOM.findDOMNode(this);\n\n      if (threshold >= el.clientHeight + el.scrollTop) {\n        this.props.onLoadMore();\n      }\n    }\n  }, {\n    key: \"sectionedArtworks\",\n    value: function sectionedArtworks() {\n      var sectionedArtworks = [];\n      var sectionRatioSums = [];\n      var artworks = this.props.artworks ? this.props.artworks.edges : [];\n\n      for (var i = 0; i < this.props.columnCount; i++) {\n        sectionedArtworks.push([]);\n        sectionRatioSums.push(0);\n      }\n\n      artworks.forEach(function (artworkEdge) {\n        var artwork = artworkEdge.node; // There are artworks without images and other ‘issues’. Like Force we’re just going to reject those for now.\n        // See: https://github.com/artsy/eigen/issues/1667\n\n        if (artwork.image) {\n          // Find section with lowest *inverted* aspect ratio sum, which is the shortest column.\n          var lowestRatioSum = Number.MAX_VALUE;\n          var sectionIndex = null;\n\n          for (var j = 0; j < sectionRatioSums.length; j++) {\n            var ratioSum = sectionRatioSums[j];\n\n            if (ratioSum < lowestRatioSum) {\n              sectionIndex = j;\n              lowestRatioSum = ratioSum;\n            }\n          }\n\n          if (sectionIndex != null) {\n            var section = sectionedArtworks[sectionIndex];\n            section.push(artwork); // Keep track of total section aspect ratio\n\n            var aspectRatio = artwork.image.aspect_ratio || 1; // Ensure we never divide by null/0\n            // Invert the aspect ratio so that a lower value means a shorter section.\n\n            sectionRatioSums[sectionIndex] += 1 / aspectRatio;\n          }\n        }\n      });\n      return sectionedArtworks;\n    }\n  }, {\n    key: \"renderSections\",\n    value: function renderSections() {\n      var spacerStyle = {\n        height: this.props.itemMargin\n      };\n      var sectionedArtworks = this.sectionedArtworks();\n      var sections = [];\n\n      for (var i = 0; i < this.props.columnCount; i++) {\n        var artworkComponents = [];\n\n        for (var j = 0; j < sectionedArtworks[i].length; j++) {\n          var artwork = sectionedArtworks[i][j];\n          var GridItem = this.props.useRelay ? RelayGridItem : ArtworkGridItem;\n          artworkComponents.push(React.createElement(GridItem, {\n            artwork: artwork,\n            key: \"artwork-\" + j + \"-\" + artwork.__id,\n            useRelay: this.props.useRelay,\n            user: this.props.user,\n            mediator: this.props.mediator\n          })); // Setting a marginBottom on the artwork component didn’t work, so using a spacer view instead.\n\n          if (j < sectionedArtworks[i].length - 1) {\n            artworkComponents.push(React.createElement(\"div\", {\n              style: spacerStyle,\n              key: \"spacer-\" + j + \"-\" + artwork.__id\n            }));\n          }\n        }\n\n        var sectionSpecificStyle = {\n          flex: 1,\n          minWidth: 0,\n          marginRight: i === this.props.columnCount - 1 ? 0 : this.props.sectionMargin\n        };\n        sections.push(React.createElement(\"div\", {\n          style: sectionSpecificStyle,\n          key: i\n        }, artworkComponents));\n      }\n\n      return sections;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var artworks = this.renderSections() || [];\n      return React.createElement(\"div\", {\n        className: this.props.className\n      }, artworks);\n    }\n  }]);\n\n  return ArtworkGridContainer;\n}(React.Component);\n\n_defineProperty(ArtworkGridContainer, \"defaultProps\", {\n  columnCount: 3,\n  sectionMargin: 20,\n  itemMargin: 20,\n  useRelay: true\n});\n\nexport var ArtworkGrid = styled(ArtworkGridContainer).withConfig({\n  displayName: \"ArtworkGrid\",\n  componentId: \"c9epeo-0\"\n})([\"display:flex;flex-direction:row;flex-wrap:wrap;\"]);\nexport default createFragmentContainer(ArtworkGrid, {\n  artworks: function artworks() {\n    var node = require(\"../__generated__/ArtworkGrid_artworks.graphql\");\n\n    if (node.hash && node.hash !== \"54946907e0dd09ddb3b063c64b517438\") {\n      console.error(\"The definition of 'ArtworkGrid_artworks' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../__generated__/ArtworkGrid_artworks.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/ArtworkGrid.tsx"],"names":["React","ReactDOM","createFragmentContainer","graphql","styled","RelayGridItem","ArtworkGridItem","ArtworkGridContainer","interval","loading","props","onLoadMore","setInterval","maybeLoadMore","setState","state","clearInterval","threshold","window","innerHeight","scrollY","el","findDOMNode","clientHeight","scrollTop","sectionedArtworks","sectionRatioSums","artworks","edges","i","columnCount","push","forEach","artworkEdge","artwork","node","image","lowestRatioSum","Number","MAX_VALUE","sectionIndex","j","length","ratioSum","section","aspectRatio","aspect_ratio","spacerStyle","height","itemMargin","sections","artworkComponents","GridItem","useRelay","__id","user","mediator","sectionSpecificStyle","flex","minWidth","marginRight","sectionMargin","renderSections","className","Component","ArtworkGrid"],"mappings":"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","sourcesContent":["import { ArtworkGrid_artworks } from \"__generated__/ArtworkGrid_artworks.graphql\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n// @ts-ignore\nimport { ComponentRef, createFragmentContainer, graphql } from \"react-relay\"\n// @ts-ignore\nimport styled, { StyledComponentClass } from \"styled-components\"\nimport RelayGridItem, { ArtworkGridItem } from \"./Artwork/GridItem\"\n\ntype SectionedArtworks = Array<Array<ArtworkGrid_artworks[\"edges\"][0][\"node\"]>>\n\nexport interface ArtworkGridContainerProps\n  extends React.HTMLProps<ArtworkGridContainer> {\n  artworks: ArtworkGrid_artworks\n  columnCount?: number\n  sectionMargin?: number\n  itemMargin?: number\n  onLoadMore?: () => any\n  useRelay?: boolean\n  user?: User\n  mediator?: {\n    trigger: (action: string, config: object) => void\n  }\n}\n\nexport interface ArtworkGridContainerState {\n  loading: boolean\n  interval: any\n}\n\nexport class ArtworkGridContainer extends React.Component<\n  ArtworkGridContainerProps,\n  ArtworkGridContainerState\n> {\n  static defaultProps = {\n    columnCount: 3,\n    sectionMargin: 20,\n    itemMargin: 20,\n    useRelay: true,\n  }\n\n  state = {\n    interval: null,\n    loading: false,\n  }\n\n  componentDidMount() {\n    if (this.props.onLoadMore) {\n      const interval = setInterval(() => {\n        this.maybeLoadMore()\n      }, 150)\n      this.setState({ interval })\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.interval) {\n      clearInterval(this.state.interval)\n    }\n  }\n\n  maybeLoadMore() {\n    const threshold = window.innerHeight + window.scrollY\n    const el = ReactDOM.findDOMNode(this) as Element\n    if (threshold >= el.clientHeight + el.scrollTop) {\n      this.props.onLoadMore()\n    }\n  }\n\n  sectionedArtworks(): SectionedArtworks {\n    const sectionedArtworks: SectionedArtworks = []\n    const sectionRatioSums = []\n    const artworks = this.props.artworks ? this.props.artworks.edges : []\n\n    for (let i = 0; i < this.props.columnCount; i++) {\n      sectionedArtworks.push([])\n      sectionRatioSums.push(0)\n    }\n\n    artworks.forEach(artworkEdge => {\n      const artwork = artworkEdge.node\n\n      // There are artworks without images and other ‘issues’. Like Force we’re just going to reject those for now.\n      // See: https://github.com/artsy/eigen/issues/1667\n      if (artwork.image) {\n        // Find section with lowest *inverted* aspect ratio sum, which is the shortest column.\n        let lowestRatioSum = Number.MAX_VALUE\n        let sectionIndex = null\n        for (let j = 0; j < sectionRatioSums.length; j++) {\n          const ratioSum = sectionRatioSums[j]\n          if (ratioSum < lowestRatioSum) {\n            sectionIndex = j\n            lowestRatioSum = ratioSum\n          }\n        }\n\n        if (sectionIndex != null) {\n          const section = sectionedArtworks[sectionIndex]\n          section.push(artwork)\n\n          // Keep track of total section aspect ratio\n          const aspectRatio = artwork.image.aspect_ratio || 1 // Ensure we never divide by null/0\n          // Invert the aspect ratio so that a lower value means a shorter section.\n          sectionRatioSums[sectionIndex] += 1 / aspectRatio\n        }\n      }\n    })\n\n    return sectionedArtworks\n  }\n\n  renderSections() {\n    const spacerStyle = {\n      height: this.props.itemMargin,\n    }\n    const sectionedArtworks = this.sectionedArtworks()\n    const sections = []\n\n    for (let i = 0; i < this.props.columnCount; i++) {\n      const artworkComponents = []\n      for (let j = 0; j < sectionedArtworks[i].length; j++) {\n        const artwork = sectionedArtworks[i][j]\n        const GridItem: typeof RelayGridItem = (this.props.useRelay\n          ? RelayGridItem\n          : ArtworkGridItem) as any\n        artworkComponents.push(\n          <GridItem\n            artwork={artwork}\n            key={\"artwork-\" + j + \"-\" + artwork.__id}\n            useRelay={this.props.useRelay}\n            user={this.props.user}\n            mediator={this.props.mediator}\n          />\n        )\n        // Setting a marginBottom on the artwork component didn’t work, so using a spacer view instead.\n        if (j < sectionedArtworks[i].length - 1) {\n          artworkComponents.push(\n            <div style={spacerStyle} key={\"spacer-\" + j + \"-\" + artwork.__id} />\n          )\n        }\n      }\n\n      const sectionSpecificStyle = {\n        flex: 1,\n        minWidth: 0,\n        marginRight:\n          i === this.props.columnCount - 1 ? 0 : this.props.sectionMargin,\n      }\n\n      sections.push(\n        <div style={sectionSpecificStyle} key={i}>\n          {artworkComponents}\n        </div>\n      )\n    }\n    return sections\n  }\n\n  render() {\n    const artworks = this.renderSections() || []\n    return <div className={this.props.className}>{artworks}</div>\n  }\n}\n\nexport const ArtworkGrid = styled(ArtworkGridContainer)`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\n\nexport default createFragmentContainer(\n  ArtworkGrid,\n  graphql`\n    fragment ArtworkGrid_artworks on ArtworkConnection {\n      edges {\n        node {\n          __id\n          image {\n            aspect_ratio\n          }\n          ...GridItem_artwork\n        }\n      }\n    }\n  `\n)\n"]}]}
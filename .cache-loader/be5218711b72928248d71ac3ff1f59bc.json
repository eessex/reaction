{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Utils/BreakpointVisualizer.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Utils/BreakpointVisualizer.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _isEqual from \"lodash/isEqual\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Box, Display } from \"@artsy/palette\";\nimport React from \"react\";\nimport Transition from \"react-transition-group/Transition\";\nimport styled from \"styled-components\";\nimport { Responsive } from \"../../Utils/Responsive\";\nvar StyledBox = styled(Box).withConfig({\n  displayName: \"BreakpointVisualizer__StyledBox\",\n  componentId: \"dasofy-0\"\n})([\"position:fixed;background-color:black;color:white;border-bottom-right-radius:5px;transition:opacity 0.3s ease-in-out;opacity:0;\"]);\n\nvar BreakpointText = function BreakpointText(_ref) {\n  var xs = _ref.xs,\n      sm = _ref.sm,\n      md = _ref.md,\n      lg = _ref.lg;\n  return React.createElement(Display, {\n    size: \"8\"\n  }, xs ? \"xs\" : sm ? \"sm\" : md ? \"md\" : lg ? \"lg\" : \"xl\");\n};\n\nexport var BreakpointVisualizer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BreakpointVisualizer, _React$Component);\n\n  function BreakpointVisualizer(props) {\n    var _this;\n\n    _classCallCheck(this, BreakpointVisualizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BreakpointVisualizer).call(this, props));\n    _this.state = {\n      breakpoints: {},\n      changed: false\n    };\n    return _this;\n  }\n\n  _createClass(BreakpointVisualizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!_isEqual(prevState.breakpoints, this.state.breakpoints)) {\n        this.setState({\n          changed: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, typeof window !== \"undefined\" && window.navigator && !window.navigator.userAgent.match(/Chromatic/) && React.createElement(Responsive, null, function (breakpoints) {\n        if (!_isEqual(breakpoints, _this2.state.breakpoints)) {\n          setImmediate(function () {\n            _this2.setState({\n              breakpoints: breakpoints\n            });\n          });\n        }\n\n        return React.createElement(Transition, {\n          in: _this2.state.changed,\n          onEntered: function onEntered() {\n            return _this2.setState({\n              changed: false\n            });\n          },\n          mountOnEnter: true,\n          unmountOnExit: true,\n          timeout: 2500\n        }, function (state) {\n          return React.createElement(StyledBox, {\n            top: 0,\n            left: 0,\n            py: 1,\n            px: 2,\n            style: {\n              opacity: state === \"exiting\" ? 0 : 1\n            }\n          }, React.createElement(BreakpointText, breakpoints));\n        });\n      }));\n    }\n  }]);\n\n  return BreakpointVisualizer;\n}(React.Component);",{"version":3,"sources":["/Users/eve/development/reaction/src/Styleguide/Utils/BreakpointVisualizer.tsx"],"names":["Box","Display","React","Transition","styled","Responsive","StyledBox","BreakpointText","xs","sm","md","lg","BreakpointVisualizer","props","state","breakpoints","changed","prevProps","prevState","setState","window","navigator","userAgent","match","setImmediate","opacity","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,OAAd,QAA6B,gBAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACJ,GAAD,CAAT;AAAA;AAAA;AAAA,uIAAf;;AASA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,OAAwB;AAAA,MAArBC,EAAqB,QAArBA,EAAqB;AAAA,MAAjBC,EAAiB,QAAjBA,EAAiB;AAAA,MAAbC,EAAa,QAAbA,EAAa;AAAA,MAATC,EAAS,QAATA,EAAS;AAC7C,SACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC;AAAd,KACGH,EAAE,GAAG,IAAH,GAAUC,EAAE,GAAG,IAAH,GAAUC,EAAE,GAAG,IAAH,GAAUC,EAAE,GAAG,IAAH,GAAU,IADnD,CADF;AAKD,CAND;;AAaA,WAAaC,oBAAb;AAAA;AAAA;AAAA;;AAIE,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAFiB;AAMlB;;AAVH;AAAA;AAAA,uCAYqBC,SAZrB,EAYgCC,SAZhC,EAY2C;AACvC,UAAI,CAAC,SAAQA,SAAS,CAACH,WAAlB,EAA+B,KAAKD,KAAL,CAAWC,WAA1C,CAAL,EAA6D;AAC3D,aAAKI,QAAL,CAAc;AACZH,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF;AAlBH;AAAA;AAAA,6BAoBW;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,QAAP,QACG,OAAOI,MAAP,KAAkB,WAAlB,IACCA,MAAM,CAACC,SADR,IAEC,CAACD,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2BC,KAA3B,CAAiC,WAAjC,CAFF,IAGG,oBAAC,UAAD,QACG,UAAAR,WAAW,EAAI;AACd,YAAI,CAAC,SAAQA,WAAR,EAAqB,MAAI,CAACD,KAAL,CAAWC,WAAhC,CAAL,EAAmD;AACjDS,UAAAA,YAAY,CAAC,YAAM;AACjB,YAAA,MAAI,CAACL,QAAL,CAAc;AAAEJ,cAAAA,WAAW,EAAXA;AAAF,aAAd;AACD,WAFW,CAAZ;AAGD;;AACD,eACE,oBAAC,UAAD;AACE,UAAA,EAAE,EAAE,MAAI,CAACD,KAAL,CAAWE,OADjB;AAEE,UAAA,SAAS,EAAE;AAAA,mBAAM,MAAI,CAACG,QAAL,CAAc;AAAEH,cAAAA,OAAO,EAAE;AAAX,aAAd,CAAN;AAAA,WAFb;AAGE,UAAA,YAAY,MAHd;AAIE,UAAA,aAAa,MAJf;AAKE,UAAA,OAAO,EAAE;AALX,WAOG,UAAAF,KAAK,EAAI;AACR,iBACE,oBAAC,SAAD;AACE,YAAA,GAAG,EAAE,CADP;AAEE,YAAA,IAAI,EAAE,CAFR;AAGE,YAAA,EAAE,EAAE,CAHN;AAIE,YAAA,EAAE,EAAE,CAJN;AAKE,YAAA,KAAK,EAAE;AAAEW,cAAAA,OAAO,EAAEX,KAAK,KAAK,SAAV,GAAsB,CAAtB,GAA0B;AAArC;AALT,aAOE,oBAAC,cAAD,EAAoBC,WAApB,CAPF,CADF;AAWD,SAnBH,CADF;AAuBD,OA9BH,CAJN,CADF;AAwCD;AA7DH;;AAAA;AAAA,EAA0Cb,KAAK,CAACwB,SAAhD","sourcesContent":["import { Box, Display } from \"@artsy/palette\"\nimport { isEqual } from \"lodash\"\nimport React from \"react\"\nimport Transition from \"react-transition-group/Transition\"\nimport styled from \"styled-components\"\nimport { Responsive } from \"Utils/Responsive\"\n\nconst StyledBox = styled(Box)`\n  position: fixed;\n  background-color: black;\n  color: white;\n  border-bottom-right-radius: 5px;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0;\n`\n\nconst BreakpointText = ({ xs, sm, md, lg }) => {\n  return (\n    <Display size=\"8\">\n      {xs ? \"xs\" : sm ? \"sm\" : md ? \"md\" : lg ? \"lg\" : \"xl\"}\n    </Display>\n  )\n}\n\ninterface BreakpointVisualizerState {\n  breakpoints: any\n  changed: boolean\n}\n\nexport class BreakpointVisualizer extends React.Component<\n  {},\n  BreakpointVisualizerState\n> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      breakpoints: {},\n      changed: false,\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!isEqual(prevState.breakpoints, this.state.breakpoints)) {\n      this.setState({\n        changed: true,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {typeof window !== \"undefined\" &&\n          window.navigator &&\n          !window.navigator.userAgent.match(/Chromatic/) && (\n            <Responsive>\n              {breakpoints => {\n                if (!isEqual(breakpoints, this.state.breakpoints)) {\n                  setImmediate(() => {\n                    this.setState({ breakpoints })\n                  })\n                }\n                return (\n                  <Transition\n                    in={this.state.changed}\n                    onEntered={() => this.setState({ changed: false })}\n                    mountOnEnter\n                    unmountOnExit\n                    timeout={2500}\n                  >\n                    {state => {\n                      return (\n                        <StyledBox\n                          top={0}\n                          left={0}\n                          py={1}\n                          px={2}\n                          style={{ opacity: state === \"exiting\" ? 0 : 1 }}\n                        >\n                          <BreakpointText {...breakpoints} />\n                        </StyledBox>\n                      )\n                    }}\n                  </Transition>\n                )\n              }}\n            </Responsive>\n          )}\n      </React.Fragment>\n    )\n  }\n}\n"]}]}
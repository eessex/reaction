{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/BorderedPulldown.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/BorderedPulldown.tsx","mtime":1528820562000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Icon from \"./Icon\"; // @ts-ignore\n\nimport styled from \"styled-components\";\nimport colors from \"../Assets/Colors\";\nimport { garamond } from \"../Assets/Fonts\";\nexport var BorderedPulldown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BorderedPulldown, _React$Component);\n\n  function BorderedPulldown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BorderedPulldown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BorderedPulldown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      selected: null,\n      isHovered: false\n    });\n\n    return _this;\n  }\n\n  _createClass(BorderedPulldown, [{\n    key: \"toggleHover\",\n    value: function toggleHover(value) {\n      this.setState({\n        isHovered: value\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(option) {\n      this.setState({\n        selected: option,\n        isHovered: false\n      });\n      this.props.onChange(option);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          defaultValue = _this$props.defaultValue,\n          selectedName = _this$props.selectedName;\n      var optionEls = options.map(function (option) {\n        return React.createElement(\"a\", {\n          key: option.val,\n          onClick: function onClick() {\n            return _this2.onChange(option);\n          }\n        }, option.name);\n      });\n      var displayValue = this.state.selected && this.state.selected.name || selectedName || defaultValue;\n      var pulldownStyles = {};\n\n      if (this.state.isHovered) {\n        pulldownStyles = {\n          display: \"block\"\n        };\n      }\n\n      return React.createElement(\"div\", {\n        className: this.props.className,\n        onMouseEnter: function onMouseEnter() {\n          return _this2.toggleHover(true);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.toggleHover(false);\n        }\n      }, React.createElement(Toggle, null, React.createElement(\"span\", null, displayValue), React.createElement(CaretHolder, null, React.createElement(Icon, {\n        name: \"arrow-down\",\n        fontSize: \"9px\",\n        color: colors.grayMedium\n      }))), React.createElement(PulldownOptions, {\n        style: pulldownStyles\n      }, optionEls));\n    }\n  }]);\n\n  return BorderedPulldown;\n}(React.Component);\nvar StyledBorderedPulldown = styled(BorderedPulldown).withConfig({\n  displayName: \"BorderedPulldown__StyledBorderedPulldown\",\n  componentId: \"s16yk0rp-0\"\n})([\"\", \";display:inline-block;width:200px;position:relative;border:2px solid \", \";text-align:left;&.is-disabled{.bordered-pulldown-toggle{cursor:default;color:\", \";}}\"], garamond(\"s17\"), colors.grayMedium, colors.grayBold);\nvar Toggle = styled.div.withConfig({\n  displayName: \"BorderedPulldown__Toggle\",\n  componentId: \"s16yk0rp-1\"\n})([\"display:block;padding:8px 10px 6px;text-decoration:none;\"]);\nvar CaretHolder = styled.div.withConfig({\n  displayName: \"BorderedPulldown__CaretHolder\",\n  componentId: \"s16yk0rp-2\"\n})([\"float:right;padding-left:5px;border-left:1px solid \", \";\"], colors.grayMedium);\nvar PulldownOptions = styled.div.withConfig({\n  displayName: \"BorderedPulldown__PulldownOptions\",\n  componentId: \"s16yk0rp-3\"\n})([\"display:none;position:absolute;background:white;border:2px solid \", \";top:-2px;left:-2px;right:-2px;z-index:2;> a{text-decoration:none;overflow:ellipsis;display:block;padding:8px 10px 6px;text-decoration:none;cursor:pointer;&:hover{background-color:\", \";}}\"], colors.grayMedium, colors.gray);\nexport default StyledBorderedPulldown;",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/BorderedPulldown.tsx"],"names":["React","Icon","styled","colors","garamond","BorderedPulldown","selected","isHovered","value","setState","option","props","onChange","options","defaultValue","selectedName","optionEls","map","val","name","displayValue","state","pulldownStyles","display","className","toggleHover","grayMedium","Component","StyledBorderedPulldown","grayBold","Toggle","div","CaretHolder","PulldownOptions","gray"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport Icon from \"./Icon\"\n\n// @ts-ignore\nimport styled, { StyledComponentClass } from \"styled-components\"\nimport colors from \"../Assets/Colors\"\nimport { garamond } from \"../Assets/Fonts\"\n\nexport interface BorderedPullDownProps\n  extends React.HTMLProps<BorderedPulldown> {\n  options: any\n  defaultValue: string\n  onChange?: any\n  selectedName?: string\n}\n\nexport interface BorderedPulldownState {\n  selected: any\n  isHovered: boolean\n}\n\nexport class BorderedPulldown extends React.Component<\n  BorderedPullDownProps,\n  BorderedPulldownState\n> {\n  state = {\n    selected: null,\n    isHovered: false,\n  }\n\n  toggleHover(value) {\n    this.setState({\n      isHovered: value,\n    })\n  }\n\n  onChange(option) {\n    this.setState({\n      selected: option,\n      isHovered: false,\n    })\n    this.props.onChange(option)\n  }\n\n  render() {\n    const { options, defaultValue, selectedName } = this.props\n\n    const optionEls = options.map(option => {\n      return (\n        <a key={option.val} onClick={() => this.onChange(option)}>\n          {option.name}\n        </a>\n      )\n    })\n\n    const displayValue =\n      (this.state.selected && this.state.selected.name) ||\n      selectedName ||\n      defaultValue\n    let pulldownStyles = {}\n\n    if (this.state.isHovered) {\n      pulldownStyles = {\n        display: \"block\",\n      }\n    }\n\n    return (\n      <div\n        className={this.props.className}\n        onMouseEnter={() => this.toggleHover(true)}\n        onMouseLeave={() => this.toggleHover(false)}\n      >\n        <Toggle>\n          <span>{displayValue}</span>\n          <CaretHolder>\n            <Icon name=\"arrow-down\" fontSize=\"9px\" color={colors.grayMedium} />\n          </CaretHolder>\n        </Toggle>\n        <PulldownOptions style={pulldownStyles}>{optionEls}</PulldownOptions>\n      </div>\n    )\n  }\n}\n\nconst StyledBorderedPulldown = styled(BorderedPulldown)`\n  ${garamond(\"s17\")};\n  display: inline-block;\n  width: 200px;\n  position: relative;\n  border: 2px solid ${colors.grayMedium};\n  text-align: left;\n  &.is-disabled {\n    .bordered-pulldown-toggle {\n      cursor: default;\n      color: ${colors.grayBold};\n    }\n  }\n`\n\nconst Toggle = styled.div`\n  display: block;\n  padding: 8px 10px 6px;\n  text-decoration: none;\n`\n\nconst CaretHolder = styled.div`\n  float: right;\n  padding-left: 5px;\n  border-left: 1px solid ${colors.grayMedium};\n`\n\nconst PulldownOptions = styled.div`\n  display: none;\n  position: absolute;\n  background: white;\n  border: 2px solid ${colors.grayMedium};\n  top: -2px;\n  left: -2px;\n  right: -2px;\n  z-index: 2;\n  > a {\n    text-decoration: none;\n    overflow: ellipsis;\n    display: block;\n    padding: 8px 10px 6px;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      background-color: ${colors.gray};\n    }\n  }\n`\n\nexport default StyledBorderedPulldown\n"]}]}
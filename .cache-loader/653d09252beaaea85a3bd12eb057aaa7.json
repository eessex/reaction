{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Artwork/FillwidthItem.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Artwork/FillwidthItem.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { data as sd } from \"sharify\";\nimport RelayMetadata, { Metadata } from \"./Metadata\";\nimport RelaySaveButton, { SaveButton } from \"./Save\"; // @ts-ignore\n\nimport { createFragmentContainer, graphql } from \"react-relay\"; // @ts-ignore\n\nimport styled from \"styled-components\";\nvar IMAGE_QUALITY = 80;\nvar Image = styled.img.withConfig({\n  displayName: \"FillwidthItem__Image\",\n  componentId: \"s1jj8qkz-0\"\n})([\"width:100%;\"]);\nvar ImageLink = styled.a.withConfig({\n  displayName: \"FillwidthItem__ImageLink\",\n  componentId: \"s1jj8qkz-1\"\n})([\"width:100%;position:absolute;top:0;left:0;\"]);\nvar Placeholder = styled.div.withConfig({\n  displayName: \"FillwidthItem__Placeholder\",\n  componentId: \"s1jj8qkz-2\"\n})([\"position:relative;width:100%;\"]);\nexport var FillwidthItemContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FillwidthItemContainer, _React$Component);\n\n  function FillwidthItemContainer() {\n    _classCallCheck(this, FillwidthItemContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FillwidthItemContainer).apply(this, arguments));\n  }\n\n  _createClass(FillwidthItemContainer, [{\n    key: \"getImageUrl\",\n    value: function getImageUrl() {\n      var imageURL = this.props.artwork.image.url;\n\n      if (!imageURL) {\n        return null;\n      }\n\n      var aspect_ratio = this.props.artwork.image.aspect_ratio; // Either scale or crop, based on if an aspect ratio is available.\n\n      var type = aspect_ratio ? \"fit\" : \"fill\";\n      var height = this.props.imageHeight * window.devicePixelRatio;\n      var width = Math.floor(height * aspect_ratio * window.devicePixelRatio); // tslint:disable-next-line:max-line-length\n\n      return \"\".concat(sd.GEMINI_CLOUDFRONT_URL, \"/?resize_to=\").concat(type, \"&width=\").concat(width, \"&height=\").concat(height, \"&quality=\").concat(IMAGE_QUALITY, \"&src=\").concat(encodeURIComponent(imageURL));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          artwork = _this$props.artwork,\n          className = _this$props.className,\n          targetHeight = _this$props.targetHeight,\n          imageHeight = _this$props.imageHeight,\n          useRelay = _this$props.useRelay,\n          user = _this$props.user,\n          mediator = _this$props.mediator;\n      var userSpread = {};\n\n      if (user) {\n        userSpread = {\n          user: user\n        };\n      }\n\n      var SaveButtonBlock = useRelay ? RelaySaveButton : SaveButton;\n      var MetadataBlock = useRelay ? RelayMetadata : Metadata;\n      return React.createElement(\"div\", {\n        className: className\n      }, React.createElement(Placeholder, {\n        style: {\n          height: targetHeight\n        }\n      }, React.createElement(ImageLink, {\n        href: artwork.href\n      }, React.createElement(Image, {\n        src: this.getImageUrl(),\n        height: imageHeight\n      })), React.createElement(SaveButtonBlock, _extends({}, userSpread, {\n        mediator: mediator,\n        className: \"artwork-save\",\n        artwork: artwork,\n        style: {\n          position: \"absolute\",\n          right: \"5px\",\n          bottom: \"5px\"\n        },\n        useRelay: useRelay\n      }))), React.createElement(MetadataBlock, {\n        artwork: artwork,\n        useRelay: useRelay,\n        extended: true\n      }));\n    }\n  }]);\n\n  return FillwidthItemContainer;\n}(React.Component);\n\n_defineProperty(FillwidthItemContainer, \"defaultProps\", {\n  useRelay: true\n});\n\nexport var FillwidthItem = styled(FillwidthItemContainer).attrs({}).withConfig({\n  displayName: \"FillwidthItem\",\n  componentId: \"s1jj8qkz-3\"\n})([\"display:inline-block;width:\", \"px;vertical-align:top;margin-right:\", \"px;.artwork-save{opacity:0;}&:hover .artwork-save{opacity:1;}\"], function (props) {\n  return props.width;\n}, function (props) {\n  return props.margin;\n});\nexport default createFragmentContainer(FillwidthItem, {\n  artwork: function artwork() {\n    var node = require(\"../../__generated__/FillwidthItem_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"e7d7e05dbcfbc935f92f7d36e8d0fd3e\") {\n      console.error(\"The definition of 'FillwidthItem_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/FillwidthItem_artwork.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Artwork/FillwidthItem.tsx"],"names":["React","data","sd","RelayMetadata","Metadata","RelaySaveButton","SaveButton","createFragmentContainer","graphql","styled","IMAGE_QUALITY","Image","img","ImageLink","a","Placeholder","div","FillwidthItemContainer","imageURL","props","artwork","image","url","aspect_ratio","type","height","imageHeight","window","devicePixelRatio","width","Math","floor","GEMINI_CLOUDFRONT_URL","encodeURIComponent","className","targetHeight","useRelay","user","mediator","userSpread","SaveButtonBlock","MetadataBlock","href","getImageUrl","position","right","bottom","Component","FillwidthItem","attrs","margin"],"mappings":"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","sourcesContent":["import { FillwidthItem_artwork } from \"__generated__/FillwidthItem_artwork.graphql\"\nimport { ContextProps } from \"Artsy\"\nimport React from \"react\"\nimport { data as sd } from \"sharify\"\nimport RelayMetadata, { Metadata } from \"./Metadata\"\nimport RelaySaveButton, { SaveButton } from \"./Save\"\n\n// @ts-ignore\nimport { ComponentRef, createFragmentContainer, graphql } from \"react-relay\"\n// @ts-ignore\nimport styled, { StyledComponentClass } from \"styled-components\"\n\nconst IMAGE_QUALITY = 80\n\nconst Image = styled.img`\n  width: 100%;\n`\n\nconst ImageLink = styled.a`\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`\n\nconst Placeholder = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nexport interface FillwidthItemContainerProps\n  extends ContextProps,\n    React.HTMLProps<FillwidthItemContainer> {\n  targetHeight?: number\n  imageHeight?: number\n  width?: number\n  margin?: number\n  useRelay?: boolean\n  artwork: FillwidthItem_artwork\n\n  mediator?: {\n    trigger: (action: string, config: object) => void\n  }\n}\n\nexport class FillwidthItemContainer extends React.Component<\n  FillwidthItemContainerProps\n> {\n  static defaultProps = {\n    useRelay: true,\n  }\n\n  getImageUrl() {\n    const imageURL = this.props.artwork.image.url\n\n    if (!imageURL) {\n      return null\n    }\n\n    const {\n      artwork: {\n        image: { aspect_ratio },\n      },\n    } = this.props\n\n    // Either scale or crop, based on if an aspect ratio is available.\n    const type = aspect_ratio ? \"fit\" : \"fill\"\n    const height = this.props.imageHeight * window.devicePixelRatio\n    const width = Math.floor(height * aspect_ratio * window.devicePixelRatio)\n\n    // tslint:disable-next-line:max-line-length\n    return `${\n      sd.GEMINI_CLOUDFRONT_URL\n    }/?resize_to=${type}&width=${width}&height=${height}&quality=${IMAGE_QUALITY}&src=${encodeURIComponent(\n      imageURL\n    )}`\n  }\n\n  render() {\n    const {\n      artwork,\n      className,\n      targetHeight,\n      imageHeight,\n      useRelay,\n      user,\n      mediator,\n    } = this.props\n\n    let userSpread = {}\n    if (user) {\n      userSpread = { user }\n    }\n    const SaveButtonBlock = useRelay ? RelaySaveButton : SaveButton\n    const MetadataBlock = useRelay ? RelayMetadata : Metadata\n\n    return (\n      <div className={className}>\n        <Placeholder style={{ height: targetHeight }}>\n          <ImageLink href={artwork.href}>\n            <Image src={this.getImageUrl()} height={imageHeight} />\n          </ImageLink>\n          <SaveButtonBlock\n            {...userSpread}\n            mediator={mediator}\n            className=\"artwork-save\"\n            artwork={artwork}\n            style={{ position: \"absolute\", right: \"5px\", bottom: \"5px\" }}\n            useRelay={useRelay}\n          />\n        </Placeholder>\n        <MetadataBlock artwork={artwork} useRelay={useRelay} extended />\n      </div>\n    )\n  }\n}\n\nexport const FillwidthItem = styled(FillwidthItemContainer).attrs<\n  FillwidthItemContainerProps\n>({})`\n  display: inline-block;\n  width: ${props => props.width}px;\n  vertical-align: top;\n  margin-right: ${props => props.margin}px;\n\n  .artwork-save {\n    opacity: 0;\n  }\n\n  &:hover .artwork-save {\n    opacity: 1;\n  }\n`\n\nexport default createFragmentContainer(\n  FillwidthItem,\n  graphql`\n    fragment FillwidthItem_artwork on Artwork {\n      image {\n        placeholder\n        url(version: \"large\")\n        aspect_ratio\n      }\n      href\n      ...Metadata_artwork\n      ...Save_artwork\n    }\n  `\n)\n"]}]}
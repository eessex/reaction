{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Wizard/Wizard.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Wizard/Wizard.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _isEmpty from \"lodash/isEmpty\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\n\n/**\n * Generate a multi-step wizard wrapped in a form.\n * steps can be an Array of children of the shape\n *\n * The wizard can be used in two different ways,\n * using the render prop API or passing steps in\n * as children.\n *\n * @example\n *\n * ```javascript\n * <Wizard steps={[<Step />, <Step />]}>\n *  {({ wizard, form }) => {\n *   <div>\n *     Current step: {wizard.currentStepIndex}\n *     <div>{wizard.currentStep}</div>\n *     <NextButton onClick={wizard.next} />\n *   </div>\n *  }}\n * </Wizard>\n * ```\n *\n * or\n *\n * ```javascript\n * <Wizard>\n *   <Step />\n *   <Step />\n * </Wizard>\n * ```\n */\nexport var Wizard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wizard, _React$Component);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wizard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"next\", function (e, values) {\n      e && e.preventDefault();\n\n      _this.setState(function (state) {\n        return {\n          currentStepIndex: Math.min(state.currentStepIndex + 1, _this.steps.length - 1),\n          values: values\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"previous\", function (e, values) {\n      e && e.preventDefault();\n\n      _this.setState(function (state) {\n        return {\n          currentStepIndex: Math.max(state.currentStepIndex - 1, 0)\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSubmit\", function (values, actions) {\n      var onComplete = _this.props.onComplete;\n\n      if (_this.isLastStep) {\n        onComplete && onComplete(values, actions);\n      } else {\n        actions && actions.setSubmitting(false); // If exist, call onSubmit on the current step\n\n        var onSubmit = _this.currentStep.props.onSubmit;\n\n        if (onSubmit) {\n          actions.setSubmitting(true);\n          var result = onSubmit(values, actions);\n\n          if (result instanceof Boolean) {\n            actions.setSubmitting(false);\n            return result;\n          } else {\n            return result.then(function (shouldGoNext) {\n              if (shouldGoNext) {\n                actions.setSubmitting(false);\n\n                _this.next(null, values);\n              }\n            });\n          }\n        } else {\n          _this.next(null, values);\n        }\n      }\n    });\n\n    _this.state = {\n      currentStepIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          initialValues = _this$props.initialValues,\n          children = _this$props.children;\n      var _this$currentStep$pro = this.currentStep.props,\n          validate = _this$currentStep$pro.validate,\n          validationSchema = _this$currentStep$pro.validationSchema;\n      return React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate,\n        validationSchema: validationSchema,\n        validateOnChange: false,\n        onSubmit: this.handleSubmit,\n        render: function render(formikRenderProps) {\n          var context = {\n            wizard: _this2.wizardProps,\n            form: formikRenderProps\n          };\n          context.wizard.shouldAllowNext = _isEmpty(formikRenderProps.errors) && !_isEmpty(formikRenderProps.touched);\n          return React.createElement(\"form\", {\n            onSubmit: formikRenderProps.handleSubmit\n          }, React.createElement(WizardContextProvider, context, !!_this2.props.steps ? React.createElement(children, context) : _this2.currentStep));\n        }\n      });\n    }\n  }, {\n    key: \"steps\",\n    get: function get() {\n      if (!!this.props.steps) {\n        return this.props.steps;\n      } else {\n        return React.Children.toArray(this.props.children);\n      }\n    }\n  }, {\n    key: \"currentStep\",\n    get: function get() {\n      return this.steps[this.state.currentStepIndex];\n    }\n  }, {\n    key: \"isLastStep\",\n    get: function get() {\n      return this.state.currentStepIndex === this.steps.length - 1;\n    }\n  }, {\n    key: \"wizardProps\",\n    get: function get() {\n      return {\n        currentStep: this.currentStep,\n        isLastStep: this.isLastStep,\n        previous: this.previous,\n        next: this.handleSubmit,\n        currentStepIndex: this.state.currentStepIndex,\n        steps: this.steps,\n        shouldAllowNext: false,\n        progressPercentage: (this.state.currentStepIndex + 1) / this.steps.length\n      };\n    }\n  }]);\n\n  return Wizard;\n}(React.Component);\n\n_defineProperty(Wizard, \"defaultProps\", {\n  initialValues: null\n});\n\nvar WizardContextProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WizardContextProvider, _Component);\n\n  function WizardContextProvider() {\n    _classCallCheck(this, WizardContextProvider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WizardContextProvider).apply(this, arguments));\n  }\n\n  _createClass(WizardContextProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        wizard: this.props.wizard,\n        form: this.props.form\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return WizardContextProvider;\n}(Component);\n\n_defineProperty(WizardContextProvider, \"childContextTypes\", {\n  wizard: PropTypes.object,\n  form: PropTypes.object\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Wizard/Wizard.tsx"],"names":["Formik","PropTypes","React","Component","Wizard","props","e","values","preventDefault","setState","state","currentStepIndex","Math","min","steps","length","max","actions","onComplete","isLastStep","setSubmitting","onSubmit","currentStep","result","Boolean","then","shouldGoNext","next","initialValues","children","validate","validationSchema","handleSubmit","formikRenderProps","context","wizard","wizardProps","form","shouldAllowNext","errors","touched","createElement","Children","toArray","previous","progressPercentage","WizardContextProvider","object"],"mappings":"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","sourcesContent":["import { Formik, FormikActions } from \"formik\"\nimport { isEmpty } from \"lodash\"\nimport PropTypes from \"prop-types\"\nimport React, { Component } from \"react\"\nimport { StepElement, StepProps, WizardRenderProps } from \"./types\"\nimport { FormValues, WizardContext } from \"./types\"\n\ninterface WizardProps {\n  onComplete?: (\n    values?: FormValues,\n    actions?: FormikActions<FormValues>\n  ) => void\n  initialValues?: any\n  steps?: StepElement[]\n  children?:\n    | ((\n        props: { wizard: WizardRenderProps; form: any }\n      ) => React.ReactElement<any>)\n    | StepElement\n    | StepElement[]\n}\n\ninterface WizardState {\n  currentStepIndex: number\n}\n\n/**\n * Generate a multi-step wizard wrapped in a form.\n * steps can be an Array of children of the shape\n *\n * The wizard can be used in two different ways,\n * using the render prop API or passing steps in\n * as children.\n *\n * @example\n *\n * ```javascript\n * <Wizard steps={[<Step />, <Step />]}>\n *  {({ wizard, form }) => {\n *   <div>\n *     Current step: {wizard.currentStepIndex}\n *     <div>{wizard.currentStep}</div>\n *     <NextButton onClick={wizard.next} />\n *   </div>\n *  }}\n * </Wizard>\n * ```\n *\n * or\n *\n * ```javascript\n * <Wizard>\n *   <Step />\n *   <Step />\n * </Wizard>\n * ```\n */\nexport class Wizard extends React.Component<WizardProps, WizardState> {\n  static defaultProps = {\n    initialValues: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentStepIndex: 0,\n    }\n  }\n\n  get steps(): StepElement[] {\n    if (!!this.props.steps) {\n      return this.props.steps\n    } else {\n      return React.Children.toArray(this.props.children) as Array<\n        React.ReactElement<StepProps>\n      >\n    }\n  }\n\n  get currentStep() {\n    return this.steps[this.state.currentStepIndex] as StepElement\n  }\n\n  get isLastStep() {\n    return this.state.currentStepIndex === this.steps.length - 1\n  }\n\n  get wizardProps(): WizardRenderProps {\n    return {\n      currentStep: this.currentStep,\n      isLastStep: this.isLastStep,\n      previous: this.previous,\n      next: this.handleSubmit,\n      currentStepIndex: this.state.currentStepIndex,\n      steps: this.steps,\n      shouldAllowNext: false,\n      progressPercentage: (this.state.currentStepIndex + 1) / this.steps.length,\n    }\n  }\n\n  next = (e: React.FormEvent<any> | null, values) => {\n    e && e.preventDefault()\n    this.setState(state => ({\n      currentStepIndex: Math.min(\n        state.currentStepIndex + 1,\n        this.steps.length - 1\n      ),\n      values,\n    }))\n  }\n\n  previous = (e: React.FormEvent<any> | null, values) => {\n    e && e.preventDefault()\n    this.setState(state => ({\n      currentStepIndex: Math.max(state.currentStepIndex - 1, 0),\n    }))\n  }\n\n  handleSubmit: (\n    values: FormValues,\n    actions?: FormikActions<FormValues>\n  ) => void = (values, actions) => {\n    const { onComplete } = this.props\n    if (this.isLastStep) {\n      onComplete && onComplete(values, actions)\n    } else {\n      actions && actions.setSubmitting(false)\n      // If exist, call onSubmit on the current step\n      const onSubmit = this.currentStep.props.onSubmit\n      if (onSubmit) {\n        actions.setSubmitting(true)\n        const result = onSubmit(values, actions)\n\n        if (result instanceof Boolean) {\n          actions.setSubmitting(false)\n          return result\n        } else {\n          return (result as Promise<boolean>).then(shouldGoNext => {\n            if (shouldGoNext) {\n              actions.setSubmitting(false)\n              this.next(null, values)\n            }\n          })\n        }\n      } else {\n        this.next(null, values)\n      }\n    }\n  }\n\n  render() {\n    const { initialValues, children } = this.props\n    const { validate, validationSchema } = this.currentStep.props\n\n    return (\n      <Formik\n        initialValues={initialValues}\n        validate={validate}\n        validationSchema={validationSchema}\n        validateOnChange={false}\n        onSubmit={this.handleSubmit}\n        render={formikRenderProps => {\n          const context: WizardContext = {\n            wizard: this.wizardProps,\n            form: formikRenderProps,\n          }\n\n          context.wizard.shouldAllowNext =\n            isEmpty(formikRenderProps.errors) &&\n            !isEmpty(formikRenderProps.touched)\n\n          return (\n            <form onSubmit={formikRenderProps.handleSubmit}>\n              <WizardContextProvider {...context}>\n                {!!this.props.steps\n                  ? React.createElement(children as any, context)\n                  : this.currentStep}\n              </WizardContextProvider>\n            </form>\n          )\n        }}\n      />\n    )\n  }\n}\n\nclass WizardContextProvider extends Component<WizardContext> {\n  static childContextTypes = {\n    wizard: PropTypes.object,\n    form: PropTypes.object,\n  }\n\n  getChildContext(): WizardContext {\n    return {\n      wizard: this.props.wizard,\n      form: this.props.form,\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n"]}]}
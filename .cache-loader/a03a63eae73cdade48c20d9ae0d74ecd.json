{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Onboarding/SelectableToggle.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Onboarding/SelectableToggle.tsx","mtime":1524678459000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 50px;\\n    padding: 0 5px;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Colors from \"../../Assets/Colors\";\nimport { avantgarde } from \"../../Assets/Fonts\";\nimport { CircleBlackCheckIcon } from \"../../Assets/Icons/CircleBlackCheckIcon\";\nimport { media } from \"../Helpers\";\nvar Link = styled.a.withConfig({\n  displayName: \"SelectableToggle__Link\",\n  componentId: \"s1fmh22a-0\"\n})([\"display:flex;color:black;text-decoration:none;\", \";&:hover{background-color:\", \";cursor:pointer;}border-top:1px solid \", \";height:70px;padding:0 15px 0 20px;\", \";\"], avantgarde(\"s13\"), Colors.gray, Colors.grayRegular, media.sm(_templateObject()));\nvar FullWidthCol = styled.div.withConfig({\n  displayName: \"SelectableToggle__FullWidthCol\",\n  componentId: \"s1fmh22a-1\"\n})([\"flex:1;display:flex;align-items:center;\"]);\nvar Col = styled.div.withConfig({\n  displayName: \"SelectableToggle__Col\",\n  componentId: \"s1fmh22a-2\"\n})([\"display:flex;align-items:center;\"]);\nvar EmptyCircle = styled.div.withConfig({\n  displayName: \"SelectableToggle__EmptyCircle\",\n  componentId: \"s1fmh22a-3\"\n})([\"width:26px;height:26px;border:1px solid \", \";border-radius:50%;background-color:transparent;\"], Colors.grayRegular);\n\nvar SelectableToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectableToggle, _React$Component);\n\n  function SelectableToggle(props) {\n    var _this;\n\n    _classCallCheck(this, SelectableToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectableToggle).call(this, props));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SelectableToggle, [{\n    key: \"onSelect\",\n    value: function onSelect() {\n      if (this.props.onSelect) {\n        this.props.onSelect(this.props.selected);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", null, React.createElement(Link, {\n        href: this.props.href,\n        onClick: function onClick() {\n          return _this2.onSelect();\n        }\n      }, React.createElement(FullWidthCol, null, this.props.text), React.createElement(Col, null, this.props.selected ? React.createElement(CircleBlackCheckIcon, {\n        width: \"26\",\n        height: \"26\"\n      }) : React.createElement(EmptyCircle, null))));\n    }\n  }]);\n\n  return SelectableToggle;\n}(React.Component);\n\nexport default SelectableToggle;",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Onboarding/SelectableToggle.tsx"],"names":["React","styled","Colors","avantgarde","CircleBlackCheckIcon","media","Link","a","gray","grayRegular","sm","FullWidthCol","div","Col","EmptyCircle","SelectableToggle","props","onSelect","bind","selected","href","text","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,SAASC,oBAAT;AACA,SAASC,KAAT;AASA,IAAMC,IAAI,GAAGL,MAAM,CAACM,CAAV;AAAA;AAAA;AAAA,2KAINJ,UAAU,CAAC,KAAD,CAJJ,EAMcD,MAAM,CAACM,IANrB,EASgBN,MAAM,CAACO,WATvB,EAYNJ,KAAK,CAACK,EAZA,oBAAV;AAkBA,IAAMC,YAAY,GAAGV,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,+CAAlB;AAMA,IAAMC,GAAG,GAAGZ,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,wCAAT;AAKA,IAAME,WAAW,GAAGb,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,qGAGKV,MAAM,CAACO,WAHZ,CAAjB;;IAQMM,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAFiB;AAGlB;;;;+BAEU;AACT,UAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAKD,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWG,QAA/B;AACD;AACF;;;6BAEQ;AAAA;;AACP,aACE,iCACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAAvB;AAA6B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,QAAL,EAAN;AAAA;AAAtC,SACE,oBAAC,YAAD,QAAe,KAAKD,KAAL,CAAWK,IAA1B,CADF,EAGE,oBAAC,GAAD,QACG,KAAKL,KAAL,CAAWG,QAAX,GACC,oBAAC,oBAAD;AAAsB,QAAA,KAAK,EAAC,IAA5B;AAAiC,QAAA,MAAM,EAAC;AAAxC,QADD,GAGC,oBAAC,WAAD,OAJJ,CAHF,CADF,CADF;AAeD;;;;EA5B4BnB,KAAK,CAACsB,S;;AA+BrC,eAAeP,gBAAf","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Colors from \"Assets/Colors\"\nimport { avantgarde } from \"Assets/Fonts\"\nimport { CircleBlackCheckIcon } from \"../../Assets/Icons/CircleBlackCheckIcon\"\nimport { media } from \"../Helpers\"\n\ninterface SelectableToggleProps {\n  href?: string\n  text?: string\n  onSelect: (selected: boolean) => void\n  selected: boolean\n}\n\nconst Link = styled.a`\n  display: flex;\n  color: black;\n  text-decoration: none;\n  ${avantgarde(\"s13\")};\n  &:hover {\n    background-color: ${Colors.gray};\n    cursor: pointer;\n  }\n  border-top: 1px solid ${Colors.grayRegular};\n  height: 70px;\n  padding: 0 15px 0 20px;\n  ${media.sm`\n    height: 50px;\n    padding: 0 5px;\n  `};\n`\n\nconst FullWidthCol = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n`\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst EmptyCircle = styled.div`\n  width: 26px;\n  height: 26px;\n  border: 1px solid ${Colors.grayRegular};\n  border-radius: 50%;\n  background-color: transparent;\n`\n\nclass SelectableToggle extends React.Component<SelectableToggleProps, null> {\n  constructor(props) {\n    super(props)\n    this.onSelect = this.onSelect.bind(this)\n  }\n\n  onSelect() {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.selected)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Link href={this.props.href} onClick={() => this.onSelect()}>\n          <FullWidthCol>{this.props.text}</FullWidthCol>\n\n          <Col>\n            {this.props.selected ? (\n              <CircleBlackCheckIcon width=\"26\" height=\"26\" />\n            ) : (\n              <EmptyCircle />\n            )}\n          </Col>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default SelectableToggle\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Analytics/Schema/index.ts","dependencies":[{"path":"/Users/eve/development/reaction/src/Analytics/Schema/index.ts","mtime":1533572139000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1532461619000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ContextPage = require(\"./ContextPage\");\n\nObject.keys(_ContextPage).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ContextPage[key];\n    }\n  });\n});\n\nvar _ContextModule = require(\"./ContextModule\");\n\nObject.keys(_ContextModule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ContextModule[key];\n    }\n  });\n});\n\nvar _Interaction = require(\"./Interaction\");\n\nObject.keys(_Interaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Interaction[key];\n    }\n  });\n});\n\nvar _Result = require(\"./Result\");\n\nObject.keys(_Result).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Result[key];\n    }\n  });\n});\n\nvar _Values = require(\"./Values\");\n\nObject.keys(_Values).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Values[key];\n    }\n  });\n});",{"version":3,"sources":["src/Analytics/Schema/index.ts"],"names":[],"mappings":";;;;;;AASA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["/**\n * TODO:\n * - See if we can get rid of all the namespacing and transform before sending.\n *   E.g. inside the `ContextPage` interface have just a `page` field that\n *   transforms to `context_page`.\n * - If the above gets done, we could also dry up the ‘owner’ in both\n *   `ContextPage` and `Result`.\n */\n\nexport * from \"./ContextPage\"\nexport * from \"./ContextModule\"\nexport * from \"./Interaction\"\nexport * from \"./Result\"\nexport * from \"./Values\"\n\nimport { ContextModule } from \"./ContextModule\"\nimport { ContextPage } from \"./ContextPage\"\nimport { Interaction } from \"./Interaction\"\nimport { Failure, Success } from \"./Result\"\n\nexport type Trackables =\n  | ContextModule\n  | ContextPage\n  | Interaction\n  | Success\n  | Failure\n\n/**\n * A sentinel type used to signal that anything goes in order to be able to\n * support old Force schema.\n *\n * @example\n *\n *     ```ts\n *     import * as Schema from \"Analytics/Schema\"\n *\n *     @track({ … } as Schema.Old)\n */\nexport type Old = any\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Publishing/Video/Player/VideoControls.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Video/Player/VideoControls.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { garamond } from \"../../../../Assets/Fonts\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { IconVideoFullscreen } from \"../../Icon/IconVideoFullscreen\";\nimport { MuteUnmute, MuteUnmuteContainer } from \"./MuteUnmute\";\nimport { PlayPause } from \"./PlayPause\";\nimport { Scrubber } from \"./Scrubber\";\nimport { Timestamp } from \"./Timestamp\";\nexport var VideoControls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VideoControls, _Component);\n\n  function VideoControls() {\n    _classCallCheck(this, VideoControls);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VideoControls).apply(this, arguments));\n  }\n\n  _createClass(VideoControls, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isMuted = _this$props.isMuted,\n          isPlaying = _this$props.isPlaying,\n          title = _this$props.title,\n          duration = _this$props.duration,\n          currentTime = _this$props.currentTime,\n          toggleFullscreen = _this$props.toggleFullscreen,\n          toggleMute = _this$props.toggleMute,\n          togglePlay = _this$props.togglePlay,\n          pause = _this$props.pause,\n          play = _this$props.play,\n          seekTo = _this$props.seekTo;\n      return React.createElement(VideoControlsContainer, null, React.createElement(TopControls, null, React.createElement(Block, null, React.createElement(PlayPause, {\n        togglePlay: togglePlay,\n        isPlaying: isPlaying\n      }), React.createElement(Title, null, title)), React.createElement(Block, null, React.createElement(Timestamp, {\n        currentTime: currentTime,\n        duration: duration\n      }), React.createElement(MuteUnmute, {\n        toggleMute: toggleMute,\n        isMuted: isMuted\n      }), React.createElement(IconVideoFullscreen, {\n        onClick: toggleFullscreen,\n        color: \"white\"\n      }))), React.createElement(Scrubber, {\n        duration: duration,\n        currentTime: currentTime,\n        pause: pause,\n        play: play,\n        seekTo: seekTo,\n        isPlaying: isPlaying\n      }));\n    }\n  }]);\n\n  return VideoControls;\n}(Component);\nvar TopControls = styled.div.withConfig({\n  displayName: \"VideoControls__TopControls\",\n  componentId: \"s1lk7qcs-0\"\n})([\"display:flex;justify-content:space-between;width:100%;\"]);\nexport var VideoControlsContainer = styled.div.withConfig({\n  displayName: \"VideoControls__VideoControlsContainer\",\n  componentId: \"s1lk7qcs-1\"\n})([\"color:white;display:flex;flex-direction:column;align-items:center;box-sizing:border-box;border:1px solid white;border-radius:2px;padding:20px;margin:20px;opacity:0;transition:opacity 0.25s ease;\", \"{margin-right:30px;}\", \"{margin-right:20px;}\", \"{cursor:pointer;}\"], Timestamp, MuteUnmuteContainer, IconVideoFullscreen);\nvar Title = styled.div.withConfig({\n  displayName: \"VideoControls__Title\",\n  componentId: \"s1lk7qcs-2\"\n})([\"\", \";margin-left:20px;\"], garamond(\"s23\"));\nvar Block = styled.div.withConfig({\n  displayName: \"VideoControls__Block\",\n  componentId: \"s1lk7qcs-3\"\n})([\"display:flex;\"]);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Publishing/Video/Player/VideoControls.tsx"],"names":["garamond","React","Component","styled","IconVideoFullscreen","MuteUnmute","MuteUnmuteContainer","PlayPause","Scrubber","Timestamp","VideoControls","props","isMuted","isPlaying","title","duration","currentTime","toggleFullscreen","toggleMute","togglePlay","pause","play","seekTo","TopControls","div","VideoControlsContainer","Title","Block"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT;AACA,SAASC,UAAT,EAAqBC,mBAArB;AACA,SAASC,SAAT;AACA,SAASC,QAAT;AACA,SAASC,SAAT;AAgBA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBAaH,KAAKC,KAbF;AAAA,UAELC,OAFK,eAELA,OAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAAA,UAOLC,gBAPK,eAOLA,gBAPK;AAAA,UAQLC,UARK,eAQLA,UARK;AAAA,UASLC,UATK,eASLA,UATK;AAAA,UAULC,KAVK,eAULA,KAVK;AAAA,UAWLC,IAXK,eAWLA,IAXK;AAAA,UAYLC,MAZK,eAYLA,MAZK;AAeP,aACE,oBAAC,sBAAD,QACE,oBAAC,WAAD,QACE,oBAAC,KAAD,QACE,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAEH,UAAvB;AAAmC,QAAA,SAAS,EAAEN;AAA9C,QADF,EAEE,oBAAC,KAAD,QAAQC,KAAR,CAFF,CADF,EAKE,oBAAC,KAAD,QACE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAEE,WAAxB;AAAqC,QAAA,QAAQ,EAAED;AAA/C,QADF,EAEE,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAEG,UAAxB;AAAoC,QAAA,OAAO,EAAEN;AAA7C,QAFF,EAGE,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAEK,gBAA9B;AAAgD,QAAA,KAAK,EAAC;AAAtD,QAHF,CALF,CADF,EAYE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEF,QADZ;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,KAAK,EAAEI,KAHT;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,MAAM,EAAEC,MALV;AAME,QAAA,SAAS,EAAET;AANb,QAZF,CADF;AAuBD;AAvCH;;AAAA;AAAA,EAAmCX,SAAnC;AA0CA,IAAMqB,WAAW,GAAGpB,MAAM,CAACqB,GAAV;AAAA;AAAA;AAAA,8DAAjB;AAKA,OAAO,IAAMC,sBAAsB,GAAGtB,MAAM,CAACqB,GAAV;AAAA;AAAA;AAAA,gRAY/Bf,SAZ+B,EAe/BH,mBAf+B,EAkB/BF,mBAlB+B,CAA5B;AAsBP,IAAMsB,KAAK,GAAGvB,MAAM,CAACqB,GAAV;AAAA;AAAA;AAAA,+BACPxB,QAAQ,CAAC,KAAD,CADD,CAAX;AAIA,IAAM2B,KAAK,GAAGxB,MAAM,CAACqB,GAAV;AAAA;AAAA;AAAA,qBAAX","sourcesContent":["import { garamond } from \"Assets/Fonts\"\nimport React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport { IconVideoFullscreen } from \"../../Icon/IconVideoFullscreen\"\nimport { MuteUnmute, MuteUnmuteContainer } from \"./MuteUnmute\"\nimport { PlayPause } from \"./PlayPause\"\nimport { Scrubber } from \"./Scrubber\"\nimport { Timestamp } from \"./Timestamp\"\n\ninterface Props extends React.HTMLProps<HTMLDivElement> {\n  isMuted: boolean\n  isPlaying: boolean\n  title: string\n  duration: number\n  currentTime: number\n  toggleFullscreen: () => void\n  toggleMute: () => void\n  togglePlay: () => void\n  pause: () => void\n  play: () => void\n  seekTo: (v) => void\n}\n\nexport class VideoControls extends Component<Props, null> {\n  render() {\n    const {\n      isMuted,\n      isPlaying,\n      title,\n      duration,\n      currentTime,\n      toggleFullscreen,\n      toggleMute,\n      togglePlay,\n      pause,\n      play,\n      seekTo,\n    } = this.props\n\n    return (\n      <VideoControlsContainer>\n        <TopControls>\n          <Block>\n            <PlayPause togglePlay={togglePlay} isPlaying={isPlaying} />\n            <Title>{title}</Title>\n          </Block>\n          <Block>\n            <Timestamp currentTime={currentTime} duration={duration} />\n            <MuteUnmute toggleMute={toggleMute} isMuted={isMuted} />\n            <IconVideoFullscreen onClick={toggleFullscreen} color=\"white\" />\n          </Block>\n        </TopControls>\n        <Scrubber\n          duration={duration}\n          currentTime={currentTime}\n          pause={pause}\n          play={play}\n          seekTo={seekTo}\n          isPlaying={isPlaying}\n        />\n      </VideoControlsContainer>\n    )\n  }\n}\n\nconst TopControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\nexport const VideoControlsContainer = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n  border: 1px solid white;\n  border-radius: 2px;\n  padding: 20px;\n  margin: 20px;\n  opacity: 0;\n  transition: opacity 0.25s ease;\n  ${Timestamp} {\n    margin-right: 30px;\n  }\n  ${MuteUnmuteContainer} {\n    margin-right: 20px;\n  }\n  ${IconVideoFullscreen} {\n    cursor: pointer;\n  }\n`\nconst Title = styled.div`\n  ${garamond(\"s23\")};\n  margin-left: 20px;\n`\nconst Block = styled.div`\n  display: flex;\n`\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Modal/ModalHeader.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Modal/ModalHeader.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: none;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport { Serif, space } from \"@artsy/palette\";\nimport Icon from \"../Icon\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { media } from \"../Helpers\";\nexport var ModalHeader = function ModalHeader(props) {\n  var hasLogo = props.hasLogo,\n      title = props.title;\n  return React.createElement(Header, null, hasLogo && React.createElement(Logo, {\n    name: \"logotype\"\n  }), title && React.createElement(Title, {\n    size: \"5\",\n    weight: \"semibold\"\n  }, title));\n};\nvar Logo = styled(Icon).attrs({\n  color: \"black\",\n  fontSize: \"34px\"\n}).withConfig({\n  displayName: \"ModalHeader__Logo\",\n  componentId: \"s14i31lu-0\"\n})([\"display:block;line-height:1em;padding-bottom:\", \"px;\", \";\"], space(1), media.sm(_templateObject()));\nvar Title = styled(Serif).withConfig({\n  displayName: \"ModalHeader__Title\",\n  componentId: \"s14i31lu-1\"\n})([\"padding-bottom:\", \"px;\"], space(1));\nvar Header = styled.div.withConfig({\n  displayName: \"ModalHeader__Header\",\n  componentId: \"s14i31lu-2\"\n})([\"display:flex;text-align:center;justify-content:center;flex-direction:column;\"]);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Modal/ModalHeader.tsx"],"names":["Serif","space","Icon","React","styled","media","ModalHeader","props","hasLogo","title","Logo","attrs","color","fontSize","sm","Title","Header","div"],"mappings":";;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT;AAEA,OAAO,IAAMC,WAGX,GAAG,SAHQA,WAGR,CAAAC,KAAK,EAAI;AAAA,MACJC,OADI,GACeD,KADf,CACJC,OADI;AAAA,MACKC,KADL,GACeF,KADf,CACKE,KADL;AAGZ,SACE,oBAAC,MAAD,QACGD,OAAO,IAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADd,EAEGC,KAAK,IACJ,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,MAAM,EAAC;AAAvB,KACGA,KADH,CAHJ,CADF;AAUD,CAhBM;AAkBP,IAAMC,IAAI,GAAGN,MAAM,CAACF,IAAD,CAAN,CAAaS,KAAb,CAAmB;AAC9BC,EAAAA,KAAK,EAAE,OADuB;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAAnB,CAAH;AAAA;AAAA;AAAA,kEAMUZ,KAAK,CAAC,CAAD,CANf,EAONI,KAAK,CAACS,EAPA,oBAAV;AAYA,IAAMC,KAAK,GAAGX,MAAM,CAACJ,KAAD,CAAT;AAAA;AAAA;AAAA,+BACSC,KAAK,CAAC,CAAD,CADd,CAAX;AAIA,IAAMe,MAAM,GAAGZ,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,oFAAZ","sourcesContent":["import { Serif, space } from \"@artsy/palette\"\nimport Icon from \"Components/Icon\"\nimport React, { SFC } from \"react\"\nimport styled from \"styled-components\"\nimport { media } from \"../Helpers\"\n\nexport const ModalHeader: SFC<{\n  title?: string\n  hasLogo?: boolean\n}> = props => {\n  const { hasLogo, title } = props\n\n  return (\n    <Header>\n      {hasLogo && <Logo name=\"logotype\" />}\n      {title && (\n        <Title size=\"5\" weight=\"semibold\">\n          {title}\n        </Title>\n      )}\n    </Header>\n  )\n}\n\nconst Logo = styled(Icon).attrs({\n  color: \"black\",\n  fontSize: \"34px\",\n})`\n  display: block;\n  line-height: 1em;\n  padding-bottom: ${space(1)}px;\n  ${media.sm`\n    display: none;\n  `};\n`\n\nconst Title = styled(Serif)`\n  padding-bottom: ${space(1)}px;\n`\n\nconst Header = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  flex-direction: column;\n`\n"]}]}
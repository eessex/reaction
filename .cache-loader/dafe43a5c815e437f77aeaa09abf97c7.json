{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Artsy/Router/Components/Hydrator.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Artsy/Router/Components/Hydrator.tsx","mtime":1535727458000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from \"react\";\nimport serialize from \"serialize-javascript\";\nexport var Hydrator = function Hydrator(props) {\n  var loadableState = props.loadableState,\n      _props$data = props.data,\n      data = _props$data === void 0 ? {} : _props$data,\n      children = props.children;\n  var hydrationData;\n\n  try {\n    hydrationData = serialize(data, {\n      isJSON: true\n    });\n  } catch (error) {\n    hydrationData = \"{}\";\n    console.error(\"reaction/Router/AppShell Error serializing data:\", error);\n  }\n\n  return React.createElement(\"div\", null, React.createElement(\"div\", {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: \"\\n            \".concat(loadableState ? loadableState.getScriptTag() : \"\", \"\\n\\n            <script>\\n              var __RELAY_BOOTSTRAP__ = \").concat(serialize(hydrationData, {\n        isJSON: true\n      }), \";\\n            </script>\\n          \")\n    }\n  }), children);\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Artsy/Router/Components/Hydrator.tsx"],"names":["React","serialize","Hydrator","props","loadableState","data","children","hydrationData","isJSON","error","console","__html","getScriptTag"],"mappings":"AAAA,OAAOA,KAAP,MAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAUA,OAAO,IAAMC,QAA4B,GAAG,SAA/BA,QAA+B,CAAAC,KAAK,EAAI;AAAA,MAC3CC,aAD2C,GACJD,KADI,CAC3CC,aAD2C;AAAA,oBACJD,KADI,CAC5BE,IAD4B;AAAA,MAC5BA,IAD4B,4BACrB,EADqB;AAAA,MACjBC,QADiB,GACJH,KADI,CACjBG,QADiB;AAGnD,MAAIC,aAAJ;;AACA,MAAI;AACFA,IAAAA,aAAa,GAAGN,SAAS,CAACI,IAAD,EAAO;AAC9BG,MAAAA,MAAM,EAAE;AADsB,KAAP,CAAzB;AAGD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdF,IAAAA,aAAa,GAAG,IAAhB;AACAG,IAAAA,OAAO,CAACD,KAAR,CAAc,kDAAd,EAAkEA,KAAlE;AACD;;AAED,SACE,iCACE;AACE,IAAA,wBAAwB,MAD1B;AAEE,IAAA,uBAAuB,EAAE;AACvBE,MAAAA,MAAM,0BACFP,aAAa,GAAGA,aAAa,CAACQ,YAAd,EAAH,GAAkC,EAD7C,+EAI0BX,SAAS,CAACM,aAAD,EAAgB;AACnDC,QAAAA,MAAM,EAAE;AAD2C,OAAhB,CAJnC;AADiB;AAF3B,IADF,EAgBGF,QAhBH,CADF;AAoBD,CAjCM","sourcesContent":["import React, { SFC } from \"react\"\nimport serialize from \"serialize-javascript\"\n\nexport interface HydratorProps {\n  loadableState?: {\n    getScriptTag: () => string\n  }\n  data?: object[]\n  url?: string\n}\n\nexport const Hydrator: SFC<HydratorProps> = props => {\n  const { loadableState, data = {}, children } = props\n\n  let hydrationData\n  try {\n    hydrationData = serialize(data, {\n      isJSON: true,\n    })\n  } catch (error) {\n    hydrationData = \"{}\"\n    console.error(\"reaction/Router/AppShell Error serializing data:\", error)\n  }\n\n  return (\n    <div>\n      <div\n        suppressHydrationWarning\n        dangerouslySetInnerHTML={{\n          __html: `\n            ${loadableState ? loadableState.getScriptTag() : \"\"}\n\n            <script>\n              var __RELAY_BOOTSTRAP__ = ${serialize(hydrationData, {\n                isJSON: true,\n              })};\n            </script>\n          `,\n        }}\n      />\n\n      {children}\n    </div>\n  )\n}\n"]}]}
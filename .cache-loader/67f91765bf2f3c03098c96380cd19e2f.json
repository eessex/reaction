{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Gene/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Gene/index.tsx","mtime":1518817219000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contents = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _Artsy = require(\"../Artsy\");\n\nvar _Artists = _interopRequireDefault(require(\"./Artists\"));\n\nvar _GeneArtworks = _interopRequireDefault(require(\"./GeneArtworks\"));\n\nvar _graphql, _graphql2;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar GeneContents =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneContents, _React$Component);\n\n  function GeneContents(props) {\n    var _this;\n\n    _classCallCheck(this, GeneContents);\n\n    _this = _possibleConstructorReturn(this, (GeneContents.__proto__ || Object.getPrototypeOf(GeneContents)).call(this, props));\n\n    _initialiseProps.call(_assertThisInitialized(_this));\n\n    var _this$props$filters = _this.props.filters,\n        for_sale = _this$props$filters.for_sale,\n        price_range = _this$props$filters.price_range,\n        dimension_range = _this$props$filters.dimension_range,\n        medium = _this$props$filters.medium;\n    _this.state = {\n      for_sale: for_sale || null,\n      medium: medium || \"*\",\n      price_range: price_range || \"*\",\n      dimension_range: dimension_range || \"*\",\n      mode: props.mode,\n      sort: props.sort || \"-partner_updated_at\"\n    };\n    return _this;\n  }\n\n  _createClass(GeneContents, [{\n    key: \"onDropdownSelect\",\n    // Because `for_sale` is a proper filter of its own, but\n    // we include its aggregation as part of `price_range`, we\n    // have to handle it specially.\n    value: function onDropdownSelect(slice, value) {\n      var _setState;\n\n      var filter = slice.toLowerCase();\n\n      if (filter === \"price_range\" && value === \"*-*\") {\n        filter = \"for_sale\";\n        value = \"true\";\n      }\n\n      this.setState((_setState = {}, _defineProperty(_setState, filter, value), _defineProperty(_setState, \"mode\", \"artworks\"), _setState), this.handleStateChange);\n    }\n  }, {\n    key: \"onForSaleToggleSelect\",\n    value: function onForSaleToggleSelect() {\n      var forSale = this.state.for_sale ? null : true;\n      this.setState({\n        for_sale: forSale,\n        mode: \"artworks\"\n      }, this.handleStateChange);\n    }\n  }, {\n    key: \"onSortSelect\",\n    value: function onSortSelect(sortEl) {\n      this.setState({\n        sort: sortEl.val,\n        mode: \"artworks\"\n      }, this.handleStateChange);\n    }\n  }, {\n    key: \"onArtistModeSelect\",\n    value: function onArtistModeSelect() {\n      this.setState({\n        mode: \"artists\"\n      }, this.handleStateChange);\n    }\n  }, {\n    key: \"renderArtists\",\n    value: function renderArtists() {\n      var _this2 = this;\n\n      var _props = this.props,\n          geneID = _props.geneID,\n          relayEnvironment = _props.relayEnvironment;\n      return _react.default.createElement(_reactRelay.QueryRenderer, {\n        environment: relayEnvironment,\n        query: _graphql || (_graphql = function _graphql() {\n          var node = require(\"../../__generated__/GeneContentsArtistsQuery.graphql\");\n\n          if (node.hash && node.hash !== \"475032821c1a214fe810bfa6b8f3d4e2\") {\n            console.error(\"The definition of 'GeneContentsArtistsQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../__generated__/GeneContentsArtistsQuery.graphql\");\n        }),\n        variables: {\n          geneID: geneID\n        },\n        render: function render(_ref) {\n          var props = _ref.props;\n\n          if (props) {\n            return _react.default.createElement(_Artists.default, {\n              onForSaleToggleSelected: _this2.onForSaleToggleSelect.bind(_this2),\n              gene: props.gene,\n              onDropdownSelected: _this2.onDropdownSelect.bind(_this2)\n            });\n          } else {\n            return null;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"renderArtworks\",\n    value: function renderArtworks() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          geneID = _props2.geneID,\n          relayEnvironment = _props2.relayEnvironment;\n      var _state = this.state,\n          for_sale = _state.for_sale,\n          medium = _state.medium,\n          price_range = _state.price_range,\n          dimension_range = _state.dimension_range,\n          sort = _state.sort;\n      return _react.default.createElement(_reactRelay.QueryRenderer, {\n        environment: relayEnvironment,\n        query: _graphql2 || (_graphql2 = function _graphql2() {\n          var node = require(\"../../__generated__/GeneContentsArtworksQuery.graphql\");\n\n          if (node.hash && node.hash !== \"b6443f327467469eb9b0df012a822944\") {\n            console.error(\"The definition of 'GeneContentsArtworksQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../__generated__/GeneContentsArtworksQuery.graphql\");\n        }),\n        variables: _extends({\n          geneID: geneID\n        }, this.state),\n        render: function render(_ref2) {\n          var props = _ref2.props;\n\n          if (props) {\n            return _react.default.createElement(_GeneArtworks.default, {\n              onArtistModeToggleSelected: _this3.onArtistModeSelect.bind(_this3),\n              onForSaleToggleSelected: _this3.onForSaleToggleSelect.bind(_this3),\n              onSortSelected: _this3.onSortSelect.bind(_this3),\n              sort: sort,\n              for_sale: for_sale,\n              medium: medium,\n              price_range: price_range,\n              dimension_range: dimension_range,\n              gene: props.gene,\n              onDropdownSelected: _this3.onDropdownSelect.bind(_this3)\n            });\n          } else {\n            return null;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mode = this.state.mode;\n\n      if (mode === \"artists\") {\n        return this.renderArtists();\n      }\n\n      return this.renderArtworks();\n    }\n  }]);\n\n  return GeneContents;\n}(_react.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  Object.defineProperty(this, \"handleStateChange\", {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    value: function value() {\n      var _this4$state = _this4.state,\n          for_sale = _this4$state.for_sale,\n          medium = _this4$state.medium,\n          price_range = _this4$state.price_range,\n          dimension_range = _this4$state.dimension_range,\n          sort = _this4$state.sort,\n          mode = _this4$state.mode;\n      var filters = {\n        for_sale: for_sale,\n        medium: medium,\n        price_range: price_range,\n        dimension_range: dimension_range\n      };\n\n      _this4.props.onStateChange({\n        filters: filters,\n        sort: sort,\n        mode: mode\n      });\n    }\n  });\n};\n\nvar Contents = (0, _Artsy.ContextConsumer)(GeneContents);\nexports.Contents = Contents;",{"version":3,"sources":["src/Components/Gene/index.tsx"],"names":["GeneContents","props","filters","for_sale","price_range","dimension_range","medium","state","mode","sort","slice","value","filter","toLowerCase","setState","handleStateChange","forSale","sortEl","val","geneID","relayEnvironment","onForSaleToggleSelect","bind","gene","onDropdownSelect","onArtistModeSelect","onSortSelect","renderArtists","renderArtworks","Component","onStateChange","Contents"],"mappings":"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","file":"/Users/eve/development/reaction/src/Components/Gene/index.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport { graphql, QueryRenderer } from \"react-relay\"\n\nimport { ContextConsumer, ContextProps } from \"../Artsy\"\nimport Artists from \"./Artists\"\nimport GeneArtworks from \"./GeneArtworks\"\n\ninterface Filters {\n  for_sale: boolean\n  dimension_range: string\n  price_range: string\n  medium: string\n}\n\ntype Sort = \"year\" | \"-year\" | \"-partner_updated_at\"\n\ntype Mode = \"artists\" | \"artworks\"\n\ninterface StateChangePayload {\n  filters: Filters\n  sort: Sort\n  mode: Mode\n}\n\ninterface Props extends ContextProps {\n  mode: Mode\n  filters?: Partial<Filters>\n  geneID: string\n  sort?: Sort\n  onStateChange: (payload: StateChangePayload) => void\n}\n\ninterface State extends Filters {\n  mode: Mode\n  sort?: Sort\n}\n\nclass GeneContents extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    const {\n      for_sale,\n      price_range,\n      dimension_range,\n      medium,\n    } = this.props.filters\n    this.state = {\n      for_sale: for_sale || null,\n      medium: medium || \"*\",\n      price_range: price_range || \"*\",\n      dimension_range: dimension_range || \"*\",\n      mode: props.mode,\n      sort: props.sort || \"-partner_updated_at\",\n    }\n  }\n\n  handleStateChange = () => {\n    const {\n      for_sale,\n      medium,\n      price_range,\n      dimension_range,\n      sort,\n      mode,\n    } = this.state\n    const filters = {\n      for_sale,\n      medium,\n      price_range,\n      dimension_range,\n    }\n    this.props.onStateChange({ filters, sort, mode })\n  }\n\n  // Because `for_sale` is a proper filter of its own, but\n  // we include its aggregation as part of `price_range`, we\n  // have to handle it specially.\n  onDropdownSelect(slice: string, value: string) {\n    let filter = slice.toLowerCase() as any\n    if (filter === \"price_range\" && value === \"*-*\") {\n      filter = \"for_sale\"\n      value = \"true\"\n    }\n    this.setState(\n      {\n        [filter]: value,\n        mode: \"artworks\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  onForSaleToggleSelect() {\n    const forSale = this.state.for_sale ? null : true\n    this.setState(\n      {\n        for_sale: forSale,\n        mode: \"artworks\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  onSortSelect(sortEl) {\n    this.setState(\n      {\n        sort: sortEl.val,\n        mode: \"artworks\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  onArtistModeSelect() {\n    this.setState(\n      {\n        mode: \"artists\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  renderArtists() {\n    const { geneID, relayEnvironment } = this.props\n    return (\n      <QueryRenderer\n        environment={relayEnvironment}\n        query={graphql`\n          query GeneContentsArtistsQuery($geneID: String!) {\n            gene(id: $geneID) {\n              ...Artists_gene\n            }\n          }\n        `}\n        variables={{ geneID }}\n        render={({ props }) => {\n          if (props) {\n            return (\n              <Artists\n                onForSaleToggleSelected={this.onForSaleToggleSelect.bind(this)}\n                gene={props.gene}\n                onDropdownSelected={this.onDropdownSelect.bind(this)}\n              />\n            )\n          } else {\n            return null\n          }\n        }}\n      />\n    )\n  }\n\n  renderArtworks() {\n    const { geneID, relayEnvironment } = this.props\n    const { for_sale, medium, price_range, dimension_range, sort } = this.state\n    return (\n      <QueryRenderer\n        environment={relayEnvironment}\n        query={graphql`\n          query GeneContentsArtworksQuery(\n            $geneID: String!\n            $medium: String\n            $price_range: String\n            $sort: String\n            $for_sale: Boolean\n            $dimension_range: String\n          ) {\n            gene(id: $geneID) {\n              ...GeneArtworks_gene\n                @arguments(\n                  for_sale: $for_sale\n                  medium: $medium\n                  price_range: $price_range\n                  dimension_range: $dimension_range\n                )\n            }\n          }\n        `}\n        variables={{ geneID, ...this.state }}\n        render={({ props }) => {\n          if (props) {\n            return (\n              <GeneArtworks\n                onArtistModeToggleSelected={this.onArtistModeSelect.bind(this)}\n                onForSaleToggleSelected={this.onForSaleToggleSelect.bind(this)}\n                onSortSelected={this.onSortSelect.bind(this)}\n                sort={sort}\n                for_sale={for_sale}\n                medium={medium}\n                price_range={price_range}\n                dimension_range={dimension_range}\n                gene={props.gene}\n                onDropdownSelected={this.onDropdownSelect.bind(this)}\n              />\n            )\n          } else {\n            return null\n          }\n        }}\n      />\n    )\n  }\n\n  render() {\n    const { mode } = this.state\n    if (mode === \"artists\") {\n      return this.renderArtists()\n    }\n    return this.renderArtworks()\n  }\n}\n\nexport const Contents = ContextConsumer(GeneContents)\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Publishing/Sections/FullscreenViewer/Caption.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Sections/FullscreenViewer/Caption.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    bottom: 0;\\n    width: 100%;\\n    max-width: 100vh;\\n    padding: 20px;\\n  \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    display: \", \";\\n    margin-top: \", \";\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  a {\\n    color: black;\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    cursor: pointer;\\n    display: inline-block;\\n    span {\\n      border-bottom: 1px solid black;\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport { unica } from \"../../../../Assets/Fonts\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Colors from \"../../../../Assets/Colors\";\nimport { pMedia } from \"../../../Helpers\";\nimport { ArtworkCaption } from \"../ArtworkCaption\";\nexport var Caption = function Caption(props) {\n  var index = props.index,\n      open = props.open,\n      section = props.section,\n      total = props.total;\n  var isArtwork = section.type === \"artwork\";\n  var indexText = \"\".concat(index, \" of \").concat(total);\n  return React.createElement(CaptionContainer, null, React.createElement(CaptionTextContainer, null, React.createElement(CaptionToggle, {\n    open: open\n  }), React.createElement(CaptionText, {\n    open: open\n  }, isArtwork ? React.createElement(ArtworkCaption, {\n    artwork: section,\n    isFullscreenCaption: true,\n    linked: true\n  }) : React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: section.caption\n    }\n  }))), React.createElement(Index, null, indexText));\n};\n\nvar CaptionToggle = function CaptionToggle(props, context) {\n  var toggleMessage = props.open ? \"Hide\" : \"View Caption\";\n  return React.createElement(StyledCaptionToggle, {\n    onClick: context.onToggleCaption,\n    className: \"fullscreen-viewer__caption-toggle\"\n  }, React.createElement(\"span\", null, toggleMessage));\n};\n\nCaptionToggle.contextTypes = {\n  onToggleCaption: PropTypes.func\n};\nvar StyledCaptionToggle = styled.div.withConfig({\n  displayName: \"Caption__StyledCaptionToggle\",\n  componentId: \"s0mmwk-0\"\n})([\"display:none;\", \";\"], pMedia.sm(_templateObject(), unica(\"s14\", \"medium\")));\nvar CaptionDiv = styled.div;\nvar CaptionText = CaptionDiv(_templateObject2(), unica(\"s16\", \"medium\"), function (props) {\n  return pMedia.sm(_templateObject3(), unica(\"s14\", \"medium\"), props.open ? \"block\" : \"none\", props.open ? \"20px\" : \"0px\");\n});\nvar Index = styled.div.withConfig({\n  displayName: \"Caption__Index\",\n  componentId: \"s0mmwk-1\"\n})([\"margin-left:20px;white-space:nowrap;\", \";\", \";\"], unica(\"s16\"), pMedia.sm(_templateObject4(), unica(\"s14\")));\nvar CaptionContainer = styled.div.withConfig({\n  displayName: \"Caption__CaptionContainer\",\n  componentId: \"s0mmwk-2\"\n})([\"display:flex;justify-content:space-between;background-color:\", \";padding:30px 60px;p{margin:0px;}\", \";\"], Colors.gray, pMedia.sm(_templateObject5()));\nvar CaptionTextContainer = styled.div.withConfig({\n  displayName: \"Caption__CaptionTextContainer\",\n  componentId: \"s0mmwk-3\"\n})([\"display:flex;flex-direction:column;\"]);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Publishing/Sections/FullscreenViewer/Caption.tsx"],"names":["unica","PropTypes","React","styled","Colors","pMedia","ArtworkCaption","Caption","props","index","open","section","total","isArtwork","type","indexText","__html","caption","CaptionToggle","context","toggleMessage","onToggleCaption","contextTypes","func","StyledCaptionToggle","div","sm","CaptionDiv","CaptionText","Index","CaptionContainer","gray","CaptionTextContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAuC,mBAAvC;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AACA,SAASC,cAAT;AAaA,OAAO,IAAMC,OAAgC,GAAG,SAAnCA,OAAmC,CAAAC,KAAK,EAAI;AAAA,MAC/CC,KAD+C,GACfD,KADe,CAC/CC,KAD+C;AAAA,MACxCC,IADwC,GACfF,KADe,CACxCE,IADwC;AAAA,MAClCC,OADkC,GACfH,KADe,CAClCG,OADkC;AAAA,MACzBC,KADyB,GACfJ,KADe,CACzBI,KADyB;AAGvD,MAAMC,SAAS,GAAGF,OAAO,CAACG,IAAR,KAAiB,SAAnC;AACA,MAAMC,SAAS,aAAMN,KAAN,iBAAkBG,KAAlB,CAAf;AAEA,SACE,oBAAC,gBAAD,QACE,oBAAC,oBAAD,QACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEF;AAArB,IADF,EAGE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA;AAAnB,KACGG,SAAS,GACR,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEF,OAAzB;AAAkC,IAAA,mBAAmB,MAArD;AAAsD,IAAA,MAAM;AAA5D,IADQ,GAGR;AACE,IAAA,uBAAuB,EAAE;AACvBK,MAAAA,MAAM,EAAEL,OAAO,CAACM;AADO;AAD3B,IAJJ,CAHF,CADF,EAiBE,oBAAC,KAAD,QAAQF,SAAR,CAjBF,CADF;AAqBD,CA3BM;;AA6BP,IAAMG,aAA0C,GAAG,SAA7CA,aAA6C,CAACV,KAAD,EAAQW,OAAR,EAAoB;AACrE,MAAMC,aAAa,GAAGZ,KAAK,CAACE,IAAN,GAAa,MAAb,GAAsB,cAA5C;AAEA,SACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAES,OAAO,CAACE,eADnB;AAEE,IAAA,SAAS,EAAC;AAFZ,KAIE,kCAAOD,aAAP,CAJF,CADF;AAQD,CAXD;;AAaAF,aAAa,CAACI,YAAd,GAA6B;AAC3BD,EAAAA,eAAe,EAAEpB,SAAS,CAACsB;AADA,CAA7B;AAIA,IAAMC,mBAAmB,GAAGrB,MAAM,CAACsB,GAAV;AAAA;AAAA;AAAA,2BAErBpB,MAAM,CAACqB,EAFc,oBAGnB1B,KAAK,CAAC,KAAD,EAAQ,QAAR,CAHc,EAAzB;AAYA,IAAM2B,UAA4C,GAAGxB,MAAM,CAACsB,GAA5D;AAEA,IAAMG,WAAW,GAAGD,UAAH,qBACb3B,KAAK,CAAC,KAAD,EAAQ,QAAR,CADQ,EAKb,UAAAQ,KAAK;AAAA,SAAIH,MAAM,CAACqB,EAAX,qBACH1B,KAAK,CAAC,KAAD,EAAQ,QAAR,CADF,EAEMQ,KAAK,CAACE,IAAN,GAAa,OAAb,GAAuB,MAF7B,EAGSF,KAAK,CAACE,IAAN,GAAa,MAAb,GAAsB,KAH/B;AAAA,CALQ,CAAjB;AAYA,IAAMmB,KAAK,GAAG1B,MAAM,CAACsB,GAAV;AAAA;AAAA;AAAA,uDAGPzB,KAAK,CAAC,KAAD,CAHE,EAIPK,MAAM,CAACqB,EAJA,qBAKL1B,KAAK,CAAC,KAAD,CALA,EAAX;AASA,IAAM8B,gBAAgB,GAAG3B,MAAM,CAACsB,GAAV;AAAA;AAAA;AAAA,+GAGArB,MAAM,CAAC2B,IAHP,EAQlB1B,MAAM,CAACqB,EARW,qBAAtB;AAiBA,IAAMM,oBAAoB,GAAG7B,MAAM,CAACsB,GAAV;AAAA;AAAA;AAAA,2CAA1B","sourcesContent":["import { unica } from \"Assets/Fonts\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled, { StyledFunction } from \"styled-components\"\nimport Colors from \"../../../../Assets/Colors\"\nimport { pMedia } from \"../../../Helpers\"\nimport { ArtworkCaption } from \"../ArtworkCaption\"\n\ninterface CaptionProps extends React.HTMLProps<HTMLDivElement> {\n  section?: any\n  total: number\n  index: number\n  open: boolean\n}\n\ninterface CaptionOpenProps extends React.HTMLProps<HTMLDivElement> {\n  open: boolean\n}\n\nexport const Caption: React.SFC<CaptionProps> = props => {\n  const { index, open, section, total } = props\n\n  const isArtwork = section.type === \"artwork\"\n  const indexText = `${index} of ${total}`\n\n  return (\n    <CaptionContainer>\n      <CaptionTextContainer>\n        <CaptionToggle open={open} />\n\n        <CaptionText open={open}>\n          {isArtwork ? (\n            <ArtworkCaption artwork={section} isFullscreenCaption linked />\n          ) : (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: section.caption,\n              }}\n            />\n          )}\n        </CaptionText>\n      </CaptionTextContainer>\n\n      <Index>{indexText}</Index>\n    </CaptionContainer>\n  )\n}\n\nconst CaptionToggle: React.SFC<CaptionOpenProps> = (props, context) => {\n  const toggleMessage = props.open ? \"Hide\" : \"View Caption\"\n\n  return (\n    <StyledCaptionToggle\n      onClick={context.onToggleCaption}\n      className=\"fullscreen-viewer__caption-toggle\"\n    >\n      <span>{toggleMessage}</span>\n    </StyledCaptionToggle>\n  )\n}\n\nCaptionToggle.contextTypes = {\n  onToggleCaption: PropTypes.func,\n}\n\nconst StyledCaptionToggle = styled.div`\n  display: none;\n  ${pMedia.sm`\n    ${unica(\"s14\", \"medium\")}\n    cursor: pointer;\n    display: inline-block;\n    span {\n      border-bottom: 1px solid black;\n    }\n  `};\n`\n\nconst CaptionDiv: StyledFunction<CaptionOpenProps> = styled.div\n\nconst CaptionText = CaptionDiv`\n  ${unica(\"s16\", \"medium\")}\n  a {\n    color: black;\n  }\n  ${props => pMedia.sm`\n    ${unica(\"s14\", \"medium\")}\n    display: ${props.open ? \"block\" : \"none\"};\n    margin-top: ${props.open ? \"20px\" : \"0px\"};\n  `}\n`\n\nconst Index = styled.div`\n  margin-left: 20px;\n  white-space: nowrap;\n  ${unica(\"s16\")};\n  ${pMedia.sm`\n    ${unica(\"s14\")}\n  `};\n`\n\nconst CaptionContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${Colors.gray};\n  padding: 30px 60px;\n  p {\n    margin: 0px;\n  }\n  ${pMedia.sm`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    max-width: 100vh;\n    padding: 20px;\n  `};\n`\n\nconst CaptionTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n"]}]}
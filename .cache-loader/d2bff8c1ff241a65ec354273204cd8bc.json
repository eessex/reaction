{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Onboarding/Steps/Artists/ArtistSearchResults.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Onboarding/Steps/Artists/ArtistSearchResults.tsx","mtime":1522865193000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArtistSearchResults = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _Events = _interopRequireDefault(require(\"../../../../Utils/Events\"));\n\nvar _track = require(\"../../../../Utils/track\");\n\nvar _ReplaceTransition = _interopRequireDefault(require(\"../../../Animation/ReplaceTransition\"));\n\nvar _Artsy = require(\"../../../Artsy\");\n\nvar _ItemLink = _interopRequireWildcard(require(\"../../ItemLink\"));\n\nvar _graphql, _graphql2, _dec, _class;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar ArtistSearchResultsContent = (_dec = (0, _track.track)({}, {\n  dispatch: function dispatch(data) {\n    return _Events.default.postEvent(data);\n  }\n}), _dec(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArtistSearchResultsContent, _React$Component);\n\n  function ArtistSearchResultsContent(props, context) {\n    var _this;\n\n    _classCallCheck(this, ArtistSearchResultsContent);\n\n    _this = _possibleConstructorReturn(this, (ArtistSearchResultsContent.__proto__ || Object.getPrototypeOf(ArtistSearchResultsContent)).call(this, props, context));\n    Object.defineProperty(_assertThisInitialized(_this), \"excludedArtistIds\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"followCount\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: 0\n    });\n    _this.excludedArtistIds = new Set(_this.props.viewer.match_artist.map(function (item) {\n      return item._id;\n    }));\n    return _this;\n  }\n\n  _createClass(ArtistSearchResultsContent, [{\n    key: \"onArtistFollowed\",\n    value: function onArtistFollowed(artist, store, data) {\n      var suggestedArtistEdge = data.followArtist.artist.related.suggested.edges[0];\n      var popularArtist = data.followArtist.popular_artists.artists[0];\n      var artistToSuggest = store.get((suggestedArtistEdge && suggestedArtistEdge.node || popularArtist).__id);\n      this.excludedArtistIds.add(artistToSuggest.getValue(\"_id\"));\n      var popularArtistsRootField = store.get(\"client:root:viewer\");\n      var popularArtists = popularArtistsRootField.getLinkedRecords(\"match_artist\", {\n        term: this.props.term\n      });\n      var updatedPopularArtists = popularArtists.map(function (artistItem) {\n        return artistItem.getDataID() === artist.__id ? artistToSuggest : artistItem;\n      });\n      popularArtistsRootField.setLinkedRecords(updatedPopularArtists, \"match_artist\", {\n        term: this.props.term\n      });\n      this.followCount += 1;\n      this.props.updateFollowCount(this.followCount);\n      this.props.tracking.trackEvent({\n        action: \"Followed Artist\",\n        entity_id: artist._id,\n        entity_slug: artist.id,\n        context_module: \"onboarding search\"\n      });\n    }\n  }, {\n    key: \"onFollowedArtist\",\n    value: function onFollowedArtist(artist) {\n      var _this2 = this;\n\n      (0, _reactRelay.commitMutation)(this.props.relay.environment, {\n        mutation: _graphql || (_graphql = function _graphql() {\n          var node = require(\"../../../../__generated__/ArtistSearchResultsArtistMutation.graphql\");\n\n          if (node.hash && node.hash !== \"be26c86b2efc4fd7dd40fe5689acf9dc\") {\n            console.error(\"The definition of 'ArtistSearchResultsArtistMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../../../__generated__/ArtistSearchResultsArtistMutation.graphql\");\n        }),\n        variables: {\n          input: {\n            artist_id: artist.id,\n            unfollow: false\n          },\n          excludedArtistIds: Array.from(this.excludedArtistIds)\n        },\n        updater: function updater(store, data) {\n          return _this2.onArtistFollowed(artist, store, data);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var artistItems = this.props.viewer.match_artist.map(function (artist, index) {\n        return React.createElement(_ItemLink.LinkContainer, {\n          key: \"artist-search-results-\".concat(index)\n        }, React.createElement(_ReplaceTransition.default, {\n          transitionEnterTimeout: 1000,\n          transitionLeaveTimeout: 400\n        }, React.createElement(_ItemLink.default, {\n          href: \"#\",\n          item: artist,\n          key: artist.id,\n          id: artist.id,\n          name: artist.name,\n          image_url: artist.image && artist.image.cropped.url,\n          onClick: function onClick() {\n            return _this3.onFollowedArtist(artist);\n          }\n        })));\n      });\n      return React.createElement(\"div\", null, artistItems);\n    }\n  }]);\n\n  return ArtistSearchResultsContent;\n}(React.Component)) || _class);\nvar ArtistSearchResultsContentContainer = (0, _reactRelay.createFragmentContainer)(ArtistSearchResultsContent, {\n  viewer: function viewer() {\n    var node = require(\"../../../../__generated__/ArtistSearchResultsContent_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"bfdccfa207bba7b1c084c6c0b44c4ffe\") {\n      console.error(\"The definition of 'ArtistSearchResultsContent_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/ArtistSearchResultsContent_viewer.graphql\");\n  }\n});\n\nvar ArtistSearchResultsComponent = function ArtistSearchResultsComponent(_ref) {\n  var term = _ref.term,\n      relayEnvironment = _ref.relayEnvironment,\n      updateFollowCount = _ref.updateFollowCount;\n  return React.createElement(_reactRelay.QueryRenderer, {\n    environment: relayEnvironment,\n    query: _graphql2 || (_graphql2 = function _graphql2() {\n      var node = require(\"../../../../__generated__/ArtistSearchResultsQuery.graphql\");\n\n      if (node.hash && node.hash !== \"98c64d4adbf4a0b483eb75d8eb196853\") {\n        console.error(\"The definition of 'ArtistSearchResultsQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n      }\n\n      return require(\"../../../../__generated__/ArtistSearchResultsQuery.graphql\");\n    }),\n    variables: {\n      term: term\n    },\n    render: function render(_ref2) {\n      var error = _ref2.error,\n          props = _ref2.props;\n\n      if (props) {\n        return React.createElement(ArtistSearchResultsContentContainer, {\n          viewer: props.viewer,\n          term: term,\n          updateFollowCount: updateFollowCount\n        });\n      } else {\n        return null;\n      }\n    }\n  });\n};\n\nvar ArtistSearchResults = (0, _Artsy.ContextConsumer)(ArtistSearchResultsComponent);\nexports.ArtistSearchResults = ArtistSearchResults;",{"version":3,"sources":["src/Components/Onboarding/Steps/Artists/ArtistSearchResults.tsx"],"names":["ArtistSearchResultsContent","dispatch","postEvent","data","props","context","excludedArtistIds","Set","viewer","match_artist","map","item","_id","artist","store","suggestedArtistEdge","followArtist","related","suggested","edges","popularArtist","popular_artists","artists","artistToSuggest","get","node","__id","add","getValue","popularArtistsRootField","popularArtists","getLinkedRecords","term","updatedPopularArtists","artistItem","getDataID","setLinkedRecords","followCount","updateFollowCount","tracking","trackEvent","action","entity_id","entity_slug","id","context_module","relay","environment","mutation","variables","input","artist_id","unfollow","Array","from","updater","onArtistFollowed","artistItems","index","name","image","cropped","url","onFollowedArtist","React","Component","ArtistSearchResultsContentContainer","ArtistSearchResultsComponent","relayEnvironment","error","ArtistSearchResults"],"mappings":"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","file":"/Users/eve/development/reaction/src/Components/Onboarding/Steps/Artists/ArtistSearchResults.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import * as React from \"react\"\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  QueryRenderer,\n  RelayProp,\n} from \"react-relay\"\nimport { RecordSourceSelectorProxy, SelectorData } from \"relay-runtime\"\nimport Events from \"../../../../Utils/Events\"\nimport { track } from \"../../../../Utils/track\"\nimport ReplaceTransition from \"../../../Animation/ReplaceTransition\"\nimport { ContextConsumer, ContextProps } from \"../../../Artsy\"\nimport ItemLink, { LinkContainer } from \"../../ItemLink\"\nimport { FollowProps } from \"../../Types\"\n\ninterface Artist {\n  id: string | null\n  _id: string | null\n  __id: string | null\n  name: string | null\n  image: {\n    cropped: {\n      url: string | null\n    }\n  } | null\n}\n\nexport interface Props extends FollowProps {\n  term: string\n  tracking?: any\n}\n\ninterface RelayProps extends React.HTMLProps<HTMLAnchorElement>, Props {\n  relay?: RelayProp\n  viewer: {\n    match_artist: Artist[]\n  }\n}\n\n@track({}, { dispatch: data => Events.postEvent(data) })\nclass ArtistSearchResultsContent extends React.Component<RelayProps, null> {\n  private excludedArtistIds: Set<string>\n  followCount: number = 0\n\n  constructor(props: RelayProps, context: any) {\n    super(props, context)\n    this.excludedArtistIds = new Set(\n      this.props.viewer.match_artist.map(item => item._id)\n    )\n  }\n\n  onArtistFollowed(\n    artist: Artist,\n    store: RecordSourceSelectorProxy,\n    data: SelectorData\n  ): void {\n    const suggestedArtistEdge =\n      data.followArtist.artist.related.suggested.edges[0]\n    const popularArtist = data.followArtist.popular_artists.artists[0]\n    const artistToSuggest = store.get(\n      ((suggestedArtistEdge && suggestedArtistEdge.node) || popularArtist).__id\n    )\n    this.excludedArtistIds.add(artistToSuggest.getValue(\"_id\"))\n\n    const popularArtistsRootField = store.get(\"client:root:viewer\")\n    const popularArtists = popularArtistsRootField.getLinkedRecords(\n      \"match_artist\",\n      { term: this.props.term }\n    )\n    const updatedPopularArtists = popularArtists.map(\n      artistItem =>\n        artistItem.getDataID() === artist.__id ? artistToSuggest : artistItem\n    )\n\n    popularArtistsRootField.setLinkedRecords(\n      updatedPopularArtists,\n      \"match_artist\",\n      { term: this.props.term }\n    )\n\n    this.followCount += 1\n\n    this.props.updateFollowCount(this.followCount)\n\n    this.props.tracking.trackEvent({\n      action: \"Followed Artist\",\n      entity_id: artist._id,\n      entity_slug: artist.id,\n      context_module: \"onboarding search\",\n    })\n  }\n\n  onFollowedArtist(artist: Artist) {\n    commitMutation(this.props.relay.environment, {\n      mutation: graphql`\n        mutation ArtistSearchResultsArtistMutation(\n          $input: FollowArtistInput!\n          $excludedArtistIds: [String]!\n        ) {\n          followArtist(input: $input) {\n            popular_artists(\n              size: 1\n              exclude_followed_artists: true\n              exclude_artist_ids: $excludedArtistIds\n            ) {\n              artists {\n                id\n                _id\n                __id\n                name\n                image {\n                  cropped(width: 100, height: 100) {\n                    url\n                  }\n                }\n              }\n            }\n            artist {\n              __id\n              related {\n                suggested(\n                  first: 1\n                  exclude_followed_artists: true\n                  exclude_artist_ids: $excludedArtistIds\n                ) {\n                  edges {\n                    node {\n                      id\n                      _id\n                      __id\n                      name\n                      image {\n                        cropped(width: 100, height: 100) {\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        input: {\n          artist_id: artist.id,\n          unfollow: false,\n        },\n        excludedArtistIds: Array.from(this.excludedArtistIds),\n      },\n      updater: (store: RecordSourceSelectorProxy, data: SelectorData) =>\n        this.onArtistFollowed(artist, store, data),\n    })\n  }\n\n  render() {\n    const artistItems = this.props.viewer.match_artist.map((artist, index) => (\n      <LinkContainer key={`artist-search-results-${index}`}>\n        <ReplaceTransition\n          transitionEnterTimeout={1000}\n          transitionLeaveTimeout={400}\n        >\n          <ItemLink\n            href=\"#\"\n            item={artist}\n            key={artist.id}\n            id={artist.id}\n            name={artist.name}\n            image_url={artist.image && artist.image.cropped.url}\n            onClick={() => this.onFollowedArtist(artist)}\n          />\n        </ReplaceTransition>\n      </LinkContainer>\n    ))\n\n    return <div>{artistItems}</div>\n  }\n}\n\nconst ArtistSearchResultsContentContainer = createFragmentContainer(\n  ArtistSearchResultsContent,\n  graphql`\n    fragment ArtistSearchResultsContent_viewer on Viewer {\n      match_artist(term: $term) {\n        id\n        _id\n        __id\n        name\n        image {\n          cropped(width: 100, height: 100) {\n            url\n          }\n        }\n      }\n    }\n  `\n)\n\nconst ArtistSearchResultsComponent: React.SFC<Props & ContextProps> = ({\n  term,\n  relayEnvironment,\n  updateFollowCount,\n}) => {\n  return (\n    <QueryRenderer\n      environment={relayEnvironment}\n      query={graphql`\n        query ArtistSearchResultsQuery($term: String!) {\n          viewer {\n            ...ArtistSearchResultsContent_viewer\n          }\n        }\n      `}\n      variables={{ term }}\n      render={({ error, props }) => {\n        if (props) {\n          return (\n            <ArtistSearchResultsContentContainer\n              viewer={props.viewer}\n              term={term}\n              updateFollowCount={updateFollowCount}\n            />\n          )\n        } else {\n          return null\n        }\n      }}\n    />\n  )\n}\n\nexport const ArtistSearchResults = ContextConsumer(ArtistSearchResultsComponent)\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/TextLink.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/TextLink.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { garamond } from \"../Assets/Fonts\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../Assets/Colors\";\nexport var TextLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextLink, _React$Component);\n\n  function TextLink() {\n    _classCallCheck(this, TextLink);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextLink).apply(this, arguments));\n  }\n\n  _createClass(TextLink, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"a\", {\n        href: this.props.href,\n        className: this.props.className,\n        target: this.props.target\n      }, this.props.children);\n    }\n  }]);\n\n  return TextLink;\n}(React.Component);\n\n_defineProperty(TextLink, \"defaultProps\", {\n  target: \"_self\"\n});\n\nvar StyledTextLink = styled(TextLink).withConfig({\n  displayName: \"TextLink__StyledTextLink\",\n  componentId: \"pwn95u-0\"\n})([\"\", \";color:\", \";text-decoration:\", \";\"], garamond(\"s15\"), function (props) {\n  return props.color;\n}, function (props) {\n  return props.underline ? \"underline\" : \"none\";\n});\nStyledTextLink.defaultProps = {\n  underline: false,\n  color: colors.grayBold\n};\nexport default StyledTextLink;",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/TextLink.tsx"],"names":["garamond","React","styled","colors","TextLink","props","href","className","target","children","Component","StyledTextLink","color","underline","defaultProps","grayBold"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP;AAWA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAKW;AACP,aACE;AACE,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADnB;AAEE,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAFxB;AAGE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG;AAHrB,SAKG,KAAKH,KAAL,CAAWI,QALd,CADF;AASD;AAfH;;AAAA;AAAA,EAA8BR,KAAK,CAACS,SAApC;;gBAAaN,Q,kBAC6B;AACtCI,EAAAA,MAAM,EAAE;AAD8B,C;;AAiB1C,IAAMG,cAAc,GAAGT,MAAM,CAACE,QAAD,CAAT;AAAA;AAAA;AAAA,8CAChBJ,QAAQ,CAAC,KAAD,CADQ,EAET,UAAAK,KAAK;AAAA,SAAIA,KAAK,CAACO,KAAV;AAAA,CAFI,EAGC,UAAAP,KAAK;AAAA,SAAKA,KAAK,CAACQ,SAAN,GAAkB,WAAlB,GAAgC,MAArC;AAAA,CAHN,CAApB;AAMAF,cAAc,CAACG,YAAf,GAA8B;AAC5BD,EAAAA,SAAS,EAAE,KADiB;AAE5BD,EAAAA,KAAK,EAAET,MAAM,CAACY;AAFc,CAA9B;AAKA,eAAeJ,cAAf","sourcesContent":["import { garamond } from \"Assets/Fonts\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport colors from \"../Assets/Colors\"\n\nexport interface LinkProps\n  extends React.Props<TextLink>,\n    React.HTMLAttributes<TextLink> {\n  href?: string\n  underline?: boolean\n  color?: string\n  target?: string\n}\n\nexport class TextLink extends React.Component<LinkProps, null> {\n  public static defaultProps: LinkProps = {\n    target: \"_self\",\n  }\n\n  render() {\n    return (\n      <a\n        href={this.props.href}\n        className={this.props.className}\n        target={this.props.target}\n      >\n        {this.props.children}\n      </a>\n    )\n  }\n}\n\nconst StyledTextLink = styled(TextLink)`\n  ${garamond(\"s15\")};\n  color: ${props => props.color};\n  text-decoration: ${props => (props.underline ? \"underline\" : \"none\")};\n`\n\nStyledTextLink.defaultProps = {\n  underline: false,\n  color: colors.grayBold,\n}\n\nexport default StyledTextLink\n"]}]}
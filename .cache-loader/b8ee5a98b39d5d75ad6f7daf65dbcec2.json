{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artwork/Utils/filterLocations.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artwork/Utils/filterLocations.tsx","mtime":1537442692000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\n * Helper function to filter out blank and duplicate location names\n * @param locations collection of location objects to filter\n */\nexport var filterLocations = function filterLocations(locations) {\n  if (!locations || locations.length < 1) {\n    return;\n  }\n\n  var locationCities = locations.map(function (location, index) {\n    return location.city;\n  });\n  var filteredForDuplicatesAndBlanks = locationCities.filter(function (city, pos) {\n    return city && locationCities.indexOf(city) === pos && city.length > 0;\n  });\n  return filteredForDuplicatesAndBlanks;\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artwork/Utils/filterLocations.tsx"],"names":["filterLocations","locations","length","locationCities","map","location","index","city","filteredForDuplicatesAndBlanks","filter","pos","indexOf"],"mappings":"AAAA;;;;AAIA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAgD;AAC7E,MAAI,CAACA,SAAD,IAAcA,SAAS,CAACC,MAAV,GAAmB,CAArC,EAAwC;AACtC;AACD;;AACD,MAAMC,cAAc,GAAGF,SAAS,CAACG,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxD,WAAOD,QAAQ,CAACE,IAAhB;AACD,GAFsB,CAAvB;AAGA,MAAMC,8BAA8B,GAAGL,cAAc,CAACM,MAAf,CAAsB,UAACF,IAAD,EAAOG,GAAP,EAAe;AAC1E,WAAOH,IAAI,IAAIJ,cAAc,CAACQ,OAAf,CAAuBJ,IAAvB,MAAiCG,GAAzC,IAAgDH,IAAI,CAACL,MAAL,GAAc,CAArE;AACD,GAFsC,CAAvC;AAGA,SAAOM,8BAAP;AACD,CAXM","sourcesContent":["/**\n * Helper function to filter out blank and duplicate location names\n * @param locations collection of location objects to filter\n */\nexport const filterLocations = (locations: ReadonlyArray<{ city: string }>) => {\n  if (!locations || locations.length < 1) {\n    return\n  }\n  const locationCities = locations.map((location, index) => {\n    return location.city\n  })\n  const filteredForDuplicatesAndBlanks = locationCities.filter((city, pos) => {\n    return city && locationCities.indexOf(city) === pos && city.length > 0\n  })\n  return filteredForDuplicatesAndBlanks\n}\n"]}]}
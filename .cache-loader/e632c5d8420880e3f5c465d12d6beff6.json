{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Order/Components/AddressForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Order/Components/AddressForm.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, Join, Serif, Spacer } from \"@artsy/palette\";\nimport Input from \"../../../Components/Input\";\nimport React from \"react\";\nimport { CountrySelect } from \"../../../Styleguide/Components\";\nimport { TwoColumnSplit } from \"./TwoColumnLayout\";\nexport var emptyAddress = Object.freeze({\n  name: \"\",\n  country: \"\",\n  postalCode: \"\",\n  addressLine1: \"\",\n  addressLine2: \"\",\n  city: \"\",\n  region: \"\",\n  phoneNumber: \"\"\n});\nexport var AddressForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddressForm, _React$Component);\n\n  function AddressForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddressForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddressForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      address: _objectSpread({}, emptyAddress, _this.props.defaultValue)\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"changeEventHandler\", function (key) {\n      return function (ev) {\n        _this.onChangeValue(key, ev.currentTarget.value);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"changeValueHandler\", function (key) {\n      return function (value) {\n        _this.onChangeValue(key, value);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeValue\", function (key, value) {\n      _this.setState({\n        address: _objectSpread({}, _this.state.address, _defineProperty({}, key, value))\n      }, function () {\n        _this.props.onChange(_objectSpread({}, _this.state.address), key);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AddressForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Join, {\n        separator: React.createElement(Spacer, {\n          mb: 2\n        })\n      }, React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        id: \"AddressForm_name\",\n        placeholder: \"Add full name\",\n        title: \"Full name\",\n        autoCapitalize: \"words\",\n        autoCorrect: \"off\",\n        defaultValue: this.props.defaultValue.name,\n        onChange: this.changeEventHandler(\"name\"),\n        error: this.props.errors && this.props.errors.name,\n        block: true\n      })), React.createElement(TwoColumnSplit, null, React.createElement(Flex, {\n        flexDirection: \"column\",\n        pb: 1\n      }, React.createElement(Serif, {\n        mb: 1,\n        size: \"3t\",\n        color: \"black100\",\n        lineHeight: 18\n      }, \"Country\"), React.createElement(CountrySelect, {\n        selected: this.state.address.country,\n        onSelect: this.changeValueHandler(\"country\")\n      })), React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        id: \"AddressForm_postalCode\",\n        placeholder: \"Add postal code\",\n        title: \"Postal code\",\n        autoCapitalize: \"characters\",\n        autoCorrect: \"off\",\n        defaultValue: this.props.defaultValue.postalCode,\n        onChange: this.changeEventHandler(\"postalCode\"),\n        error: this.props.errors && this.props.errors.postalCode,\n        block: true\n      }))), React.createElement(TwoColumnSplit, null, React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        id: \"AddressForm_addressLine1\",\n        placeholder: \"Add street address\",\n        title: \"Address line 1\",\n        autoCapitalize: \"words\",\n        defaultValue: this.props.defaultValue.addressLine1,\n        onChange: this.changeEventHandler(\"addressLine1\"),\n        error: this.props.errors && this.props.errors.addressLine1,\n        block: true\n      })), React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        id: \"AddressForm_addressLine2\",\n        placeholder: \"Add apt, floor, suite, etc.\",\n        title: \"Address line 2 (optional)\",\n        autoCapitalize: \"words\",\n        defaultValue: this.props.defaultValue.addressLine2,\n        onChange: this.changeEventHandler(\"addressLine2\"),\n        block: true\n      }))), React.createElement(TwoColumnSplit, null, React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        id: \"AddressForm_city\",\n        placeholder: \"Add city\",\n        title: \"City\",\n        autoCapitalize: \"words\",\n        defaultValue: this.props.defaultValue.city,\n        onChange: this.changeEventHandler(\"city\"),\n        error: this.props.errors && this.props.errors.city,\n        block: true\n      })), React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        placeholder: \"Add State, province, or region\",\n        title: \"State, province, or region\",\n        autoCapitalize: \"words\",\n        autoCorrect: \"off\",\n        defaultValue: this.props.defaultValue.region,\n        onChange: this.changeEventHandler(\"region\"),\n        error: this.props.errors && this.props.errors.region,\n        block: true\n      }))), !this.props.billing && React.createElement(Flex, {\n        flexDirection: \"column\"\n      }, React.createElement(Input, {\n        id: \"AddressForm_phoneNumber\",\n        title: \"Phone number\",\n        description: \"Required for shipping logistics\",\n        placeholder: \"Add phone\",\n        pattern: \"[0-9]*\",\n        defaultValue: this.props.defaultValue.phoneNumber,\n        onChange: this.changeEventHandler(\"phoneNumber\"),\n        error: this.props.errors && this.props.errors.phoneNumber,\n        block: true\n      })));\n    }\n  }]);\n\n  return AddressForm;\n}(React.Component);",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Order/Components/AddressForm.tsx"],"names":["Flex","Join","Serif","Spacer","Input","React","CountrySelect","TwoColumnSplit","emptyAddress","Object","freeze","name","country","postalCode","addressLine1","addressLine2","city","region","phoneNumber","AddressForm","address","props","defaultValue","key","ev","onChangeValue","currentTarget","value","setState","state","onChange","changeEventHandler","errors","changeValueHandler","billing","Component"],"mappings":"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","sourcesContent":["import { Flex, Join, Serif, Spacer } from \"@artsy/palette\"\nimport Input from \"Components/Input\"\nimport React from \"react\"\nimport { CountrySelect } from \"Styleguide/Components\"\nimport { TwoColumnSplit } from \"./TwoColumnLayout\"\n\nexport interface Address {\n  name: string\n  country: string\n  postalCode: string\n  addressLine1: string\n  addressLine2: string\n  city: string\n  region: string\n  phoneNumber: string\n}\n\nexport type AddressErrors = Partial<Address>\nexport type AddressChangeHandler = (\n  address: Address,\n  key: keyof Address\n) => void\n\nexport const emptyAddress: Address = Object.freeze({\n  name: \"\",\n  country: \"\",\n  postalCode: \"\",\n  addressLine1: \"\",\n  addressLine2: \"\",\n  city: \"\",\n  region: \"\",\n  phoneNumber: \"\",\n})\nexport interface AddressFormProps {\n  onChange: AddressChangeHandler\n  defaultValue?: Partial<Address>\n  billing?: boolean\n  errors?: AddressErrors\n}\n\ninterface AddressFormState {\n  address: Address\n}\n\nexport class AddressForm extends React.Component<\n  AddressFormProps,\n  AddressFormState\n> {\n  state = {\n    address: {\n      ...emptyAddress,\n      ...this.props.defaultValue,\n    },\n  }\n\n  changeEventHandler = (key: keyof Address) => (\n    ev: React.FormEvent<HTMLInputElement>\n  ) => {\n    this.onChangeValue(key, ev.currentTarget.value)\n  }\n\n  changeValueHandler = (key: keyof Address) => (value: string) => {\n    this.onChangeValue(key, value)\n  }\n\n  onChangeValue = (key: keyof Address, value: string) => {\n    this.setState({ address: { ...this.state.address, [key]: value } }, () => {\n      this.props.onChange({ ...this.state.address }, key)\n    })\n  }\n\n  render() {\n    return (\n      <Join separator={<Spacer mb={2} />}>\n        <Flex flexDirection=\"column\">\n          <Input\n            id=\"AddressForm_name\"\n            placeholder=\"Add full name\"\n            title=\"Full name\"\n            autoCapitalize=\"words\"\n            autoCorrect=\"off\"\n            defaultValue={this.props.defaultValue.name}\n            onChange={this.changeEventHandler(\"name\")}\n            error={this.props.errors && this.props.errors.name}\n            block\n          />\n        </Flex>\n\n        <TwoColumnSplit>\n          <Flex flexDirection=\"column\" pb={1}>\n            <Serif mb={1} size=\"3t\" color=\"black100\" lineHeight={18}>\n              Country\n            </Serif>\n            <CountrySelect\n              selected={this.state.address.country}\n              onSelect={this.changeValueHandler(\"country\")}\n            />\n          </Flex>\n\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_postalCode\"\n              placeholder=\"Add postal code\"\n              title=\"Postal code\"\n              autoCapitalize=\"characters\"\n              autoCorrect=\"off\"\n              defaultValue={this.props.defaultValue.postalCode}\n              onChange={this.changeEventHandler(\"postalCode\")}\n              error={this.props.errors && this.props.errors.postalCode}\n              block\n            />\n          </Flex>\n        </TwoColumnSplit>\n        <TwoColumnSplit>\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_addressLine1\"\n              placeholder=\"Add street address\"\n              title=\"Address line 1\"\n              autoCapitalize=\"words\"\n              defaultValue={this.props.defaultValue.addressLine1}\n              onChange={this.changeEventHandler(\"addressLine1\")}\n              error={this.props.errors && this.props.errors.addressLine1}\n              block\n            />\n          </Flex>\n\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_addressLine2\"\n              placeholder=\"Add apt, floor, suite, etc.\"\n              title=\"Address line 2 (optional)\"\n              autoCapitalize=\"words\"\n              defaultValue={this.props.defaultValue.addressLine2}\n              onChange={this.changeEventHandler(\"addressLine2\")}\n              block\n            />\n          </Flex>\n        </TwoColumnSplit>\n        <TwoColumnSplit>\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_city\"\n              placeholder=\"Add city\"\n              title=\"City\"\n              autoCapitalize=\"words\"\n              defaultValue={this.props.defaultValue.city}\n              onChange={this.changeEventHandler(\"city\")}\n              error={this.props.errors && this.props.errors.city}\n              block\n            />\n          </Flex>\n\n          <Flex flexDirection=\"column\">\n            <Input\n              placeholder=\"Add State, province, or region\"\n              title=\"State, province, or region\"\n              autoCapitalize=\"words\"\n              autoCorrect=\"off\"\n              defaultValue={this.props.defaultValue.region}\n              onChange={this.changeEventHandler(\"region\")}\n              error={this.props.errors && this.props.errors.region}\n              block\n            />\n          </Flex>\n        </TwoColumnSplit>\n        {!this.props.billing && (\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_phoneNumber\"\n              title=\"Phone number\"\n              description=\"Required for shipping logistics\"\n              placeholder=\"Add phone\"\n              pattern=\"[0-9]*\"\n              defaultValue={this.props.defaultValue.phoneNumber}\n              onChange={this.changeEventHandler(\"phoneNumber\")}\n              error={this.props.errors && this.props.errors.phoneNumber}\n              block\n            />\n          </Flex>\n        )}\n      </Join>\n    )\n  }\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/ArtistFilter/Filter.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/ArtistFilter/Filter.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _unstated = require(\"unstated\");\n\nvar _Artworks = _interopRequireDefault(require(\"./Artworks\"));\n\nvar _state = require(\"./state\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"renderCurrentlySelected\",\n    value: function renderCurrentlySelected(filter, state) {\n      if ((filter === \"institution\" || filter === \"gallery\") && state.partner_id) {\n        return state.partner_id;\n      }\n\n      if (filter === \"major_period\" && state.major_periods) {\n        return state.major_periods[0];\n      }\n\n      return state[filter];\n    }\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters(filters) {\n      var _this = this;\n\n      return this.props.artist.filtered_artworks.aggregations.map(function (aggregation) {\n        return React.createElement(\"div\", null, React.createElement(\"div\", null, aggregation.slice, \" -\", \" \", _this.renderCurrentlySelected(aggregation.slice.toLowerCase(), filters.state), _this.renderSection(aggregation, filters)), React.createElement(\"br\", null));\n      });\n    }\n  }, {\n    key: \"renderForSale\",\n    value: function renderForSale(filters) {\n      return React.createElement(\"div\", null, React.createElement(\"div\", null, \"Currently selected: \", filters.state.for_sale ? \"Only for sale\" : \"All\"), React.createElement(\"div\", {\n        onClick: function onClick() {\n          filters.setFilter(\"for_sale\", true);\n        }\n      }, \"For sale\"), React.createElement(\"div\", {\n        onClick: function onClick() {\n          filters.setFilter(\"for_sale\", null);\n        }\n      }, \"All\"), React.createElement(\"br\", null));\n    }\n  }, {\n    key: \"renderSidebar\",\n    value: function renderSidebar(filters) {\n      return React.createElement(\"div\", null, this.renderForSale(filters), this.renderFilters(filters));\n    }\n  }, {\n    key: \"renderSection\",\n    value: function renderSection(aggregation, filters) {\n      return aggregation.counts.slice(0, 10).map(function (count) {\n        return React.createElement(\"div\", {\n          onClick: function onClick() {\n            filters.setFilter(aggregation.slice.toLowerCase(), count.id);\n          }\n        }, React.createElement(\"span\", null, count.name), React.createElement(\"span\", null, \"(\", count.count, \")\"));\n      });\n    }\n  }, {\n    key: \"renderArtworks\",\n    value: function renderArtworks() {\n      return React.createElement(_Artworks.default, {\n        artistID: this.props.artist.id,\n        filtered_artworks: this.props.artist.filtered_artworks\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(_unstated.Subscribe, {\n        to: [_state.FilterState]\n      }, function (filters) {\n        return React.createElement(\"div\", null, React.createElement(\"div\", {\n          style: {\n            float: \"left\"\n          }\n        }, _this2.renderSidebar(filters)), _this2.renderArtworks());\n      });\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nvar _default = (0, _reactRelay.createFragmentContainer)(Filter, {\n  artist: function artist() {\n    var node = require(\"../../__generated__/Filter_artist.graphql\");\n\n    if (node.hash && node.hash !== \"f105a92bf1f646d95599cb818d849b23\") {\n      console.error(\"The definition of 'Filter_artist' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Filter_artist.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/ArtistFilter/Filter.tsx"],"names":["Filter","filter","state","partner_id","major_periods","filters","props","artist","filtered_artworks","aggregations","map","aggregation","slice","renderCurrentlySelected","toLowerCase","renderSection","for_sale","setFilter","renderForSale","renderFilters","counts","count","id","name","float","renderSidebar","renderArtworks","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;IAQMA,M;;;;;;;;;;;;;4CACoBC,M,EAAQC,K,EAAO;AACrC,UACE,CAACD,WAAW,aAAX,IAA4BA,WAAW,SAAxC,KACAC,MAAMC,UAFR,EAGE;AACA,eAAOD,MAAMC,UAAb;AACD;;AACD,UAAIF,WAAW,cAAX,IAA6BC,MAAME,aAAvC,EAAsD;AACpD,eAAOF,MAAME,aAAN,CAAoB,CAApB,CAAP;AACD;;AACD,aAAOF,MAAMD,MAAN,CAAP;AACD;;;kCAEaI,O,EAAS;AAAA;;AACrB,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,iBAAlB,CAAoCC,YAApC,CAAiDC,GAAjD,CAAqD,uBAAe;AACzE,eACE,iCACE,iCACGC,YAAYC,KADf,QACwB,GADxB,EAEG,MAAKC,uBAAL,CACCF,YAAYC,KAAZ,CAAkBE,WAAlB,EADD,EAECT,QAAQH,KAFT,CAFH,EAMG,MAAKa,aAAL,CAAmBJ,WAAnB,EAAgCN,OAAhC,CANH,CADF,EASE,+BATF,CADF;AAaD,OAdM,CAAP;AAeD;;;kCAEaA,O,EAAS;AACrB,aACE,iCACE,yDACuBA,QAAQH,KAAR,CAAcc,QAAd,GAAyB,eAAzB,GAA2C,KADlE,CADF,EAIE;AACE,iBAAS,mBAAM;AACbX,kBAAQY,SAAR,CAAkB,UAAlB,EAA8B,IAA9B;AACD;AAHH,oBAJF,EAWE;AACE,iBAAS,mBAAM;AACbZ,kBAAQY,SAAR,CAAkB,UAAlB,EAA8B,IAA9B;AACD;AAHH,eAXF,EAkBE,+BAlBF,CADF;AAsBD;;;kCAEaZ,O,EAAS;AACrB,aACE,iCACG,KAAKa,aAAL,CAAmBb,OAAnB,CADH,EAEG,KAAKc,aAAL,CAAmBd,OAAnB,CAFH,CADF;AAMD;;;kCAEaM,W,EAAaN,O,EAAS;AAClC,aAAOM,YAAYS,MAAZ,CAAmBR,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,EAAgCF,GAAhC,CAAoC,iBAAS;AAClD,eACE;AACE,mBAAS,mBAAM;AACbL,oBAAQY,SAAR,CAAkBN,YAAYC,KAAZ,CAAkBE,WAAlB,EAAlB,EAAmDO,MAAMC,EAAzD;AACD;AAHH,WAKE,kCAAOD,MAAME,IAAb,CALF,EAME,uCAAQF,MAAMA,KAAd,MANF,CADF;AAUD,OAXM,CAAP;AAYD;;;qCAEgB;AACf,aACE;AACE,kBAAU,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,EAD9B;AAEE,2BAAmB,KAAKhB,KAAL,CAAWC,MAAX,CAAkBC;AAFvC,QADF;AAMD;;;6BAEQ;AAAA;;AACP,aACE;AAAW,YAAI;AAAf,SACG,mBAAW;AACV,eACE,iCACE;AAAK,iBAAO;AAAEgB,mBAAO;AAAT;AAAZ,WAAgC,OAAKC,aAAL,CAAmBpB,OAAnB,CAAhC,CADF,EAEG,OAAKqB,cAAL,EAFH,CADF;AAMD,OARH,CADF;AAYD;;;;EAvGkBC,MAAMC,S;;eA0GZ,yCAAwB5B,MAAxB,EAAgC;AAC7CO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAD6C,CAAhC,C","file":"/Users/eve/development/reaction/src/Components/ArtistFilter/Filter.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import * as React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Subscribe } from \"unstated\"\n\nimport ArtworksContent from \"./Artworks\"\nimport { FilterState } from \"./state\"\n\nimport { Filter_artist } from \"../../__generated__/Filter_artist.graphql\"\n\ninterface Props {\n  artist: Filter_artist\n}\n\nclass Filter extends React.Component<Props> {\n  renderCurrentlySelected(filter, state) {\n    if (\n      (filter === \"institution\" || filter === \"gallery\") &&\n      state.partner_id\n    ) {\n      return state.partner_id\n    }\n    if (filter === \"major_period\" && state.major_periods) {\n      return state.major_periods[0]\n    }\n    return state[filter]\n  }\n\n  renderFilters(filters) {\n    return this.props.artist.filtered_artworks.aggregations.map(aggregation => {\n      return (\n        <div>\n          <div>\n            {aggregation.slice} -{\" \"}\n            {this.renderCurrentlySelected(\n              aggregation.slice.toLowerCase(),\n              filters.state\n            )}\n            {this.renderSection(aggregation, filters)}\n          </div>\n          <br />\n        </div>\n      )\n    })\n  }\n\n  renderForSale(filters) {\n    return (\n      <div>\n        <div>\n          Currently selected: {filters.state.for_sale ? \"Only for sale\" : \"All\"}\n        </div>\n        <div\n          onClick={() => {\n            filters.setFilter(\"for_sale\", true)\n          }}\n        >\n          For sale\n        </div>\n        <div\n          onClick={() => {\n            filters.setFilter(\"for_sale\", null)\n          }}\n        >\n          All\n        </div>\n        <br />\n      </div>\n    )\n  }\n\n  renderSidebar(filters) {\n    return (\n      <div>\n        {this.renderForSale(filters)}\n        {this.renderFilters(filters)}\n      </div>\n    )\n  }\n\n  renderSection(aggregation, filters) {\n    return aggregation.counts.slice(0, 10).map(count => {\n      return (\n        <div\n          onClick={() => {\n            filters.setFilter(aggregation.slice.toLowerCase(), count.id)\n          }}\n        >\n          <span>{count.name}</span>\n          <span>({count.count})</span>\n        </div>\n      )\n    })\n  }\n\n  renderArtworks() {\n    return (\n      <ArtworksContent\n        artistID={this.props.artist.id}\n        filtered_artworks={this.props.artist.filtered_artworks as any}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <Subscribe to={[FilterState]}>\n        {filters => {\n          return (\n            <div>\n              <div style={{ float: \"left\" }}>{this.renderSidebar(filters)}</div>\n              {this.renderArtworks()}\n            </div>\n          )\n        }}\n      </Subscribe>\n    )\n  }\n}\n\nexport default createFragmentContainer(Filter, {\n  artist: graphql`\n    fragment Filter_artist on Artist\n      @argumentDefinitions(\n        medium: { type: \"String\", defaultValue: \"*\" }\n        major_periods: { type: \"[String]\" }\n        partner_id: { type: \"ID\" }\n        for_sale: { type: \"Boolean\" }\n        aggregations: {\n          type: \"[ArtworkAggregation]\"\n          defaultValue: [MEDIUM, TOTAL, GALLERY, INSTITUTION, MAJOR_PERIOD]\n        }\n      ) {\n      id\n      filtered_artworks(\n        aggregations: $aggregations\n        medium: $medium\n        major_periods: $major_periods\n        partner_id: $partner_id\n        for_sale: $for_sale\n        size: 0\n      ) {\n        aggregations {\n          slice\n          counts {\n            name\n            count\n            id\n          }\n        }\n        ...Artworks_filtered_artworks\n      }\n    }\n  `,\n})\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Pages/Artwork/Share.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Pages/Artwork/Share.tsx","mtime":1530027735000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Share = void 0;\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _Icon = _interopRequireDefault(require(\"../../../Components/Icon\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Flex = require(\"../../Elements/Flex\");\n\nvar _Separator = require(\"../../Elements/Separator\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n// TODO: We need to figure out if this is going to be a new re-usable panel type\n//       in which I wouldn’t want to add this into Share\nvar Container = (0, _styledComponents.default)(_Flex.Flex).withConfig({\n  displayName: \"Share__Container\",\n  componentId: \"s10hbqst-0\"\n})([\"width:300px;height:216px;border-radius:2px;background-color:#ffffff;box-shadow:0 2px 10px 0 rgba(0,0,0,0.2);\"]);\nvar SansGrow = (0, _styledComponents.default)(_palette.Sans).withConfig({\n  displayName: \"Share__SansGrow\",\n  componentId: \"s10hbqst-1\"\n})([\"display:flex;flex-grow:1;\"]);\n\nvar URLInput = _styledComponents.default.input.withConfig({\n  displayName: \"Share__URLInput\",\n  componentId: \"s10hbqst-2\"\n})([\"border:0;text-overflow:ellipsis;display:flex;flex-grow:1;color:inherit;\"]);\n\nvar Platform = function Platform(_ref) {\n  var iconName = _ref.iconName,\n      title = _ref.title;\n  return _react.default.createElement(_Flex.Flex, {\n    flexDirection: \"row\",\n    flexBasis: \"50%\"\n  }, _react.default.createElement(_Icon.default, {\n    name: iconName,\n    color: \"black\"\n  }), _react.default.createElement(_palette.Sans, {\n    size: \"3\",\n    color: \"black60\"\n  }, title));\n};\n\nvar Share =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Share, _React$Component);\n\n  function Share() {\n    var _ref2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, Share);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref2 = Share.__proto__ || Object.getPrototypeOf(Share)).call.apply(_ref2, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"input\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: void 0\n    }), Object.defineProperty(_assertThisInitialized(_this), \"selectURL\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        _this.input.focus();\n\n        _this.input.setSelectionRange(0, _this.input.value.length);\n\n        document.execCommand(\"copy\");\n      }\n    }), _temp));\n  }\n\n  _createClass(Share, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(Container, {\n        flexDirection: \"column\",\n        p: 2\n      }, _react.default.createElement(_palette.Sans, {\n        size: \"3\",\n        weight: \"medium\",\n        color: \"black100\",\n        mb: 2\n      }, \"Share\"), _react.default.createElement(_Flex.Flex, {\n        flexDirection: \"row\",\n        mb: 1\n      }, _react.default.createElement(SansGrow, {\n        size: \"2\",\n        color: \"black60\",\n        mr: 4\n      }, _react.default.createElement(URLInput, {\n        type: \"text\",\n        readOnly: true,\n        value: this.props.url,\n        innerRef: function innerRef(input) {\n          return _this2.input = input;\n        },\n        onClick: this.selectURL\n      })), _react.default.createElement(\"a\", {\n        onClick: this.selectURL\n      }, _react.default.createElement(_palette.Sans, {\n        size: \"2\",\n        weight: \"medium\",\n        color: \"black60\"\n      }, \"Copy\"))), _react.default.createElement(_Separator.Separator, null), _react.default.createElement(_Flex.Flex, {\n        flexDirection: \"row\",\n        flexWrap: true\n      }, _react.default.createElement(Platform, {\n        iconName: \"facebook\",\n        title: \"Facebook\"\n      }), _react.default.createElement(Platform, {\n        iconName: \"twitter\",\n        title: \"Twitter\"\n      }), _react.default.createElement(Platform, {\n        iconName: \"mail\",\n        title: \"Email\"\n      }), _react.default.createElement(Platform, {\n        iconName: \"pinterest\",\n        title: \"Pinterest\"\n      }), _react.default.createElement(Platform, {\n        iconName: \"tumblr\",\n        title: \"Tumblr\"\n      })));\n    }\n  }]);\n\n  return Share;\n}(_react.default.Component);\n\nexports.Share = Share;",{"version":3,"sources":["src/Styleguide/Pages/Artwork/Share.tsx"],"names":["Container","SansGrow","URLInput","input","Platform","iconName","title","Share","focus","setSelectionRange","value","length","document","execCommand","props","url","selectURL","Component"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA,IAAMA,YAAY,0CAAZ;AAAA;AAAA;AAAA,oHAAN;AAQA,IAAMC,WAAW,6CAAX;AAAA;AAAA;AAAA,iCAAN;;AAKA,IAAMC,WAAW,0BAAOC,KAAlB;AAAA;AAAA;AAAA,+EAAN;;AAQA,IAAMC,WAA6D,SAA7DA,QAA6D;AAAA,MACjEC,QADiE,QACjEA,QADiE;AAAA,MAEjEC,KAFiE,QAEjEA,KAFiE;AAAA,SAIjE;AAAM,mBAAc,KAApB;AAA0B,eAAU;AAApC,KACE;AAAM,UAAMD,QAAZ;AAAsB,WAAM;AAA5B,IADF,EAEE;AAAM,UAAK,GAAX;AAAe,WAAM;AAArB,KACGC,KADH,CAFF,CAJiE;AAAA,CAAnE;;IAYaC,K;;;;;;;;;;;;;;;;;;;;;;;;;aAGC,iBAAM;AAChB,cAAKJ,KAAL,CAAWK,KAAX;;AACA,cAAKL,KAAL,CAAWM,iBAAX,CAA6B,CAA7B,EAAgC,MAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjD;;AACAC,iBAASC,WAAT,CAAqB,MAArB;AACD;;;;;;6BAEQ;AAAA;;AACP,aACE,6BAAC,SAAD;AAAW,uBAAc,QAAzB;AAAkC,WAAG;AAArC,SACE;AAAM,cAAK,GAAX;AAAe,gBAAO,QAAtB;AAA+B,eAAM,UAArC;AAAgD,YAAI;AAApD,iBADF,EAIE;AAAM,uBAAc,KAApB;AAA0B,YAAI;AAA9B,SACE,6BAAC,QAAD;AAAU,cAAK,GAAf;AAAmB,eAAM,SAAzB;AAAmC,YAAI;AAAvC,SACE,6BAAC,QAAD;AACE,cAAK,MADP;AAEE,sBAFF;AAGE,eAAO,KAAKC,KAAL,CAAWC,GAHpB;AAIE,kBAAU;AAAA,iBAAU,OAAKZ,KAAL,GAAaA,KAAvB;AAAA,SAJZ;AAKE,iBAAS,KAAKa;AALhB,QADF,CADF,EAUE;AAAG,iBAAS,KAAKA;AAAjB,SACE;AAAM,cAAK,GAAX;AAAe,gBAAO,QAAtB;AAA+B,eAAM;AAArC,gBADF,CAVF,CAJF,EAoBE,wDApBF,EAqBE;AAAM,uBAAc,KAApB;AAA0B;AAA1B,SACE,6BAAC,QAAD;AAAU,kBAAS,UAAnB;AAA8B,eAAM;AAApC,QADF,EAEE,6BAAC,QAAD;AAAU,kBAAS,SAAnB;AAA6B,eAAM;AAAnC,QAFF,EAGE,6BAAC,QAAD;AAAU,kBAAS,MAAnB;AAA0B,eAAM;AAAhC,QAHF,EAIE,6BAAC,QAAD;AAAU,kBAAS,WAAnB;AAA+B,eAAM;AAArC,QAJF,EAKE,6BAAC,QAAD;AAAU,kBAAS,QAAnB;AAA4B,eAAM;AAAlC,QALF,CArBF,CADF;AA+BD;;;;EAzCwB,eAAMC,S","file":"/Users/eve/development/reaction/src/Styleguide/Pages/Artwork/Share.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { Sans } from \"@artsy/palette\"\nimport { IconName } from \"Assets/Icons\"\nimport Icon from \"Components/Icon\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Flex } from \"../../Elements/Flex\"\nimport { Separator } from \"../../Elements/Separator\"\n\ninterface ShareProps {\n  url: string\n}\n\n// TODO: We need to figure out if this is going to be a new re-usable panel type\n//       in which I wouldn’t want to add this into Share\nconst Container = styled(Flex)`\n  width: 300px;\n  height: 216px;\n  border-radius: 2px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.2);\n`\n\nconst SansGrow = styled(Sans)`\n  display: flex;\n  flex-grow: 1;\n`\n\nconst URLInput = styled.input`\n  border: 0;\n  text-overflow: ellipsis;\n  display: flex;\n  flex-grow: 1;\n  color: inherit;\n`\n\nconst Platform: React.SFC<{ iconName: IconName; title: string }> = ({\n  iconName,\n  title,\n}) => (\n  <Flex flexDirection=\"row\" flexBasis=\"50%\">\n    <Icon name={iconName} color=\"black\" />\n    <Sans size=\"3\" color=\"black60\">\n      {title}\n    </Sans>\n  </Flex>\n)\n\nexport class Share extends React.Component<ShareProps> {\n  private input: HTMLInputElement\n\n  selectURL = () => {\n    this.input.focus()\n    this.input.setSelectionRange(0, this.input.value.length)\n    document.execCommand(\"copy\")\n  }\n\n  render() {\n    return (\n      <Container flexDirection=\"column\" p={2}>\n        <Sans size=\"3\" weight=\"medium\" color=\"black100\" mb={2}>\n          Share\n        </Sans>\n        <Flex flexDirection=\"row\" mb={1}>\n          <SansGrow size=\"2\" color=\"black60\" mr={4}>\n            <URLInput\n              type=\"text\"\n              readOnly\n              value={this.props.url}\n              innerRef={input => (this.input = input)}\n              onClick={this.selectURL}\n            />\n          </SansGrow>\n          <a onClick={this.selectURL}>\n            <Sans size=\"2\" weight=\"medium\" color=\"black60\">\n              Copy\n            </Sans>\n          </a>\n        </Flex>\n        <Separator />\n        <Flex flexDirection=\"row\" flexWrap>\n          <Platform iconName=\"facebook\" title=\"Facebook\" />\n          <Platform iconName=\"twitter\" title=\"Twitter\" />\n          <Platform iconName=\"mail\" title=\"Email\" />\n          <Platform iconName=\"pinterest\" title=\"Pinterest\" />\n          <Platform iconName=\"tumblr\" title=\"Tumblr\" />\n        </Flex>\n      </Container>\n    )\n  }\n}\n"]}]}
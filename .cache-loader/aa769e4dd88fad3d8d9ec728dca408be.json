{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/Shows/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/Shows/index.tsx","mtime":1530111312000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShowsRouteFragmentContainer = exports.ShowsRoute = void 0;\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _Separator = require(\"../../../../Elements/Separator\");\n\nvar _Spacer = require(\"../../../../Elements/Spacer\");\n\nvar _Responsive = require(\"../../../../Utils/Responsive\");\n\nvar _ShowsRefetchContainer = require(\"./ShowsRefetchContainer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ShowsRoute = function ShowsRoute(props) {\n  var viewer = props.viewer;\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_palette.Sans, {\n    size: \"3\",\n    weight: \"medium\"\n  }, \"Currently on view\"), _react.default.createElement(_Spacer.Spacer, {\n    mb: 2\n  }), _react.default.createElement(_ShowsRefetchContainer.ShowsRefetchContainer, {\n    sort: \"end_at_asc\",\n    status: \"running\",\n    artist: viewer.artist_currentShows,\n    scrollTo: \"#jumpto-RouteTabs\"\n  }), _react.default.createElement(_Spacer.Spacer, {\n    my: 4,\n    id: \"jumpto-Shows-Upcoming\"\n  }), _react.default.createElement(_palette.Sans, {\n    size: \"3\",\n    weight: \"medium\"\n  }, \"Upcoming\"), _react.default.createElement(ShowDivider, null), _react.default.createElement(_ShowsRefetchContainer.ShowsRefetchContainer, {\n    sort: \"start_at_asc\",\n    status: \"upcoming\",\n    artist: viewer.artist_upcomingShows,\n    scrollTo: \"#jumpto-Shows-Upcoming\"\n  }), _react.default.createElement(_Spacer.Spacer, {\n    my: 4,\n    id: \"jumpto-Shows-Past\"\n  }), _react.default.createElement(_palette.Sans, {\n    size: \"3\",\n    weight: \"medium\"\n  }, \"Past\"), _react.default.createElement(ShowDivider, null), _react.default.createElement(_ShowsRefetchContainer.ShowsRefetchContainer, {\n    sort: \"end_at_desc\",\n    status: \"closed\",\n    artist: viewer.artist_pastShows,\n    scrollTo: \"#jumpto-Shows-Past\"\n  }));\n};\n\nexports.ShowsRoute = ShowsRoute;\n\nvar ShowDivider = function ShowDivider() {\n  return _react.default.createElement(_Responsive.Responsive, null, function (_ref) {\n    var xs = _ref.xs;\n    return _react.default.createElement(\"div\", null, _react.default.createElement(_Spacer.Spacer, {\n      my: 1\n    }), _react.default.createElement(_Separator.Separator, null), _react.default.createElement(_Spacer.Spacer, {\n      py: xs ? 0 : 1\n    }));\n  });\n};\n\nvar ShowsRouteFragmentContainer = (0, _reactRelay.createFragmentContainer)(ShowsRoute, {\n  viewer: function viewer() {\n    var node = require(\"../../../../../__generated__/Shows_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"a179b73c9c4a0daa2603c14f781199ec\") {\n      console.error(\"The definition of 'Shows_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../../__generated__/Shows_viewer.graphql\");\n  }\n});\nexports.ShowsRouteFragmentContainer = ShowsRouteFragmentContainer;",{"version":3,"sources":["src/Styleguide/Pages/Artist/Routes/Shows/index.tsx"],"names":["ShowsRoute","props","viewer","artist_currentShows","artist_upcomingShows","artist_pastShows","ShowDivider","xs","ShowsRouteFragmentContainer"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAKO,IAAMA,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAsB;AAAA,MACtCC,MADsC,GAC3BD,KAD2B,CACtCC,MADsC;AAE9C,SACE,4CAAO,QAAP,QACE;AAAM,UAAK,GAAX;AAAe,YAAO;AAAtB,yBADF,EAKE;AAAQ,QAAI;AAAZ,IALF,EAOE;AACE,UAAK,YADP;AAEE,YAAO,SAFT;AAGE,YAAQA,OAAOC,mBAHjB;AAIE,cAAS;AAJX,IAPF,EAcE;AAAQ,QAAI,CAAZ;AAAe,QAAG;AAAlB,IAdF,EAgBE;AAAM,UAAK,GAAX;AAAe,YAAO;AAAtB,gBAhBF,EAoBE,6BAAC,WAAD,OApBF,EAsBE;AACE,UAAK,cADP;AAEE,YAAO,UAFT;AAGE,YAAQD,OAAOE,oBAHjB;AAIE,cAAS;AAJX,IAtBF,EA6BE;AAAQ,QAAI,CAAZ;AAAe,QAAG;AAAlB,IA7BF,EA8BE;AAAM,UAAK,GAAX;AAAe,YAAO;AAAtB,YA9BF,EAkCE,6BAAC,WAAD,OAlCF,EAoCE;AACE,UAAK,aADP;AAEE,YAAO,QAFT;AAGE,YAAQF,OAAOG,gBAHjB;AAIE,cAAS;AAJX,IApCF,CADF;AA6CD,CA/CM;;;;AAiDP,IAAMC,cAAc,SAAdA,WAAc,GAAM;AACxB,SACE,2DACG,gBAAY;AAAA,QAATC,EAAS,QAATA,EAAS;AACX,WACE,0CACE;AAAQ,UAAI;AAAZ,MADF,EAEE,wDAFF,EAGE;AAAQ,UAAIA,KAAK,CAAL,GAAS;AAArB,MAHF,CADF;AAOD,GATH,CADF;AAaD,CAdD;;AAgBO,IAAMC,8BAA8B,yCACzCR,UADyC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAApC","file":"/Users/eve/development/reaction/src/Styleguide/Pages/Artist/Routes/Shows/index.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import { Sans } from \"@artsy/palette\"\nimport { Shows_viewer } from \"__generated__/Shows_viewer.graphql\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Separator } from \"Styleguide/Elements/Separator\"\nimport { Spacer } from \"Styleguide/Elements/Spacer\"\nimport { Responsive } from \"Styleguide/Utils/Responsive\"\nimport { ShowsRefetchContainer as Shows } from \"./ShowsRefetchContainer\"\n\nexport interface ShowProps {\n  viewer: Shows_viewer\n}\nexport const ShowsRoute = (props: ShowProps) => {\n  const { viewer } = props\n  return (\n    <React.Fragment>\n      <Sans size=\"3\" weight=\"medium\">\n        Currently on view\n      </Sans>\n\n      <Spacer mb={2} />\n\n      <Shows\n        sort=\"end_at_asc\"\n        status=\"running\"\n        artist={viewer.artist_currentShows as any}\n        scrollTo=\"#jumpto-RouteTabs\"\n      />\n\n      <Spacer my={4} id=\"jumpto-Shows-Upcoming\" />\n\n      <Sans size=\"3\" weight=\"medium\">\n        Upcoming\n      </Sans>\n\n      <ShowDivider />\n\n      <Shows\n        sort=\"start_at_asc\"\n        status=\"upcoming\"\n        artist={viewer.artist_upcomingShows as any}\n        scrollTo=\"#jumpto-Shows-Upcoming\"\n      />\n\n      <Spacer my={4} id=\"jumpto-Shows-Past\" />\n      <Sans size=\"3\" weight=\"medium\">\n        Past\n      </Sans>\n\n      <ShowDivider />\n\n      <Shows\n        sort=\"end_at_desc\"\n        status=\"closed\"\n        artist={viewer.artist_pastShows as any}\n        scrollTo=\"#jumpto-Shows-Past\"\n      />\n    </React.Fragment>\n  )\n}\n\nconst ShowDivider = () => {\n  return (\n    <Responsive>\n      {({ xs }) => {\n        return (\n          <div>\n            <Spacer my={1} />\n            <Separator />\n            <Spacer py={xs ? 0 : 1} />\n          </div>\n        )\n      }}\n    </Responsive>\n  )\n}\n\nexport const ShowsRouteFragmentContainer = createFragmentContainer(\n  ShowsRoute,\n  graphql`\n    fragment Shows_viewer on Viewer\n      @argumentDefinitions(\n        currentShowsStatus: { type: \"String\", defaultValue: \"running\" }\n        currentShowsSort: {\n          type: \"PartnerShowSorts\"\n          defaultValue: \"end_at_asc\"\n        }\n        upcomingShowsStatus: { type: \"String\", defaultValue: \"upcoming\" }\n        upcomingShowsSort: {\n          type: \"PartnerShowSorts\"\n          defaultValue: \"start_at_asc\"\n        }\n        pastShowsStatus: { type: \"String\", defaultValue: \"closed\" }\n        pastShowsSort: { type: \"PartnerShowSorts\", defaultValue: \"end_at_desc\" }\n      ) {\n      artist_currentShows: artist(id: $artistID) {\n        ...ShowsRefetchContainer_artist\n          @arguments(sort: $currentShowsSort, status: $currentShowsStatus)\n      }\n      artist_upcomingShows: artist(id: $artistID) {\n        ...ShowsRefetchContainer_artist\n          @arguments(sort: $upcomingShowsSort, status: $upcomingShowsStatus)\n      }\n      artist_pastShows: artist(id: $artistID) {\n        ...ShowsRefetchContainer_artist\n          @arguments(sort: $pastShowsSort, status: $pastShowsStatus)\n      }\n    }\n  `\n)\n"]}]}
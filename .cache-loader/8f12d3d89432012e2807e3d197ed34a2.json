{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Authentication/Desktop/SignUpForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/SignUpForm.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Formik } from \"formik\";\nimport React, { Component } from \"react\";\nimport { Error, Footer, FormContainer as Form, SubmitButton, TermsOfServiceCheckbox } from \"../commonElements\";\nimport { ModalType } from \"../Types\";\nimport { SignUpValidator } from \"../Validators\";\nimport Input from \"../../Input\";\nexport var SignUpForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpForm, _Component);\n\n  function SignUpForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUpForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUpForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      error: _this.props.error\n    });\n\n    return _this;\n  }\n\n  _createClass(SignUpForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Formik, {\n        initialValues: this.props.values,\n        onSubmit: this.props.handleSubmit,\n        validationSchema: SignUpValidator\n      }, function (_ref) {\n        var values = _ref.values,\n            errors = _ref.errors,\n            touched = _ref.touched,\n            formikHandleChange = _ref.handleChange,\n            handleBlur = _ref.handleBlur,\n            handleSubmit = _ref.handleSubmit,\n            isSubmitting = _ref.isSubmitting,\n            status = _ref.status,\n            setStatus = _ref.setStatus,\n            setTouched = _ref.setTouched;\n\n        var handleChange = function handleChange(e) {\n          setStatus(null);\n\n          _this2.setState({\n            error: null\n          });\n\n          formikHandleChange(e);\n        };\n\n        return React.createElement(Form, {\n          onSubmit: handleSubmit,\n          height: 430\n        }, React.createElement(Input, {\n          block: true,\n          quick: true,\n          error: touched.email && errors.email,\n          placeholder: \"Enter your email address\",\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }), React.createElement(Input, {\n          block: true,\n          quick: true,\n          error: touched.password && errors.password,\n          placeholder: \"Enter a password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          showPasswordMessage: true\n        }), React.createElement(Input, {\n          block: true,\n          quick: true,\n          error: touched.name && errors.name,\n          placeholder: \"Enter your full name\",\n          name: \"name\",\n          label: \"Name\",\n          type: \"text\",\n          value: values.name,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }), React.createElement(TermsOfServiceCheckbox, {\n          error: touched.accepted_terms_of_service && errors.accepted_terms_of_service,\n          checked: values.accepted_terms_of_service,\n          value: values.accepted_terms_of_service,\n          type: \"checkbox\",\n          name: \"accepted_terms_of_service\",\n          onChange: handleChange,\n          onBlur: handleBlur\n        }), status && !status.success && React.createElement(Error, {\n          show: true\n        }, status.error), React.createElement(SubmitButton, {\n          loading: isSubmitting\n        }, \"Sign up\"), React.createElement(Footer, {\n          handleTypeChange: function handleTypeChange() {\n            return _this2.props.handleTypeChange(ModalType.login);\n          },\n          onFacebookLogin: function onFacebookLogin(e) {\n            if (!values.accepted_terms_of_service) {\n              setTouched({\n                accepted_terms_of_service: true\n              });\n            } else {\n              _this2.props.onFacebookLogin(e);\n            }\n          },\n          onTwitterLogin: _this2.props.onTwitterLogin,\n          inline: true\n        }));\n      });\n    }\n  }]);\n\n  return SignUpForm;\n}(Component);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Authentication/Desktop/SignUpForm.tsx"],"names":["Formik","React","Component","Error","Footer","FormContainer","Form","SubmitButton","TermsOfServiceCheckbox","ModalType","SignUpValidator","Input","SignUpForm","error","props","values","handleSubmit","errors","touched","formikHandleChange","handleChange","handleBlur","isSubmitting","status","setStatus","setTouched","e","setState","email","password","name","accepted_terms_of_service","success","handleTypeChange","login","onFacebookLogin","onTwitterLogin"],"mappings":"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","sourcesContent":["import { Formik, FormikProps } from \"formik\"\nimport React, { Component } from \"react\"\n\nimport {\n  Error,\n  Footer,\n  FormContainer as Form,\n  SubmitButton,\n  TermsOfServiceCheckbox,\n} from \"Components/Authentication/commonElements\"\nimport {\n  FormProps,\n  InputValues,\n  ModalType,\n} from \"Components/Authentication/Types\"\nimport { SignUpValidator } from \"Components/Authentication/Validators\"\nimport Input from \"Components/Input\"\n\nexport interface SignUpFormState {\n  error?: string\n}\n\nexport class SignUpForm extends Component<FormProps, SignUpFormState> {\n  state = {\n    error: this.props.error,\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.props.values}\n        onSubmit={this.props.handleSubmit}\n        validationSchema={SignUpValidator}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange: formikHandleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          status,\n          setStatus,\n          setTouched,\n        }: FormikProps<InputValues>) => {\n          const handleChange = e => {\n            setStatus(null)\n            this.setState({ error: null })\n            formikHandleChange(e)\n          }\n\n          return (\n            <Form onSubmit={handleSubmit} height={430}>\n              <Input\n                block\n                quick\n                error={touched.email && errors.email}\n                placeholder=\"Enter your email address\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <Input\n                block\n                quick\n                error={touched.password && errors.password}\n                placeholder=\"Enter a password\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                showPasswordMessage\n              />\n              <Input\n                block\n                quick\n                error={touched.name && errors.name}\n                placeholder=\"Enter your full name\"\n                name=\"name\"\n                label=\"Name\"\n                type=\"text\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <TermsOfServiceCheckbox\n                error={\n                  touched.accepted_terms_of_service &&\n                  errors.accepted_terms_of_service\n                }\n                checked={values.accepted_terms_of_service}\n                value={values.accepted_terms_of_service}\n                type=\"checkbox\"\n                name=\"accepted_terms_of_service\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {status && !status.success && <Error show>{status.error}</Error>}\n              <SubmitButton loading={isSubmitting}>Sign up</SubmitButton>\n              <Footer\n                handleTypeChange={() =>\n                  this.props.handleTypeChange(ModalType.login)\n                }\n                onFacebookLogin={e => {\n                  if (!values.accepted_terms_of_service) {\n                    setTouched({\n                      accepted_terms_of_service: true,\n                    })\n                  } else {\n                    this.props.onFacebookLogin(e)\n                  }\n                }}\n                onTwitterLogin={this.props.onTwitterLogin}\n                inline\n              />\n            </Form>\n          )\n        }}\n      </Formik>\n    )\n  }\n}\n"]}]}
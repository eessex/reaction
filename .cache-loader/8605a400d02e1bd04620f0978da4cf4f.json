{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/ArtworkFilter/Headline.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/ArtworkFilter/Headline.tsx","mtime":1524678459000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Headline = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _Fonts = require(\"../../Assets/Fonts\");\n\nvar _lodash = require(\"lodash\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Headline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Headline, _React$Component);\n\n  function Headline() {\n    _classCallCheck(this, Headline);\n\n    return _possibleConstructorReturn(this, (Headline.__proto__ || Object.getPrototypeOf(Headline)).apply(this, arguments));\n  }\n\n  _createClass(Headline, [{\n    key: \"getCountName\",\n    value: function getCountName(aggregation, id) {\n      var selectedAggregation = (0, _lodash.find)(this.props.aggregations, function (agg) {\n        return agg.slice === aggregation.toUpperCase();\n      });\n      var selectedCount = (0, _lodash.find)(selectedAggregation.counts, function (count) {\n        return count.id === id;\n      });\n      return selectedCount ? selectedCount.name : null;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      var dimension_range = this.props.dimension_range;\n\n      if (dimension_range && dimension_range !== \"*\") {\n        return this.getCountName(\"dimension_range\", dimension_range);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"medium\",\n    value: function medium() {\n      var _props = this.props,\n          medium = _props.medium,\n          facet = _props.facet;\n\n      if (medium && medium !== \"*\") {\n        return this.getCountName(\"medium\", medium);\n      }\n\n      if (facet && facet.name) {\n        return facet.name;\n      }\n\n      return \"Works\";\n    }\n  }, {\n    key: \"priceRange\",\n    value: function priceRange() {\n      var price_range = this.props.price_range;\n\n      if (price_range && price_range !== \"*\") {\n        return this.getCountName(\"price_range\", price_range);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"forSale\",\n    value: function forSale() {\n      if (this.props.for_sale) {\n        return \"For Sale\";\n      }\n\n      return false;\n    }\n  }, {\n    key: \"renderHeadline\",\n    value: function renderHeadline() {\n      var headline = (0, _lodash.compact)([this.size(), this.medium(), this.priceRange(), this.forSale()]).join(\" \");\n\n      if (headline === \"works\") {\n        return \"Artworks\";\n      }\n\n      return headline.charAt(0).toUpperCase() + headline.substr(1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"h1\", {\n        className: this.props.className\n      }, this.renderHeadline());\n    }\n  }]);\n\n  return Headline;\n}(_react.default.Component);\n\nexports.Headline = Headline;\nvar StyledHeadline =\n/*#__PURE__*/\n(0, _styledComponents.default)(Headline).withConfig({\n  displayName: \"Headline__StyledHeadline\",\n  componentId: \"s1yjjkky-0\"\n})([\"\", \";font-weight:normal;margin:0;font-size:2em;\"], (0, _Fonts.garamond)(\"s11\"));\n\nvar _default = (0, _reactRelay.createFragmentContainer)(StyledHeadline, {\n  facet: function facet() {\n    var node = require(\"../../__generated__/Headline_facet.graphql\");\n\n    if (node.hash && node.hash !== \"fe0e6f752ce23f2a03e177de220f2ed6\") {\n      console.error(\"The definition of 'Headline_facet' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Headline_facet.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/ArtworkFilter/Headline.tsx"],"names":["Headline","aggregation","id","selectedAggregation","props","aggregations","agg","slice","toUpperCase","selectedCount","counts","count","name","dimension_range","getCountName","medium","facet","price_range","for_sale","headline","size","priceRange","forSale","join","charAt","substr","className","renderHeadline","Component","StyledHeadline"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;IAWaA,Q;;;;;;;;;;;;;iCACEC,W,EAAaC,E,EAAI;AAC5B,UAAMC,sBAAsB,kBAC1B,KAAKC,KAAL,CAAWC,YADe,EAE1B;AAAA,eAAOC,IAAIC,KAAJ,KAAcN,YAAYO,WAAZ,EAArB;AAAA,OAF0B,CAA5B;AAIA,UAAMC,gBAAgB,kBACpBN,oBAAoBO,MADA,EAEpB;AAAA,eAASC,MAAMT,EAAN,KAAaA,EAAtB;AAAA,OAFoB,CAAtB;AAIA,aAAOO,gBAAgBA,cAAcG,IAA9B,GAAqC,IAA5C;AACD;;;2BAEM;AAAA,UACGC,eADH,GACuB,KAAKT,KAD5B,CACGS,eADH;;AAGL,UAAIA,mBAAmBA,oBAAoB,GAA3C,EAAgD;AAC9C,eAAO,KAAKC,YAAL,CAAkB,iBAAlB,EAAqCD,eAArC,CAAP;AACD;;AACD,aAAO,KAAP;AACD;;;6BAEQ;AAAA,mBACmB,KAAKT,KADxB;AAAA,UACCW,MADD,UACCA,MADD;AAAA,UACSC,KADT,UACSA,KADT;;AAEP,UAAID,UAAUA,WAAW,GAAzB,EAA8B;AAC5B,eAAO,KAAKD,YAAL,CAAkB,QAAlB,EAA4BC,MAA5B,CAAP;AACD;;AAED,UAAIC,SAASA,MAAMJ,IAAnB,EAAyB;AACvB,eAAOI,MAAMJ,IAAb;AACD;;AAED,aAAO,OAAP;AACD;;;iCAEY;AAAA,UACHK,WADG,GACa,KAAKb,KADlB,CACHa,WADG;;AAGX,UAAIA,eAAeA,gBAAgB,GAAnC,EAAwC;AACtC,eAAO,KAAKH,YAAL,CAAkB,aAAlB,EAAiCG,WAAjC,CAAP;AACD;;AACD,aAAO,KAAP;AACD;;;8BAES;AACR,UAAI,KAAKb,KAAL,CAAWc,QAAf,EAAyB;AACvB,eAAO,UAAP;AACD;;AACD,aAAO,KAAP;AACD;;;qCAEgB;AACf,UAAMC,WAAW,qBAAQ,CACvB,KAAKC,IAAL,EADuB,EAEvB,KAAKL,MAAL,EAFuB,EAGvB,KAAKM,UAAL,EAHuB,EAIvB,KAAKC,OAAL,EAJuB,CAAR,EAKdC,IALc,CAKT,GALS,CAAjB;;AAMA,UAAIJ,aAAa,OAAjB,EAA0B;AACxB,eAAO,UAAP;AACD;;AACD,aAAOA,SAASK,MAAT,CAAgB,CAAhB,EAAmBhB,WAAnB,KAAmCW,SAASM,MAAT,CAAgB,CAAhB,CAA1C;AACD;;;6BAEQ;AACP,aAAO;AAAI,mBAAW,KAAKrB,KAAL,CAAWsB;AAA1B,SAAsC,KAAKC,cAAL,EAAtC,CAAP;AACD;;;;EAlE2B,eAAMC,S;;;AAqEpC,IAAMC;AAAA;AAAiB,+BAAO7B,QAAP,CAAjB;AAAA;AAAA;AAAA,wDACF,qBAAS,KAAT,CADE,CAAN;;eAOe,yCACb6B,cADa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,E","file":"/Users/eve/development/reaction/src/Components/ArtworkFilter/Headline.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { garamond } from \"Assets/Fonts\"\nimport { compact, find } from \"lodash\"\nimport styled from \"styled-components\"\n\ninterface Props extends React.HTMLProps<Headline> {\n  aggregations?: any\n  medium: string\n  price_range: string\n  dimension_range: string\n  for_sale: boolean\n  facet?: any\n}\n\nexport class Headline extends React.Component<Props, null> {\n  getCountName(aggregation, id) {\n    const selectedAggregation = find(\n      this.props.aggregations,\n      agg => agg.slice === aggregation.toUpperCase()\n    )\n    const selectedCount = find(\n      selectedAggregation.counts,\n      count => count.id === id\n    )\n    return selectedCount ? selectedCount.name : null\n  }\n\n  size() {\n    const { dimension_range } = this.props\n\n    if (dimension_range && dimension_range !== \"*\") {\n      return this.getCountName(\"dimension_range\", dimension_range)\n    }\n    return false\n  }\n\n  medium() {\n    const { medium, facet } = this.props\n    if (medium && medium !== \"*\") {\n      return this.getCountName(\"medium\", medium)\n    }\n\n    if (facet && facet.name) {\n      return facet.name\n    }\n\n    return \"Works\"\n  }\n\n  priceRange() {\n    const { price_range } = this.props\n\n    if (price_range && price_range !== \"*\") {\n      return this.getCountName(\"price_range\", price_range)\n    }\n    return false\n  }\n\n  forSale() {\n    if (this.props.for_sale) {\n      return \"For Sale\"\n    }\n    return false\n  }\n\n  renderHeadline() {\n    const headline = compact([\n      this.size(),\n      this.medium(),\n      this.priceRange(),\n      this.forSale(),\n    ]).join(\" \")\n    if (headline === \"works\") {\n      return \"Artworks\"\n    }\n    return headline.charAt(0).toUpperCase() + headline.substr(1)\n  }\n\n  render() {\n    return <h1 className={this.props.className}>{this.renderHeadline()}</h1>\n  }\n}\n\nconst StyledHeadline = styled(Headline)`\n  ${garamond(\"s11\")};\n  font-weight: normal;\n  margin: 0;\n  font-size: 2em;\n`\n\nexport default createFragmentContainer(\n  StyledHeadline,\n  graphql`\n    fragment Headline_facet on ArtworkFilterFacet {\n      ... on ArtworkFilterTag {\n        name\n      }\n      ... on ArtworkFilterGene {\n        name\n      }\n    }\n  `\n)\n"]}]}
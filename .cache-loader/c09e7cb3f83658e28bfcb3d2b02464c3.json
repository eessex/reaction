{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Authentication/Mobile/ResetPasswordForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Mobile/ResetPasswordForm.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MobileResetPasswordForm = void 0;\n\nvar _commonElements = require(\"../commonElements\");\n\nvar _Input = _interopRequireDefault(require(\"../../Input\"));\n\nvar _formik = require(\"formik\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Validators = require(\"../Validators\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MobileResetPasswordForm = function MobileResetPasswordForm(props) {\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: props.values,\n    onSubmit: props.handleSubmit,\n    validationSchema: _Validators.ResetPasswordValidator\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting,\n        isValid = _ref.isValid,\n        status = _ref.status;\n    return _react.default.createElement(_commonElements.MobileContainer, null, _react.default.createElement(_commonElements.MobileInnerWrapper, null, _react.default.createElement(_commonElements.FormContainer, {\n      onSubmit: handleSubmit,\n      height: 270\n    }, _react.default.createElement(_commonElements.MobileHeader, null, \"Reset your password\"), _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: errors.email,\n      placeholder: \"Enter your email address\",\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), status && !status.success && _react.default.createElement(_commonElements.Error, {\n      show: true\n    }, status.error), _react.default.createElement(_commonElements.MobileSubmitButton, {\n      disabled: isSubmitting\n    }, \"Next\"), _react.default.createElement(_commonElements.Footer, {\n      handleTypeChange: function handleTypeChange(type) {\n        return window.location.href = \"/\" + type;\n      },\n      mode: \"reset_password\"\n    }))));\n  });\n};\n\nexports.MobileResetPasswordForm = MobileResetPasswordForm;",{"version":3,"sources":["src/Components/Authentication/Mobile/ResetPasswordForm.tsx"],"names":["MobileResetPasswordForm","props","values","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","isValid","status","email","success","error","window","location","href","type"],"mappings":";;;;;;;AAAA;;AASA;;AACA;;AACA;;AAEA;;;;AAEO,IAAMA,0BAA6C,SAA7CA,uBAA6C,QAAS;AACjE,SACE;AACE,mBAAeC,MAAMC,MADvB;AAEE,cAAUD,MAAME,YAFlB;AAGE;AAHF,KAKG,gBAU+B;AAAA,QAT9BD,MAS8B,QAT9BA,MAS8B;AAAA,QAR9BE,MAQ8B,QAR9BA,MAQ8B;AAAA,QAP9BC,OAO8B,QAP9BA,OAO8B;AAAA,QAN9BC,YAM8B,QAN9BA,YAM8B;AAAA,QAL9BC,UAK8B,QAL9BA,UAK8B;AAAA,QAJ9BJ,YAI8B,QAJ9BA,YAI8B;AAAA,QAH9BK,YAG8B,QAH9BA,YAG8B;AAAA,QAF9BC,OAE8B,QAF9BA,OAE8B;AAAA,QAD9BC,MAC8B,QAD9BA,MAC8B;AAC9B,WACE,oEACE,uEACE;AAAM,gBAAUP,YAAhB;AAA8B,cAAQ;AAAtC,OACE,uFADF,EAEE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOC,OAAOO,KAHhB;AAIE,mBAAY,0BAJd;AAKE,YAAK,OALP;AAME,aAAM,OANR;AAOE,YAAK,OAPP;AAQE,aAAOT,OAAOS,KARhB;AASE,gBAAUL,YATZ;AAUE,cAAQC;AAVV,MAFF,EAcGG,UACC,CAACA,OAAOE,OADT,IACoB;AAAO;AAAP,OAAaF,OAAOG,KAApB,CAfvB,EAgBE;AAAoB,gBAAUL;AAA9B,cAhBF,EAmBE;AACE,wBAAkB;AAAA,eAASM,OAAOC,QAAP,CAAgBC,IAAhB,GAAuB,MAAMC,IAAtC;AAAA,OADpB;AAEE,YAAK;AAFP,MAnBF,CADF,CADF,CADF;AA8BD,GA9CH,CADF;AAkDD,CAnDM","file":"/Users/eve/development/reaction/src/Components/Authentication/Mobile/ResetPasswordForm.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import {\n  Error,\n  Footer,\n  FormContainer as Form,\n  MobileContainer,\n  MobileHeader,\n  MobileInnerWrapper,\n  MobileSubmitButton,\n} from \"Components/Authentication/commonElements\"\nimport Input from \"Components/Input\"\nimport { Formik, FormikProps } from \"formik\"\nimport React from \"react\"\nimport { FormComponentType, InputValues } from \"../Types\"\nimport { ResetPasswordValidator } from \"../Validators\"\n\nexport const MobileResetPasswordForm: FormComponentType = props => {\n  return (\n    <Formik\n      initialValues={props.values}\n      onSubmit={props.handleSubmit}\n      validationSchema={ResetPasswordValidator}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        isValid,\n        status,\n      }: FormikProps<InputValues>) => {\n        return (\n          <MobileContainer>\n            <MobileInnerWrapper>\n              <Form onSubmit={handleSubmit} height={270}>\n                <MobileHeader>Reset your password</MobileHeader>\n                <Input\n                  block\n                  quick\n                  error={errors.email}\n                  placeholder=\"Enter your email address\"\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {status &&\n                  !status.success && <Error show>{status.error}</Error>}\n                <MobileSubmitButton disabled={isSubmitting}>\n                  Next\n                </MobileSubmitButton>\n                <Footer\n                  handleTypeChange={type => (window.location.href = \"/\" + type)}\n                  mode=\"reset_password\"\n                />\n              </Form>\n            </MobileInnerWrapper>\n          </MobileContainer>\n        )\n      }}\n    </Formik>\n  )\n}\n"]}]}
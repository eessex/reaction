{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Router/buildClientApp.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Router/buildClientApp.tsx","mtime":1534252031000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1532461619000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildClientApp = buildClientApp;\n\nvar _BrowserProtocol = _interopRequireDefault(require(\"farce/lib/BrowserProtocol\"));\n\nvar _HashProtocol = _interopRequireDefault(require(\"farce/lib/HashProtocol\"));\n\nvar _MemoryProtocol = _interopRequireDefault(require(\"farce/lib/MemoryProtocol\"));\n\nvar _queryMiddleware = _interopRequireDefault(require(\"farce/lib/queryMiddleware\"));\n\nvar _foundRelay = require(\"found-relay\");\n\nvar _createInitialFarceRouter = _interopRequireDefault(require(\"found/lib/createInitialFarceRouter\"));\n\nvar _createRender = _interopRequireDefault(require(\"found/lib/createRender\"));\n\nvar _loadableComponents = require(\"loadable-components\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createEnvironment = require(\"../Relay/createEnvironment\");\n\nvar _AppShell = require(\"./AppShell\");\n\nvar _Boot = require(\"./Boot\");\n\nvar _getUser = require(\"./getUser\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction buildClientApp(config) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var routes, user, _config$historyProtoc, historyProtocol, _config$initialRoute, initialRoute, relayNetwork, relayBootstrap, currentUser, relayEnvironment, getHistoryProtocol, historyMiddlewares, resolver, render, Router, ClientApp;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              routes = config.routes, user = config.user, _config$historyProtoc = config.historyProtocol, historyProtocol = _config$historyProtoc === void 0 ? \"browser\" : _config$historyProtoc, _config$initialRoute = config.initialRoute, initialRoute = _config$initialRoute === void 0 ? \"/\" : _config$initialRoute, relayNetwork = config.relayNetwork;\n              relayBootstrap = JSON.parse(window.__RELAY_BOOTSTRAP__ || \"{}\");\n              currentUser = (0, _getUser.getUser)(user);\n              relayEnvironment = (0, _createEnvironment.createEnvironment)({\n                cache: relayBootstrap,\n                user: currentUser,\n                relayNetwork: relayNetwork\n              });\n\n              getHistoryProtocol = function getHistoryProtocol() {\n                switch (historyProtocol) {\n                  case \"browser\":\n                    return new _BrowserProtocol.default();\n\n                  case \"hash\":\n                    return new _HashProtocol.default();\n\n                  case \"memory\":\n                    return new _MemoryProtocol.default(initialRoute);\n\n                  default:\n                    return new _BrowserProtocol.default();\n                }\n              };\n\n              historyMiddlewares = [_queryMiddleware.default];\n              resolver = new _foundRelay.Resolver(relayEnvironment);\n              render = (0, _createRender.default)({});\n              _context.next = 11;\n              return (0, _createInitialFarceRouter.default)({\n                historyProtocol: getHistoryProtocol(),\n                historyMiddlewares: historyMiddlewares,\n                routeConfig: routes,\n                resolver: resolver,\n                render: render\n              });\n\n            case 11:\n              Router = _context.sent;\n              _context.prev = 12;\n              _context.next = 15;\n              return (0, _loadableComponents.loadComponents)();\n\n            case 15:\n              _context.next = 19;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](12);\n\n            case 19:\n              ClientApp = function ClientApp(props) {\n                return _react.default.createElement(_Boot.Boot, _extends({\n                  system: _objectSpread({}, config, {\n                    relayEnvironment: relayEnvironment,\n                    resolver: resolver,\n                    routes: routes,\n                    currentUser: currentUser\n                  })\n                }, props), _react.default.createElement(_AppShell.AppShell, null, _react.default.createElement(Router, {\n                  resolver: resolver\n                })));\n              };\n\n              resolve({\n                ClientApp: ClientApp\n              });\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t1 = _context[\"catch\"](0);\n              console.error(\"[Reaction Router/buildClientApp]\", _context.t1);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 23], [12, 17]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}",{"version":3,"sources":["src/Router/buildClientApp.tsx"],"names":["buildClientApp","config","Promise","resolve","reject","routes","user","historyProtocol","initialRoute","relayNetwork","relayBootstrap","JSON","parse","window","__RELAY_BOOTSTRAP__","currentUser","relayEnvironment","cache","getHistoryProtocol","BrowserProtocol","HashProtocol","MemoryProtocol","historyMiddlewares","queryMiddleware","resolver","Resolver","render","routeConfig","Router","ClientApp","props","console","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAGO,SAASA,cAAT,CAAwBC,MAAxB,EAAwE;AAC7E,SAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbC,oBAHa,GAQXJ,MARW,CAGbI,MAHa,EAIbC,IAJa,GAQXL,MARW,CAIbK,IAJa,0BAQXL,MARW,CAKbM,eALa,EAKbA,eALa,sCAKK,SALL,iDAQXN,MARW,CAMbO,YANa,EAMbA,YANa,qCAME,GANF,yBAObC,YAPa,GAQXR,MARW,CAObQ,YAPa;AAUTC,4BAVS,GAUQC,KAAKC,KAAL,CAAWC,OAAOC,mBAAP,IAA8B,IAAzC,CAVR;AAWTC,yBAXS,GAWK,sBAAQT,IAAR,CAXL;AAYTU,8BAZS,GAYU,0CAAkB;AACzCC,uBAAOP,cADkC;AAEzCJ,sBAAMS,WAFmC;AAGzCN;AAHyC,eAAlB,CAZV;;AAkBTS,gCAlBS,GAkBY,SAArBA,kBAAqB,GAAM;AAC/B,wBAAQX,eAAR;AACE,uBAAK,SAAL;AACE,2BAAO,IAAIY,wBAAJ,EAAP;;AACF,uBAAK,MAAL;AACE,2BAAO,IAAIC,qBAAJ,EAAP;;AACF,uBAAK,QAAL;AACE,2BAAO,IAAIC,uBAAJ,CAAmBb,YAAnB,CAAP;;AACF;AACE,2BAAO,IAAIW,wBAAJ,EAAP;AARJ;AAUD,eA7Bc;;AA+BTG,gCA/BS,GA+BY,CAACC,wBAAD,CA/BZ;AAgCTC,sBAhCS,GAgCE,IAAIC,oBAAJ,CAAaT,gBAAb,CAhCF;AAiCTU,oBAjCS,GAiCA,2BAAa,EAAb,CAjCA;AAAA;AAAA,qBAkCM,uCAAyB;AAC5CnB,iCAAiBW,oBAD2B;AAE5CI,sDAF4C;AAG5CK,6BAAatB,MAH+B;AAI5CmB,kCAJ4C;AAK5CE;AAL4C,eAAzB,CAlCN;;AAAA;AAkCTE,oBAlCS;AAAA;AAAA;AAAA,qBA2CP,yCA3CO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAgDTC,uBAhDS,GAgDG,SAAZA,SAAY,QAAS;AACzB,uBACE,6BAAC,UAAD;AACE,4CACK5B,MADL;AAEEe,sDAFF;AAGEQ,sCAHF;AAIEnB,kCAJF;AAKEU;AALF;AADF,mBAQMe,KARN,GAUE,6BAAC,kBAAD,QACE,6BAAC,MAAD;AAAQ,4BAAUN;AAAlB,kBADF,CAVF,CADF;AAgBD,eAjEc;;AAmEfrB,sBAAQ;AACN0B;AADM,eAAR;AAnEe;AAAA;;AAAA;AAAA;AAAA;AAuEfE,sBAAQC,KAAR,CAAc,kCAAd;;AAvEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AA0ED","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import BrowserProtocol from \"farce/lib/BrowserProtocol\"\nimport HashProtocol from \"farce/lib/HashProtocol\"\nimport MemoryProtocol from \"farce/lib/MemoryProtocol\"\nimport queryMiddleware from \"farce/lib/queryMiddleware\"\nimport { Resolver } from \"found-relay\"\nimport createInitialFarceRouter from \"found/lib/createInitialFarceRouter\"\nimport createRender from \"found/lib/createRender\"\nimport { loadComponents } from \"loadable-components\"\nimport React from \"react\"\nimport { createEnvironment } from \"Relay/createEnvironment\"\nimport { AppShell } from \"./AppShell\"\nimport { Boot } from \"./Boot\"\nimport { getUser } from \"./getUser\"\nimport { AppConfig, ClientResolveProps } from \"./types\"\n\nexport function buildClientApp(config: AppConfig): Promise<ClientResolveProps> {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        routes,\n        user,\n        historyProtocol = \"browser\",\n        initialRoute = \"/\",\n        relayNetwork,\n      } = config\n\n      const relayBootstrap = JSON.parse(window.__RELAY_BOOTSTRAP__ || \"{}\")\n      const currentUser = getUser(user)\n      const relayEnvironment = createEnvironment({\n        cache: relayBootstrap,\n        user: currentUser,\n        relayNetwork,\n      })\n\n      const getHistoryProtocol = () => {\n        switch (historyProtocol) {\n          case \"browser\":\n            return new BrowserProtocol()\n          case \"hash\":\n            return new HashProtocol()\n          case \"memory\":\n            return new MemoryProtocol(initialRoute)\n          default:\n            return new BrowserProtocol()\n        }\n      }\n\n      const historyMiddlewares = [queryMiddleware]\n      const resolver = new Resolver(relayEnvironment)\n      const render = createRender({})\n      const Router = await createInitialFarceRouter({\n        historyProtocol: getHistoryProtocol(),\n        historyMiddlewares,\n        routeConfig: routes,\n        resolver,\n        render,\n      })\n\n      try {\n        await loadComponents()\n      } catch (error) {\n        // FIXME: https://github.com/smooth-code/loadable-components/pull/93\n      }\n\n      const ClientApp = props => {\n        return (\n          <Boot\n            system={{\n              ...config,\n              relayEnvironment,\n              resolver,\n              routes,\n              currentUser,\n            }}\n            {...props}\n          >\n            <AppShell>\n              <Router resolver={resolver} />\n            </AppShell>\n          </Boot>\n        )\n      }\n\n      resolve({\n        ClientApp,\n      })\n    } catch (error) {\n      console.error(\"[Reaction Router/buildClientApp]\", error)\n    }\n  })\n}\n"]}]}
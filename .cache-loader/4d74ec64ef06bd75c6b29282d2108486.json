{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Authentication/Desktop/LoginForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Desktop/LoginForm.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Formik } from \"formik\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Error, Footer, ForgotPassword, FormContainer as Form, SubmitButton } from \"../commonElements\";\nimport { ModalType } from \"../Types\";\nimport { LoginValidator } from \"../Validators\";\nimport Input from \"../../Input\";\nvar Row = styled.div.withConfig({\n  displayName: \"LoginForm__Row\",\n  componentId: \"n8b9j6-0\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\nexport var LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      error: _this.props.error\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Formik, {\n        initialValues: this.props.values,\n        onSubmit: this.props.handleSubmit,\n        validationSchema: LoginValidator\n      }, function (_ref) {\n        var values = _ref.values,\n            errors = _ref.errors,\n            touched = _ref.touched,\n            formikHandleChange = _ref.handleChange,\n            handleBlur = _ref.handleBlur,\n            handleSubmit = _ref.handleSubmit,\n            isSubmitting = _ref.isSubmitting,\n            status = _ref.status,\n            setStatus = _ref.setStatus;\n        var globalError = _this2.state.error || status && !status.success && status.error;\n\n        var handleChange = function handleChange(e) {\n          setStatus(null);\n\n          _this2.setState({\n            error: null\n          });\n\n          formikHandleChange(e);\n        };\n\n        return React.createElement(Form, {\n          onSubmit: handleSubmit,\n          height: 320\n        }, React.createElement(Input, {\n          block: true,\n          quick: true,\n          error: touched.email && errors.email,\n          placeholder: \"Enter your email address\",\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }), React.createElement(Input, {\n          block: true,\n          quick: true,\n          error: touched.password && errors.password,\n          placeholder: \"Enter your password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }), React.createElement(Row, null, React.createElement(ForgotPassword, {\n          onClick: function onClick() {\n            return _this2.props.handleTypeChange(ModalType.forgot);\n          }\n        })), globalError && React.createElement(Error, {\n          show: true\n        }, globalError), React.createElement(SubmitButton, {\n          loading: isSubmitting\n        }, \"Log in\"), React.createElement(Footer, {\n          handleTypeChange: function handleTypeChange() {\n            return _this2.props.handleTypeChange(ModalType.signup);\n          },\n          mode: \"login\",\n          onFacebookLogin: _this2.props.onFacebookLogin,\n          onTwitterLogin: _this2.props.onTwitterLogin,\n          inline: true\n        }));\n      });\n    }\n  }]);\n\n  return LoginForm;\n}(Component);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Authentication/Desktop/LoginForm.tsx"],"names":["Formik","React","Component","styled","Error","Footer","ForgotPassword","FormContainer","Form","SubmitButton","ModalType","LoginValidator","Input","Row","div","LoginForm","error","props","values","handleSubmit","errors","touched","formikHandleChange","handleChange","handleBlur","isSubmitting","status","setStatus","globalError","state","success","e","setState","email","password","handleTypeChange","forgot","signup","onFacebookLogin","onTwitterLogin"],"mappings":"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","sourcesContent":["import { Formik, FormikProps } from \"formik\"\nimport React, { Component } from \"react\"\nimport styled from \"styled-components\"\n\nimport {\n  Error,\n  Footer,\n  ForgotPassword,\n  FormContainer as Form,\n  SubmitButton,\n} from \"Components/Authentication/commonElements\"\nimport {\n  FormProps,\n  InputValues,\n  ModalType,\n} from \"Components/Authentication/Types\"\nimport { LoginValidator } from \"Components/Authentication/Validators\"\nimport Input from \"Components/Input\"\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport interface LoginFormState {\n  error: string\n}\n\nexport class LoginForm extends Component<FormProps, LoginFormState> {\n  state = {\n    error: this.props.error,\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.props.values}\n        onSubmit={this.props.handleSubmit}\n        validationSchema={LoginValidator}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange: formikHandleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          status,\n          setStatus,\n        }: FormikProps<InputValues>) => {\n          const globalError =\n            this.state.error || (status && !status.success && status.error)\n\n          const handleChange = e => {\n            setStatus(null)\n            this.setState({ error: null })\n            formikHandleChange(e)\n          }\n\n          return (\n            <Form onSubmit={handleSubmit} height={320}>\n              <Input\n                block\n                quick\n                error={touched.email && errors.email}\n                placeholder=\"Enter your email address\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <Input\n                block\n                quick\n                error={touched.password && errors.password}\n                placeholder=\"Enter your password\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <Row>\n                <ForgotPassword\n                  onClick={() => this.props.handleTypeChange(ModalType.forgot)}\n                />\n              </Row>\n              {globalError && <Error show>{globalError}</Error>}\n              <SubmitButton loading={isSubmitting}>Log in</SubmitButton>\n              <Footer\n                handleTypeChange={() =>\n                  this.props.handleTypeChange(ModalType.signup)\n                }\n                mode=\"login\"\n                onFacebookLogin={this.props.onFacebookLogin}\n                onTwitterLogin={this.props.onTwitterLogin}\n                inline\n              />\n            </Form>\n          )\n        }}\n      </Formik>\n    )\n  }\n}\n"]}]}
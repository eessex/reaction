{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Artsy/SystemContext.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Artsy/SystemContext.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createEnvironment } from \"./Relay/createEnvironment\";\nimport React from \"react\";\nimport { getUser } from \"../Utils/getUser\";\nvar Context = React.createContext({});\n/**\n * Creates a new Context.Provider with a user and Relay environment, or defaults\n * if not passed in as props.\n */\n\nexport var ContextProvider = function ContextProvider(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _user = getUser(props.user);\n\n  var relayEnvironment = props.relayEnvironment || createEnvironment({\n    user: _user\n  });\n\n  var providerValues = _objectSpread({}, props, {\n    user: _user,\n    relayEnvironment: relayEnvironment\n  });\n\n  return React.createElement(Context.Provider, {\n    value: providerValues\n  }, children);\n};\nexport var ContextConsumer = Context.Consumer;\n/**\n * A HOC utility function for injecting renderProps into a component.\n */\n\nexport var withContext = function withContext(Component) {\n  return function (props) {\n    return React.createElement(ContextConsumer, null, function (contextValues) {\n      return React.createElement(Component, _extends({}, contextValues, props));\n    });\n  };\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Artsy/SystemContext.tsx"],"names":["createEnvironment","React","getUser","Context","createContext","ContextProvider","children","props","_user","user","relayEnvironment","providerValues","ContextConsumer","Consumer","withContext","Component","contextValues"],"mappings":";;;;;;;;;;AAAA,SAASA,iBAAT;AAEA,OAAOC,KAAP,MAA2B,OAA3B;AAEA,SAASC,OAAT;AA+CA,IAAMC,OAAO,GAAGF,KAAK,CAACG,aAAN,CAAuC,EAAvC,CAAhB;AAEA;;;;;AAIA,OAAO,IAAMC,eAAuC,GAAG,SAA1CA,eAA0C,OAGjD;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,KAAK,GAAGN,OAAO,CAACK,KAAK,CAACE,IAAP,CAArB;;AACA,MAAMC,gBAAgB,GACpBH,KAAK,CAACG,gBAAN,IAA0BV,iBAAiB,CAAC;AAAES,IAAAA,IAAI,EAAED;AAAR,GAAD,CAD7C;;AAGA,MAAMG,cAAc,qBACfJ,KADe;AAElBE,IAAAA,IAAI,EAAED,KAFY;AAGlBE,IAAAA,gBAAgB,EAAhBA;AAHkB,IAApB;;AAMA,SAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC;AAAzB,KAA0CL,QAA1C,CAAP;AACD,CAfM;AAiBP,OAAO,IAAMM,eAAe,GAAGT,OAAO,CAACU,QAAhC;AAEP;;;;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AACtC,SAAO,UAAAR,KAAK,EAAI;AACd,WACE,oBAAC,eAAD,QACG,UAAAS,aAAa,EAAI;AAChB,aAAO,oBAAC,SAAD,eAAeA,aAAf,EAAkCT,KAAlC,EAAP;AACD,KAHH,CADF;AAOD,GARD;AASD,CAVM","sourcesContent":["import { createEnvironment } from \"Artsy/Relay/createEnvironment\"\nimport { ContextProps as _ContextProps } from \"Components/Artsy\"\nimport React, { SFC } from \"react\"\nimport { RelayNetwork } from \"relay-runtime\"\nimport { getUser } from \"Utils/getUser\"\nimport { MatchingMediaQueries } from \"Utils/Responsive\"\n\ninterface SystemProps {\n  /**\n   * The currently signed-in user.\n   *\n   * Unless explicitely set to `null`, this will default to use the `USER_ID`\n   * and `USER_ACCESS_TOKEN` environment variables if available.\n   */\n  user?: User\n\n  /**\n   * Media queries that are passed to Responsive when an app first mounts. Useful\n   * for SSR rendering views for mobile devices.\n   */\n  initialMatchingMediaQueries?: MatchingMediaQueries\n\n  /**\n   * A PubSub hub typically used for communicating with Force.\n   */\n  mediator?: {\n    trigger: (action: string, config?: object) => void\n  }\n\n  /**\n   * A configured environment object that can be used for any Relay operations\n   * that need an environment object.\n   *\n   * If none is provided to the `ContextProvider` then one is created, using\n   * the `user` if available.\n   */\n  relayNetwork?: RelayNetwork\n\n  isEigen?: boolean\n}\n\n/**\n * Globally accessible Context values for use in Artsy apps\n */\nexport interface ContextProps<T = {}> extends SystemProps {\n  /**\n   * Catch-all for additional context values passed in during initialization.\n   */\n  [key: string]: any\n}\n\nconst Context = React.createContext<ContextProps<any>>({})\n\n/**\n * Creates a new Context.Provider with a user and Relay environment, or defaults\n * if not passed in as props.\n */\nexport const ContextProvider: SFC<ContextProps<any>> = ({\n  children,\n  ...props\n}) => {\n  const _user = getUser(props.user)\n  const relayEnvironment =\n    props.relayEnvironment || createEnvironment({ user: _user })\n\n  const providerValues = {\n    ...props,\n    user: _user,\n    relayEnvironment,\n  }\n\n  return <Context.Provider value={providerValues}>{children}</Context.Provider>\n}\n\nexport const ContextConsumer = Context.Consumer\n\n/**\n * A HOC utility function for injecting renderProps into a component.\n */\nexport const withContext = Component => {\n  return props => {\n    return (\n      <ContextConsumer>\n        {contextValues => {\n          return <Component {...contextValues} {...props} />\n        }}\n      </ContextConsumer>\n    )\n  }\n}\n"]}]}
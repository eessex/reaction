{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Collect/Components/ArtworkGrid/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Collect/Components/ArtworkGrid/index.tsx","mtime":1538080133000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { LargeSelect, SmallSelect } from \"@artsy/palette\"\nimport { FilterState } from \"../../FilterState\";\nimport { ContextConsumer } from \"../../../../Artsy\";\nimport React, { Component } from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport { Toggle } from \"../../../../Styleguide/Components/Toggle\";\nimport { Subscribe } from \"unstated\";\nimport { Responsive } from \"../../../../Utils/Responsive\";\nimport { PriceRange } from \"../Filters/PriceRange\";\nimport { CollectArtworkGridRefetchContainer as ArtworkFilter } from \"./CollectArtworkFilterRefetch\";\nimport { Box, Checkbox, Flex, LargeSelect, Radio, Sans, Separator, SmallSelect, Spacer } from \"@artsy/palette\";\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"renderMedium\",\n    value: function renderMedium(filters, mediums, mediator) {\n      return mediums.map(function (medium, index) {\n        var isSelected = filters.state.medium === medium.id;\n        return React.createElement(Radio, {\n          my: 0.3,\n          selected: isSelected,\n          value: medium.id,\n          onSelect: function onSelect(_ref) {\n            var selected = _ref.selected;\n\n            if (selected) {\n              return filters.setFilter(\"medium\", medium.id, mediator);\n            } else {\n              return filters.unsetFilter(\"medium\", mediator);\n            }\n          },\n          key: index\n        }, medium.name);\n      });\n    }\n  }, {\n    key: \"renderTimePeriods\",\n    value: function renderTimePeriods(filters, mediator) {\n      return allowedPeriods.map(function (timePeriod, index) {\n        var isSelected = filters.state.major_periods[0] === timePeriod;\n        return React.createElement(Radio, {\n          my: 0.3,\n          selected: isSelected,\n          value: timePeriod,\n          onSelect: function onSelect(_ref2) {\n            var selected = _ref2.selected;\n\n            if (selected) {\n              return filters.setFilter(\"major_periods\", timePeriod, mediator);\n            } else {\n              return filters.unsetFilter(\"major_periods\", mediator);\n            }\n          },\n          key: index\n        }, timePeriod);\n      });\n    }\n  }, {\n    key: \"renderPriceRange\",\n    value: function renderPriceRange(filters, mediator) {\n      return React.createElement(PriceRange, {\n        allowCross: false,\n        min: 50,\n        max: 50000,\n        step: 50,\n        defaultValue: [50, 50000],\n        onAfterChange: function onAfterChange(_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              min = _ref4[0],\n              max = _ref4[1];\n\n          if (max === 50000) {\n            filters.setFilter(\"price_range\", \"\".concat(min, \"-*\"), mediator);\n          } else {\n            filters.setFilter(\"price_range\", \"\".concat(min, \"-\").concat(max), mediator);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"renderForSaleCheckbox\",\n    value: function renderForSaleCheckbox(filters, hasForSaleArtworks, mediator) {\n      return React.createElement(Checkbox, {\n        selected: filters.state.for_sale,\n        disabled: !hasForSaleArtworks,\n        onSelect: function onSelect(value) {\n          return filters.setFilter(\"for_sale\", value, mediator);\n        }\n      }, \"For sale\");\n    }\n  }, {\n    key: \"renderWaysToBuy\",\n    value: function renderWaysToBuy(filters, mediator) {\n      return React.createElement(React.Fragment, null, React.createElement(Sans, {\n        size: \"2\",\n        weight: \"medium\",\n        color: \"black100\",\n        my: 1\n      }, \"Ways to Buy\"), React.createElement(Checkbox, {\n        selected: filters.state.at_auction,\n        onSelect: function onSelect(value) {\n          return filters.setFilter(\"at_auction\", value, mediator);\n        }\n      }, \"Bid\"), React.createElement(Checkbox, {\n        selected: filters.state.inquireable_only,\n        onSelect: function onSelect(value) {\n          return filters.setFilter(\"inquireable_only\", value, mediator);\n        }\n      }, \"Inquire\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var hideTopBorder = this.props.hideTopBorder;\n      var filter_artworks = this.props.viewer.filter_artworks;\n      var aggregations = filter_artworks.aggregations;\n      var mediumAggregation = aggregations.find(function (agg) {\n        return agg.slice === \"MEDIUM\";\n      });\n      return React.createElement(ContextConsumer, null, function (_ref5) {\n        var mediator = _ref5.mediator;\n        return React.createElement(Subscribe, {\n          to: [FilterState]\n        }, function (filters) {\n          return React.createElement(Responsive, null, function (_ref6) {\n            var xs = _ref6.xs,\n                sm = _ref6.sm,\n                md = _ref6.md;\n            var Select = xs ? LargeSelect : SmallSelect;\n            return React.createElement(React.Fragment, null, React.createElement(Flex, null, !xs && React.createElement(Sidebar, {\n              width: \"25%\",\n              mr: 2\n            }, React.createElement(Flex, {\n              flexDirection: \"column\",\n              alignItems: \"left\",\n              mt: -1,\n              mb: 1\n            }, !hideTopBorder && React.createElement(Separator, {\n              mb: 1\n            }), _this.renderWaysToBuy(filters, mediator)), React.createElement(Flex, {\n              flexDirection: \"column\",\n              alignItems: \"left\",\n              my: 1\n            }, _this.renderPriceRange(filters, mediator)), React.createElement(Toggle, {\n              label: \"Medium\",\n              expanded: true\n            }, _this.renderMedium(filters, mediumAggregation.counts, mediator)), React.createElement(Toggle, {\n              label: \"Time period\",\n              expanded: true\n            }, _this.renderTimePeriods(filters, mediator))), React.createElement(\"span\", {\n              id: \"jump--collectArtworkGrid\"\n            }), React.createElement(Box, {\n              width: xs ? \"100%\" : \"75%\"\n            }, !hideTopBorder && React.createElement(Separator, {\n              mb: 2,\n              mt: -1\n            }), React.createElement(Flex, {\n              justifyContent: \"flex-end\"\n            }, React.createElement(Select, {\n              mt: \"-8px\",\n              mr: \"15px\",\n              options: [{\n                value: \"-decayed_merch\",\n                text: \"Default\"\n              }, {\n                value: \"-partner_updated_at\",\n                text: \"Recently updated\"\n              }, {\n                value: \"-published_at\",\n                text: \"Recently added\"\n              }, {\n                value: \"-year\",\n                text: \"Artwork year (desc.)\"\n              }, {\n                value: \"year\",\n                text: \"Artwork year (asc.)\"\n              }] // Corrective spacing for line-height\n              ,\n              selected: filters.state.sort,\n              onSelect: function onSelect(sort) {\n                return filters.setFilter(\"sort\", sort, mediator);\n              }\n            })), React.createElement(Spacer, {\n              mb: 2\n            }), React.createElement(ArtworkFilter, {\n              viewer: _this.props.viewer,\n              filters: filters.state\n            }))));\n          });\n        });\n      });\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\n_defineProperty(Filter, \"defaultProps\", {\n  hideTopBorder: false\n});\n\nexport var ArtworkGridFragmentContainer = createFragmentContainer(Filter, {\n  viewer: function viewer() {\n    var node = require(\"../../../../__generated__/ArtworkGrid_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"99b1653db12202b0369643ca3ca5313a\") {\n      console.error(\"The definition of 'ArtworkGrid_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/ArtworkGrid_viewer.graphql\");\n  }\n});\nvar Sidebar = Box;\nvar allowedPeriods = [\"2010\", \"2000\", \"1990\", \"1980\", \"1970\", \"1960\", \"1950\", \"1940\", \"1930\", \"1920\", \"1910\", \"1900\", \"Late 19th Century\", \"Mid 19th Century\", \"Early 19th Century\"];",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Collect/Components/ArtworkGrid/index.tsx"],"names":["FilterState","ContextConsumer","React","Component","createFragmentContainer","graphql","Toggle","Subscribe","Responsive","PriceRange","CollectArtworkGridRefetchContainer","ArtworkFilter","Box","Checkbox","Flex","LargeSelect","Radio","Sans","Separator","SmallSelect","Spacer","Filter","filters","mediums","mediator","map","medium","index","isSelected","state","id","selected","setFilter","unsetFilter","name","allowedPeriods","timePeriod","major_periods","min","max","hasForSaleArtworks","for_sale","value","at_auction","inquireable_only","hideTopBorder","props","filter_artworks","viewer","aggregations","mediumAggregation","find","agg","slice","xs","sm","md","Select","renderWaysToBuy","renderPriceRange","renderMedium","counts","renderTimePeriods","text","sort","ArtworkGridFragmentContainer","Sidebar"],"mappings":"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","sourcesContent":["// import { LargeSelect, SmallSelect } from \"@artsy/palette\"\nimport { ArtworkGrid_viewer } from \"__generated__/ArtworkGrid_viewer.graphql\"\nimport { FilterState } from \"Apps/Collect/FilterState\"\nimport { ContextConsumer } from \"Artsy\"\nimport React, { Component } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Toggle } from \"Styleguide/Components/Toggle\"\nimport { Subscribe } from \"unstated\"\nimport { Responsive } from \"Utils/Responsive\"\nimport { PriceRange } from \"../Filters/PriceRange\"\nimport { CollectArtworkGridRefetchContainer as ArtworkFilter } from \"./CollectArtworkFilterRefetch\"\n\nimport {\n  Box,\n  Checkbox,\n  Flex,\n  LargeSelect,\n  Radio,\n  Sans,\n  Separator,\n  SmallSelect,\n  Spacer,\n} from \"@artsy/palette\"\n\ninterface Props {\n  hideTopBorder?: boolean\n  viewer: ArtworkGrid_viewer\n}\n\nclass Filter extends Component<Props> {\n  static defaultProps = {\n    hideTopBorder: false,\n  }\n\n  renderMedium(filters, mediums, mediator) {\n    return mediums.map((medium, index) => {\n      const isSelected = filters.state.medium === medium.id\n\n      return (\n        <Radio\n          my={0.3}\n          selected={isSelected}\n          value={medium.id}\n          onSelect={({ selected }) => {\n            if (selected) {\n              return filters.setFilter(\"medium\", medium.id, mediator)\n            } else {\n              return filters.unsetFilter(\"medium\", mediator)\n            }\n          }}\n          key={index}\n        >\n          {medium.name}\n        </Radio>\n      )\n    })\n  }\n\n  renderTimePeriods(filters, mediator) {\n    return allowedPeriods.map((timePeriod, index) => {\n      const isSelected = filters.state.major_periods[0] === timePeriod\n\n      return (\n        <Radio\n          my={0.3}\n          selected={isSelected}\n          value={timePeriod}\n          onSelect={({ selected }) => {\n            if (selected) {\n              return filters.setFilter(\"major_periods\", timePeriod, mediator)\n            } else {\n              return filters.unsetFilter(\"major_periods\", mediator)\n            }\n          }}\n          key={index}\n        >\n          {timePeriod}\n        </Radio>\n      )\n    })\n  }\n\n  renderPriceRange(filters, mediator) {\n    return (\n      <PriceRange\n        allowCross={false}\n        min={50}\n        max={50000}\n        step={50}\n        defaultValue={[50, 50000]}\n        onAfterChange={([min, max]) => {\n          if (max === 50000) {\n            filters.setFilter(\"price_range\", `${min}-*`, mediator)\n          } else {\n            filters.setFilter(\"price_range\", `${min}-${max}`, mediator)\n          }\n        }}\n      />\n    )\n  }\n\n  renderForSaleCheckbox(filters, hasForSaleArtworks, mediator) {\n    return (\n      <Checkbox\n        selected={filters.state.for_sale}\n        disabled={!hasForSaleArtworks}\n        onSelect={value => {\n          return filters.setFilter(\"for_sale\", value, mediator)\n        }}\n      >\n        For sale\n      </Checkbox>\n    )\n  }\n\n  renderWaysToBuy(filters, mediator) {\n    return (\n      <React.Fragment>\n        <Sans size=\"2\" weight=\"medium\" color=\"black100\" my={1}>\n          Ways to Buy\n        </Sans>\n        <Checkbox\n          selected={filters.state.at_auction}\n          onSelect={value => filters.setFilter(\"at_auction\", value, mediator)}\n        >\n          Bid\n        </Checkbox>\n        <Checkbox\n          selected={filters.state.inquireable_only}\n          onSelect={value =>\n            filters.setFilter(\"inquireable_only\", value, mediator)\n          }\n        >\n          Inquire\n        </Checkbox>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const { hideTopBorder } = this.props\n    const { filter_artworks } = this.props.viewer\n    const { aggregations } = filter_artworks\n    const mediumAggregation = aggregations.find(agg => agg.slice === \"MEDIUM\")\n\n    return (\n      <ContextConsumer>\n        {({ mediator }) => {\n          return (\n            <Subscribe to={[FilterState]}>\n              {(filters: FilterState) => {\n                return (\n                  <Responsive>\n                    {({ xs, sm, md }) => {\n                      const Select = xs ? LargeSelect : SmallSelect\n\n                      return (\n                        <>\n                          <Flex>\n                            {/*\n                            Sidebar Area\n                          */}\n\n                            {!xs && (\n                              <Sidebar width=\"25%\" mr={2}>\n                                <Flex\n                                  flexDirection=\"column\"\n                                  alignItems=\"left\"\n                                  mt={-1}\n                                  mb={1}\n                                >\n                                  {!hideTopBorder && <Separator mb={1} />}\n\n                                  {this.renderWaysToBuy(filters, mediator)}\n                                </Flex>\n\n                                <Flex\n                                  flexDirection=\"column\"\n                                  alignItems=\"left\"\n                                  my={1}\n                                >\n                                  {this.renderPriceRange(filters, mediator)}\n                                </Flex>\n\n                                <Toggle label=\"Medium\" expanded>\n                                  {this.renderMedium(\n                                    filters,\n                                    mediumAggregation.counts,\n                                    mediator\n                                  )}\n                                </Toggle>\n                                <Toggle label=\"Time period\" expanded>\n                                  {this.renderTimePeriods(filters, mediator)}\n                                </Toggle>\n                              </Sidebar>\n                            )}\n\n                            {/*\n                            Main Artwork Grid\n                          */}\n\n                            <span id=\"jump--collectArtworkGrid\" />\n\n                            <Box width={xs ? \"100%\" : \"75%\"}>\n                              {!hideTopBorder && <Separator mb={2} mt={-1} />}\n\n                              <Flex justifyContent=\"flex-end\">\n                                <Select\n                                  mt=\"-8px\"\n                                  mr=\"15px\"\n                                  options={\n                                    [\n                                      {\n                                        value: \"-decayed_merch\",\n                                        text: \"Default\",\n                                      },\n                                      {\n                                        value: \"-partner_updated_at\",\n                                        text: \"Recently updated\",\n                                      },\n                                      {\n                                        value: \"-published_at\",\n                                        text: \"Recently added\",\n                                      },\n                                      {\n                                        value: \"-year\",\n                                        text: \"Artwork year (desc.)\",\n                                      },\n                                      {\n                                        value: \"year\",\n                                        text: \"Artwork year (asc.)\",\n                                      },\n                                    ] // Corrective spacing for line-height\n                                  }\n                                  selected={filters.state.sort}\n                                  onSelect={sort => {\n                                    return filters.setFilter(\n                                      \"sort\",\n                                      sort,\n                                      mediator\n                                    )\n                                  }}\n                                />\n                              </Flex>\n\n                              <Spacer mb={2} />\n\n                              <ArtworkFilter\n                                viewer={this.props.viewer}\n                                filters={filters.state}\n                              />\n                            </Box>\n                          </Flex>\n                        </>\n                      )\n                    }}\n                  </Responsive>\n                )\n              }}\n            </Subscribe>\n          )\n        }}\n      </ContextConsumer>\n    )\n  }\n}\n\nexport const ArtworkGridFragmentContainer = createFragmentContainer(\n  Filter,\n  graphql`\n    fragment ArtworkGrid_viewer on Viewer\n      @argumentDefinitions(\n        medium: { type: \"String\", defaultValue: \"*\" }\n        major_periods: { type: \"[String]\" }\n        partner_id: { type: \"ID\" }\n        for_sale: { type: \"Boolean\" }\n        at_auction: { type: \"Boolean\" }\n        acquireable: { type: \"Boolean\" }\n        inquireable_only: { type: \"Boolean\" }\n        aggregations: {\n          type: \"[ArtworkAggregation]\"\n          defaultValue: [MEDIUM, TOTAL]\n        }\n        sort: { type: \"String\", defaultValue: \"-partner_updated_at\" }\n        price_range: { type: \"String\" }\n      ) {\n      filter_artworks(aggregations: $aggregations, size: 0) {\n        aggregations {\n          slice\n          counts {\n            name\n            id\n          }\n        }\n      }\n\n      ...CollectArtworkFilterRefetch_viewer\n        @arguments(\n          medium: $medium\n          major_periods: $major_periods\n          partner_id: $partner_id\n          for_sale: $for_sale\n          sort: $sort\n          acquireable: $acquireable\n          at_auction: $at_auction\n          inquireable_only: $inquireable_only\n          price_range: $price_range\n        )\n    }\n  `\n)\n\nconst Sidebar = Box\n\nconst allowedPeriods = [\n  \"2010\",\n  \"2000\",\n  \"1990\",\n  \"1980\",\n  \"1970\",\n  \"1960\",\n  \"1950\",\n  \"1940\",\n  \"1930\",\n  \"1920\",\n  \"1910\",\n  \"1900\",\n  \"Late 19th Century\",\n  \"Mid 19th Century\",\n  \"Early 19th Century\",\n]\n"]}]}
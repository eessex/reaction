{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/ArtworkFilter/MobileActionSheet.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/ArtworkFilter/MobileActionSheet.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Box, Button, Sans, StackableBorderBox } from \"@artsy/palette\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MobileTopBar } from \"../../../../../../Styleguide/Components\";\nimport { Subscribe } from \"unstated\";\nimport { FilterState } from \"../../state\";\nexport var MobileActionSheet = function MobileActionSheet(_ref) {\n  var children = _ref.children,\n      onClose = _ref.onClose;\n  return React.createElement(Subscribe, {\n    to: [FilterState]\n  }, function (_ref2) {\n    var resetFilters = _ref2.resetFilters,\n        selectedFilters = _ref2.state.selectedFilters;\n    var filterCount = selectedFilters.length ? \"(\".concat(selectedFilters.length, \")\") : \"\";\n    return React.createElement(Container, null, React.createElement(MobileTopBar, null, React.createElement(Button, {\n      variant: \"noOutline\",\n      size: \"small\",\n      onClick: function onClick() {\n        return resetFilters();\n      }\n    }, \"Reset\"), React.createElement(Sans, {\n      size: \"2\",\n      weight: \"medium\"\n    }, \"Filter \", filterCount), React.createElement(Button, {\n      variant: \"primaryBlack\",\n      size: \"small\",\n      onClick: function onClick() {\n        return onClose();\n      }\n    }, \"Apply\")), React.createElement(StackableBorderBox, {\n      flexDirection: \"column\"\n    }, children));\n  });\n};\nvar Container = styled(Box).withConfig({\n  displayName: \"MobileActionSheet__Container\",\n  componentId: \"s164n4vo-0\"\n})([\"position:fixed;z-index:971;top:0;left:0;width:100%;height:100%;background-color:white;overflow-y:scroll;-webkit-overflow-scrolling:touch;\"]);",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/ArtworkFilter/MobileActionSheet.tsx"],"names":["Box","Button","Sans","StackableBorderBox","React","styled","MobileTopBar","Subscribe","FilterState","MobileActionSheet","children","onClose","resetFilters","selectedFilters","state","filterCount","length","Container"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,kBAA5B,QAAsD,gBAAtD;AACA,OAAOC,KAAP,MAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT;AAOA,OAAO,IAAMC,iBAAyC,GAAG,SAA5CA,iBAA4C,OAGnD;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,SACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAE,CAACH,WAAD;AAAf,KACG,iBAA+D;AAAA,QAA5DI,YAA4D,SAA5DA,YAA4D;AAAA,QAArCC,eAAqC,SAA9CC,KAA8C,CAArCD,eAAqC;AAC9D,QAAME,WAAW,GAAGF,eAAe,CAACG,MAAhB,cACZH,eAAe,CAACG,MADJ,SAEhB,EAFJ;AAIA,WACE,oBAAC,SAAD,QACE,oBAAC,YAAD,QACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMJ,YAAY,EAAlB;AAAA;AAHX,eADF,EAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAe,MAAA,MAAM,EAAC;AAAtB,kBACUG,WADV,CARF,EAWE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,cADV;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMJ,OAAO,EAAb;AAAA;AAHX,eAXF,CADF,EAoBE,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC;AAAlC,OACGD,QADH,CApBF,CADF;AA0BD,GAhCH,CADF;AAoCD,CAxCM;AA0CP,IAAMO,SAAS,GAAGZ,MAAM,CAACL,GAAD,CAAT;AAAA;AAAA;AAAA,iJAAf","sourcesContent":["import { Box, Button, Sans, StackableBorderBox } from \"@artsy/palette\"\nimport React, { SFC } from \"react\"\nimport styled from \"styled-components\"\nimport { MobileTopBar } from \"Styleguide/Components\"\nimport { Subscribe } from \"unstated\"\nimport { FilterState } from \"../../state\"\n\ninterface MobileActionSheet {\n  children: JSX.Element\n  onClose?: () => void\n}\n\nexport const MobileActionSheet: SFC<MobileActionSheet> = ({\n  children,\n  onClose,\n}) => {\n  return (\n    <Subscribe to={[FilterState]}>\n      {({ resetFilters, state: { selectedFilters } }: FilterState) => {\n        const filterCount = selectedFilters.length\n          ? `(${selectedFilters.length})`\n          : \"\"\n\n        return (\n          <Container>\n            <MobileTopBar>\n              <Button\n                variant=\"noOutline\"\n                size=\"small\"\n                onClick={() => resetFilters()}\n              >\n                Reset\n              </Button>\n              <Sans size=\"2\" weight=\"medium\">\n                Filter {filterCount}\n              </Sans>\n              <Button\n                variant=\"primaryBlack\"\n                size=\"small\"\n                onClick={() => onClose()}\n              >\n                Apply\n              </Button>\n            </MobileTopBar>\n            <StackableBorderBox flexDirection=\"column\">\n              {children}\n            </StackableBorderBox>\n          </Container>\n        )\n      }}\n    </Subscribe>\n  )\n}\n\nconst Container = styled(Box)`\n  position: fixed;\n  /* The z-index after Force's mobile top-nav header */\n  z-index: 971;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n`\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Publishing/Constants.ts","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Constants.ts","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _uniq from \"lodash/uniq\";\nimport _last from \"lodash/last\";\nimport _compact from \"lodash/compact\";\nimport cheerio from \"cheerio\";\nimport moment from \"moment\";\nimport momentTz from \"moment-timezone\";\nimport url from \"url\";\n\n/**\n * Matches for Email / Instant Articles\n */\nexport var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/**\n * The quality to request from image CDN\n */\n\nexport var GLOBAL_IMAGE_QUALITY = 80;\n/**\n * TODO: Eventually remove sizeMe\n */\n\nexport var SIZE_ME_REFRESH_RATE = 500;\n/**\n * Relative path to article\n */\n\nexport var getArticleHref = function getArticleHref(slug) {\n  return \"/article/\".concat(slug);\n};\n/**\n * Absolute path to article\n */\n\nexport var getArticleFullHref = function getArticleFullHref(slug) {\n  return \"https://www.artsy.net/article/\".concat(slug);\n};\n/**\n * Get the pre-slug part of URL\n */\n\nexport var getPreSlugPath = function getPreSlugPath(layout) {\n  return [\"standard\", \"feature\"].includes(layout) ? \"article\" : layout;\n};\n/**\n * Relative path to editorial entity\n */\n\nexport var getEditorialHref = function getEditorialHref(layout, slug) {\n  var layoutType = getPreSlugPath(layout);\n  return \"/\".concat(layoutType, \"/\").concat(slug);\n};\n/**\n * Absolute path to editorial entity\n */\n\nexport var getFullEditorialHref = function getFullEditorialHref(layout, slug) {\n  var layoutType = getPreSlugPath(layout);\n  return \"https://www.artsy.net/\".concat(layoutType, \"/\").concat(slug);\n};\n/**\n * Absolute path to artsy entity\n */\n\nexport var getFullArtsyHref = function getFullArtsyHref(slug) {\n  return \"https://www.artsy.net/\".concat(slug);\n};\n/**\n * ByLine helpers\n * TODO: Move this into some kind of utils folder\n */\n\nexport var getAuthorByline = function getAuthorByline(authors) {\n  var isEditoral = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var authorCount = Number(authors && authors.length);\n\n  if (authorCount === 1) {\n    return authors[0].name || \"\";\n  } else if (authorCount > 1) {\n    var names = authors.reduce(function (prev, curr, i) {\n      var delim;\n      var len = authors.length;\n\n      if (i === len - 1) {\n        delim = \" and \";\n      } else if (i === 0) {\n        delim = \"\";\n      } else {\n        delim = \", \";\n      }\n\n      return prev + delim + curr.name;\n    }, \"\");\n    return names; // No Author\n  } else if (isEditoral) {\n    return \"Artsy Editors\";\n  }\n};\nexport var getDate = function getDate(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"default\";\n  var today = moment();\n  var isToday = today.isSame(moment(date), \"day\");\n  var isThisYear = moment(date).format(\"YYYY\") === moment(today).format(\"YYYY\");\n\n  switch (format) {\n    case \"monthDay\":\n      return moment(date).format(\"MMM D\");\n\n    case \"monthYear\":\n      return momentTz(date).tz(\"America/New_York\").format(\"MMMM YYYY\");\n\n    case \"condensed\":\n      return momentTz(date).tz(\"America/New_York\").format(\"MMM D, YYYY\");\n\n    case \"verbose\":\n      var day = isToday ? \"Today\" : momentTz(date).tz(\"America/New_York\").format(\"MMM D, YYYY\");\n      var time = momentTz(date).tz(\"America/New_York\").format(\"h:mm a\");\n      return \"\".concat(day, \" at \").concat(time);\n\n    case \"news\":\n      return isToday ? \"Today\" : isThisYear ? momentTz(date).tz(\"America/New_York\").format(\"MMM D\") : momentTz(date).tz(\"America/New_York\").format(\"MMM D, YYYY\");\n\n    default:\n      return momentTz(date).tz(\"America/New_York\").format(\"MMM D, YYYY h:mm a\");\n  }\n};\nexport var getCurrentUnixTimestamp = function getCurrentUnixTimestamp() {\n  return moment().unix();\n};\nexport var getMediaDate = function getMediaDate(article) {\n  var published_at = article.published_at,\n      scheduled_publish_at = article.scheduled_publish_at,\n      media = article.media;\n  var release_date = media.release_date;\n\n  if (release_date) {\n    return release_date;\n  } else {\n    return published_at || scheduled_publish_at;\n  }\n};\nexport var formatTime = function formatTime(time) {\n  var minutes = Math.floor(time / 60) % 60;\n  var seconds = Math.floor(time % 60);\n  minutes = minutes <= 0 ? 0 : minutes;\n  seconds = seconds <= 0 ? 0 : seconds;\n  var minutesStr = minutes < 10 ? \"0\" + minutes : minutes;\n  var secondsStr = seconds < 10 ? \"0\" + seconds : seconds;\n  return minutesStr + \":\" + secondsStr;\n};\nexport var getArtsySlugsFromArticle = function getArtsySlugsFromArticle(article) {\n  var articleBody = article.sections.map(function (section) {\n    if (section.type === \"text\") {\n      return section.body;\n    }\n  }).join();\n\n  var artists = _uniq(getArtsySlugsFromHTML(articleBody, \"artist\"));\n\n  var genes = _uniq(getArtsySlugsFromHTML(articleBody, \"gene\"));\n\n  return {\n    artists: artists,\n    genes: genes\n  };\n};\nexport var getArtsySlugsFromHTML = function getArtsySlugsFromHTML(html, model) {\n  var $ = cheerio.load(html);\n\n  var slugs = _compact($(\"a\")).map(function (a) {\n    var href = $(a).attr(\"href\");\n\n    if (href) {\n      if (href.match(\"artsy.net/\".concat(model))) {\n        return _last(url.parse(href).pathname.split(\"/\"));\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  });\n\n  return _compact(slugs);\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Publishing/Constants.ts"],"names":["cheerio","moment","momentTz","url","EMAIL_REGEX","GLOBAL_IMAGE_QUALITY","SIZE_ME_REFRESH_RATE","getArticleHref","slug","getArticleFullHref","getPreSlugPath","layout","includes","getEditorialHref","layoutType","getFullEditorialHref","getFullArtsyHref","getAuthorByline","authors","isEditoral","authorCount","Number","length","name","names","reduce","prev","curr","i","delim","len","getDate","date","format","today","isToday","isSame","isThisYear","tz","day","time","getCurrentUnixTimestamp","unix","getMediaDate","article","published_at","scheduled_publish_at","media","release_date","formatTime","minutes","Math","floor","seconds","minutesStr","secondsStr","getArtsySlugsFromArticle","articleBody","sections","map","section","type","body","join","artists","getArtsySlugsFromHTML","genes","html","model","$","load","slugs","a","href","attr","match","parse","pathname","split"],"mappings":"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","sourcesContent":["import cheerio from \"cheerio\"\nimport { compact, last, uniq } from \"lodash\"\nimport moment from \"moment\"\nimport momentTz from \"moment-timezone\"\nimport url from \"url\"\nimport { ArticleData, DateFormat } from \"../Publishing/Typings\"\n\n/**\n * Matches for Email / Instant Articles\n */\nexport const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n/**\n * The quality to request from image CDN\n */\nexport const GLOBAL_IMAGE_QUALITY = 80\n\n/**\n * TODO: Eventually remove sizeMe\n */\nexport const SIZE_ME_REFRESH_RATE = 500\n\n/**\n * Relative path to article\n */\nexport const getArticleHref = slug => `/article/${slug}`\n\n/**\n * Absolute path to article\n */\nexport const getArticleFullHref = slug =>\n  `https://www.artsy.net/article/${slug}`\n\n/**\n * Get the pre-slug part of URL\n */\n\nexport const getPreSlugPath = layout => {\n  return [\"standard\", \"feature\"].includes(layout) ? \"article\" : layout\n}\n\n/**\n * Relative path to editorial entity\n */\n\nexport const getEditorialHref = (layout, slug) => {\n  const layoutType = getPreSlugPath(layout)\n  return `/${layoutType}/${slug}`\n}\n\n/**\n * Absolute path to editorial entity\n */\nexport const getFullEditorialHref = (layout, slug) => {\n  const layoutType = getPreSlugPath(layout)\n  return `https://www.artsy.net/${layoutType}/${slug}`\n}\n\n/**\n * Absolute path to artsy entity\n */\nexport const getFullArtsyHref = slug => `https://www.artsy.net/${slug}`\n\n/**\n * ByLine helpers\n * TODO: Move this into some kind of utils folder\n */\nexport const getAuthorByline = (authors, isEditoral = true) => {\n  const authorCount = Number(authors && authors.length)\n\n  if (authorCount === 1) {\n    return authors[0].name || \"\"\n  } else if (authorCount > 1) {\n    const names = authors.reduce((prev, curr, i) => {\n      let delim\n      const len = authors.length\n      if (i === len - 1) {\n        delim = \" and \"\n      } else if (i === 0) {\n        delim = \"\"\n      } else {\n        delim = \", \"\n      }\n      return prev + delim + curr.name\n    }, \"\")\n    return names\n\n    // No Author\n  } else if (isEditoral) {\n    return \"Artsy Editors\"\n  }\n}\n\nexport const getDate = (date, format: DateFormat = \"default\") => {\n  const today = moment()\n  const isToday = today.isSame(moment(date), \"day\")\n  const isThisYear =\n    moment(date).format(\"YYYY\") === moment(today).format(\"YYYY\")\n\n  switch (format) {\n    case \"monthDay\":\n      return moment(date).format(\"MMM D\")\n    case \"monthYear\":\n      return momentTz(date)\n        .tz(\"America/New_York\")\n        .format(\"MMMM YYYY\")\n    case \"condensed\":\n      return momentTz(date)\n        .tz(\"America/New_York\")\n        .format(\"MMM D, YYYY\")\n    case \"verbose\":\n      const day = isToday\n        ? \"Today\"\n        : momentTz(date)\n            .tz(\"America/New_York\")\n            .format(\"MMM D, YYYY\")\n      const time = momentTz(date)\n        .tz(\"America/New_York\")\n        .format(\"h:mm a\")\n      return `${day} at ${time}`\n    case \"news\":\n      return isToday\n        ? \"Today\"\n        : isThisYear\n          ? momentTz(date)\n              .tz(\"America/New_York\")\n              .format(\"MMM D\")\n          : momentTz(date)\n              .tz(\"America/New_York\")\n              .format(\"MMM D, YYYY\")\n    default:\n      return momentTz(date)\n        .tz(\"America/New_York\")\n        .format(\"MMM D, YYYY h:mm a\")\n  }\n}\n\nexport const getCurrentUnixTimestamp = () => moment().unix()\n\nexport const getMediaDate = article => {\n  const { published_at, scheduled_publish_at, media } = article\n  const { release_date } = media\n\n  if (release_date) {\n    return release_date\n  } else {\n    return published_at || scheduled_publish_at\n  }\n}\n\nexport const formatTime = time => {\n  let minutes = Math.floor(time / 60) % 60\n  let seconds = Math.floor(time % 60)\n  minutes = minutes <= 0 ? 0 : minutes\n  seconds = seconds <= 0 ? 0 : seconds\n\n  const minutesStr = minutes < 10 ? \"0\" + minutes : minutes\n  const secondsStr = seconds < 10 ? \"0\" + seconds : seconds\n  return minutesStr + \":\" + secondsStr\n}\n\ninterface SlugsFromArticle {\n  artists: string[]\n  genes: string[]\n}\n\nexport const getArtsySlugsFromArticle = (\n  article: ArticleData\n): SlugsFromArticle => {\n  const articleBody = article.sections\n    .map(section => {\n      if (section.type === \"text\") {\n        return section.body\n      }\n    })\n    .join()\n\n  const artists = uniq(getArtsySlugsFromHTML(articleBody, \"artist\"))\n  const genes = uniq(getArtsySlugsFromHTML(articleBody, \"gene\"))\n\n  return {\n    artists,\n    genes,\n  }\n}\n\nexport const getArtsySlugsFromHTML = (\n  html: string,\n  model: string\n): string[] => {\n  const $ = cheerio.load(html)\n\n  const slugs = compact($(\"a\")).map(a => {\n    const href = $(a).attr(\"href\")\n    if (href) {\n      if (href.match(`artsy.net/${model}`)) {\n        return last(url.parse(href).pathname.split(\"/\"))\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  })\n  return compact(slugs)\n}\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Modal/ModalCta.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Modal/ModalCta.tsx","mtime":1531155658000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-bottom: \", \"px;\\n    \", \"\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport { color, space } from \"@artsy/palette\";\nimport InvertedButton from \"../Buttons/Inverted\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { media } from \"../Helpers\";\nexport var ModalCta = function ModalCta(props) {\n  var _props$cta = props.cta,\n      isFixed = _props$cta.isFixed,\n      onClick = _props$cta.onClick,\n      text = _props$cta.text,\n      hasImage = props.hasImage,\n      onClose = props.onClose;\n  return React.createElement(Cta, {\n    isFixed: isFixed,\n    hasImage: hasImage\n  }, React.createElement(InvertedButton, {\n    onClick: onClick || onClose\n  }, text));\n};\nvar Cta = styled.div.attrs({}).withConfig({\n  displayName: \"ModalCta__Cta\",\n  componentId: \"s17ncnnw-0\"\n})([\"padding:\", \"px 0 \", \"px 0;button{margin:0;width:100%;}\", \";\", \";\"], space(2), space(3), function (props) {\n  return props.isFixed && \"\\n    position: absolute;\\n    bottom: 0;\\n    right: \".concat(space(4), \"px;\\n    left: \").concat(props.hasImage ? \"calc(50% + 40px)\" : space(4) + \"px\", \";\\n    background: white;\\n    border-top: 1px solid \").concat(color(\"black10\"), \";\\n  \");\n}, media.sm(_templateObject(), space(2), function (props) {\n  return props.isFixed && \"\\n      right: \".concat(space(2), \"px;\\n      left: \").concat(space(2), \"px\\n    \");\n}));",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Modal/ModalCta.tsx"],"names":["color","space","InvertedButton","React","styled","media","ModalCta","props","cta","isFixed","onClick","text","hasImage","onClose","Cta","div","attrs","sm"],"mappings":";;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;AACA,OAAOC,cAAP;AACA,OAAOC,KAAP,MAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT;AAQA,OAAO,IAAMC,QAIX,GAAG,SAJQA,QAIR,CAAAC,KAAK,EAAI;AAAA,mBAKRA,KALQ,CAEVC,GAFU;AAAA,MAEHC,OAFG,cAEHA,OAFG;AAAA,MAEMC,OAFN,cAEMA,OAFN;AAAA,MAEeC,IAFf,cAEeA,IAFf;AAAA,MAGVC,QAHU,GAKRL,KALQ,CAGVK,QAHU;AAAA,MAIVC,OAJU,GAKRN,KALQ,CAIVM,OAJU;AAOZ,SACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEJ,OAAd;AAAuB,IAAA,QAAQ,EAAEG;AAAjC,KACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEF,OAAO,IAAIG;AAApC,KAA8CF,IAA9C,CADF,CADF;AAKD,CAhBM;AAkBP,IAAMG,GAAG,GAAGV,MAAM,CAACW,GAAP,CAAWC,KAAX,CAA4D,EAA5D,CAAH;AAAA;AAAA;AAAA,yEACIf,KAAK,CAAC,CAAD,CADT,EACoBA,KAAK,CAAC,CAAD,CADzB,EAML,UAAAM,KAAK;AAAA,SACLA,KAAK,CAACE,OAAN,oEAISR,KAAK,CAAC,CAAD,CAJd,4BAKQM,KAAK,CAACK,QAAN,GAAiB,kBAAjB,GAAsCX,KAAK,CAAC,CAAD,CAAL,GAAW,IALzD,kEAOwBD,KAAK,CAAC,SAAD,CAP7B,UADK;AAAA,CANA,EAiBLK,KAAK,CAACY,EAjBD,oBAkBahB,KAAK,CAAC,CAAD,CAlBlB,EAmBH,UAAAM,KAAK;AAAA,SACLA,KAAK,CAACE,OAAN,6BAESR,KAAK,CAAC,CAAD,CAFd,8BAGQA,KAAK,CAAC,CAAD,CAHb,aADK;AAAA,CAnBF,EAAT","sourcesContent":["import { color, space } from \"@artsy/palette\"\nimport InvertedButton from \"Components/Buttons/Inverted\"\nimport React, { SFC } from \"react\"\nimport styled from \"styled-components\"\nimport { media } from \"../Helpers\"\n\nexport interface CtaProps {\n  isFixed: boolean\n  text: string\n  onClick: () => void\n}\n\nexport const ModalCta: SFC<{\n  cta?: CtaProps\n  hasImage?: boolean\n  onClose: () => void\n}> = props => {\n  const {\n    cta: { isFixed, onClick, text },\n    hasImage,\n    onClose,\n  } = props\n\n  return (\n    <Cta isFixed={isFixed} hasImage={hasImage}>\n      <InvertedButton onClick={onClick || onClose}>{text}</InvertedButton>\n    </Cta>\n  )\n}\n\nconst Cta = styled.div.attrs<{ isFixed?: boolean; hasImage?: boolean }>({})`\n  padding: ${space(2)}px 0 ${space(3)}px 0;\n  button {\n    margin: 0;\n    width: 100%;\n  }\n  ${props =>\n    props.isFixed &&\n    `\n    position: absolute;\n    bottom: 0;\n    right: ${space(4)}px;\n    left: ${props.hasImage ? \"calc(50% + 40px)\" : space(4) + \"px\"};\n    background: white;\n    border-top: 1px solid ${color(\"black10\")};\n  `};\n\n  ${media.sm`\n    padding-bottom: ${space(2)}px;\n    ${props =>\n      props.isFixed &&\n      `\n      right: ${space(2)}px;\n      left: ${space(2)}px\n    `}\n  `};\n`\n"]}]}
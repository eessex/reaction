{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Order/Components/ShippingAddress.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Order/Components/ShippingAddress.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Serif } from \"@artsy/palette\";\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport { COUNTRY_CODE_TO_COUNTRY_NAME } from \"../../../Styleguide/Components\";\nexport var ShippingAddress = function ShippingAddress(_ref) {\n  var _ref$ship = _ref.ship,\n      name = _ref$ship.name,\n      addressLine1 = _ref$ship.addressLine1,\n      addressLine2 = _ref$ship.addressLine2,\n      city = _ref$ship.city,\n      region = _ref$ship.region,\n      postalCode = _ref$ship.postalCode,\n      country = _ref$ship.country,\n      phoneNumber = _ref$ship.phoneNumber;\n  return React.createElement(React.Fragment, null, React.createElement(Serif, {\n    size: \"3t\"\n  }, name), React.createElement(Serif, {\n    size: \"3t\"\n  }, [addressLine1, (addressLine2 || \"\").trim()].filter(Boolean).join(\", \")), React.createElement(Serif, {\n    size: \"3t\"\n  }, city, \", \", region, \" \", postalCode), React.createElement(Serif, {\n    size: \"3t\"\n  }, COUNTRY_CODE_TO_COUNTRY_NAME[country] || country), phoneNumber && React.createElement(Serif, {\n    size: \"3t\"\n  }, phoneNumber));\n};\nexport var ShippingAddressFragmentContainer = createFragmentContainer(ShippingAddress, {\n  ship: function ship() {\n    var node = require(\"../../../__generated__/ShippingAddress_ship.graphql\");\n\n    if (node.hash && node.hash !== \"2fdc393b0608cc1499ddf4c1831ca94a\") {\n      console.error(\"The definition of 'ShippingAddress_ship' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../__generated__/ShippingAddress_ship.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Order/Components/ShippingAddress.tsx"],"names":["Serif","React","createFragmentContainer","graphql","COUNTRY_CODE_TO_COUNTRY_NAME","ShippingAddress","ship","name","addressLine1","addressLine2","city","region","postalCode","country","phoneNumber","trim","filter","Boolean","join","ShippingAddressFragmentContainer"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,aAAjD;AACA,SAASC,4BAAT;AAMA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,uBAC7BC,IAD6B;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAG3BC,YAH2B,aAG3BA,YAH2B;AAAA,MAI3BC,YAJ2B,aAI3BA,YAJ2B;AAAA,MAK3BC,IAL2B,aAK3BA,IAL2B;AAAA,MAM3BC,MAN2B,aAM3BA,MAN2B;AAAA,MAO3BC,UAP2B,aAO3BA,UAP2B;AAAA,MAQ3BC,OAR2B,aAQ3BA,OAR2B;AAAA,MAS3BC,WAT2B,aAS3BA,WAT2B;AAAA,SAY7B,0CACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAkBP,IAAlB,CADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KACG,CAACC,YAAD,EAAe,CAACC,YAAY,IAAI,EAAjB,EAAqBM,IAArB,EAAf,EAA4CC,MAA5C,CAAmDC,OAAnD,EAA4DC,IAA5D,CAAiE,IAAjE,CADH,CAFF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KACGR,IADH,QACWC,MADX,OACoBC,UADpB,CALF,EAQE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAkBR,4BAA4B,CAACS,OAAD,CAA5B,IAAyCA,OAA3D,CARF,EASGC,WAAW,IAAI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAkBA,WAAlB,CATlB,CAZ6B;AAAA,CAAxB;AAyBP,OAAO,IAAMK,gCAAgC,GAAGjB,uBAAuB,CACrEG,eADqE;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAAhE","sourcesContent":["import { Serif } from \"@artsy/palette\"\nimport React from \"react\"\n\nimport { ShippingAddress_ship } from \"__generated__/ShippingAddress_ship.graphql\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { COUNTRY_CODE_TO_COUNTRY_NAME } from \"Styleguide/Components\"\n\nexport interface ShippingAddressProps {\n  ship: ShippingAddress_ship\n}\n\nexport const ShippingAddress = ({\n  ship: {\n    name,\n    addressLine1,\n    addressLine2,\n    city,\n    region,\n    postalCode,\n    country,\n    phoneNumber,\n  },\n}: ShippingAddressProps) => (\n  <>\n    <Serif size=\"3t\">{name}</Serif>\n    <Serif size=\"3t\">\n      {[addressLine1, (addressLine2 || \"\").trim()].filter(Boolean).join(\", \")}\n    </Serif>\n    <Serif size=\"3t\">\n      {city}, {region} {postalCode}\n    </Serif>\n    <Serif size=\"3t\">{COUNTRY_CODE_TO_COUNTRY_NAME[country] || country}</Serif>\n    {phoneNumber && <Serif size=\"3t\">{phoneNumber}</Serif>}\n  </>\n)\n\nexport const ShippingAddressFragmentContainer = createFragmentContainer(\n  ShippingAddress,\n  graphql`\n    fragment ShippingAddress_ship on Ship {\n      name\n      addressLine1\n      addressLine2\n      city\n      postalCode\n      region\n      country\n      phoneNumber\n    }\n  `\n)\n"]}]}
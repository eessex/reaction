{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Artwork/Metadata.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Artwork/Metadata.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ContextConsumer } from \"../../Artsy/Router\";\nimport colors from \"../../Assets/Colors\";\nimport { garamond } from \"../../Assets/Fonts\";\nimport StyledTextLink from \"../TextLink\";\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nimport RelayContact, { Contact } from \"./Contact\";\nimport RelayDetails, { Details } from \"./Details\";\nexport var MetadataContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MetadataContainer, _React$Component);\n\n  function MetadataContainer() {\n    _classCallCheck(this, MetadataContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetadataContainer).apply(this, arguments));\n  }\n\n  _createClass(MetadataContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          artwork = _this$props.artwork,\n          className = _this$props.className,\n          extended = _this$props.extended,\n          useRelay = _this$props.useRelay;\n      var DetailsBlock = useRelay ? RelayDetails : Details;\n      var ContactBlock = useRelay ? RelayContact : Contact;\n      return React.createElement(ContextConsumer, null, function (_ref) {\n        var user = _ref.user;\n        var enableLabFeature = user && user.lab_features && user.lab_features.includes(\"New Buy Now Flow\");\n        var detailsContent = React.createElement(\"div\", {\n          className: className\n        }, React.createElement(DetailsBlock, {\n          includeLinks: !enableLabFeature,\n          showSaleLine: extended,\n          artwork: artwork\n        }), !enableLabFeature && extended && React.createElement(ContactBlock, {\n          artwork: artwork\n        }));\n        return enableLabFeature ? React.createElement(StyledTextLink, {\n          href: artwork.href\n        }, detailsContent) : detailsContent;\n      });\n    }\n  }]);\n\n  return MetadataContainer;\n}(React.Component);\n\n_defineProperty(MetadataContainer, \"defaultProps\", {\n  extended: true,\n  useRelay: true\n});\n\nexport var Metadata = styled(MetadataContainer).withConfig({\n  displayName: \"Metadata\",\n  componentId: \"s18wfa1g-0\"\n})([\"\", \";color:\", \";margin-top:12px;text-align:left;\"], garamond(\"s15\"), colors.graySemibold);\nexport default createFragmentContainer(Metadata, {\n  artwork: function artwork() {\n    var node = require(\"../../__generated__/Metadata_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"5e64e5a09dbf4016cd89ec6a41b009e5\") {\n      console.error(\"The definition of 'Metadata_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Metadata_artwork.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Artwork/Metadata.tsx"],"names":["ContextConsumer","colors","garamond","StyledTextLink","React","createFragmentContainer","graphql","styled","RelayContact","Contact","RelayDetails","Details","MetadataContainer","props","artwork","className","extended","useRelay","DetailsBlock","ContactBlock","user","enableLabFeature","lab_features","includes","detailsContent","href","Component","Metadata","graySemibold"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAASA,eAAT;AACA,OAAOC,MAAP;AACA,SAASC,QAAT;AACA,OAAOC,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,aAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,IAAuBC,OAAvB;AACA,OAAOC,YAAP,IAAuBC,OAAvB;AAQA,WAAaC,iBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAMW;AAAA,wBAC4C,KAAKC,KADjD;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UACqBC,QADrB,eACqBA,QADrB;AAAA,UAC+BC,QAD/B,eAC+BA,QAD/B;AAEP,UAAMC,YAAY,GAAGD,QAAQ,GAAGP,YAAH,GAAkBC,OAA/C;AACA,UAAMQ,YAAY,GAAGF,QAAQ,GAAGT,YAAH,GAAkBC,OAA/C;AAEA,aACE,oBAAC,eAAD,QACG,gBAAc;AAAA,YAAXW,IAAW,QAAXA,IAAW;AACb,YAAMC,gBAAgB,GACpBD,IAAI,IACJA,IAAI,CAACE,YADL,IAEAF,IAAI,CAACE,YAAL,CAAkBC,QAAlB,CAA2B,kBAA3B,CAHF;AAKA,YAAMC,cAAc,GAClB;AAAK,UAAA,SAAS,EAAET;AAAhB,WACE,oBAAC,YAAD;AACE,UAAA,YAAY,EAAE,CAACM,gBADjB;AAEE,UAAA,YAAY,EAAEL,QAFhB;AAGE,UAAA,OAAO,EAAEF;AAHX,UADF,EAMG,CAACO,gBAAD,IACCL,QADD,IACa,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEF;AAAvB,UAPhB,CADF;AAWA,eAAOO,gBAAgB,GACrB,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAEP,OAAO,CAACW;AAA9B,WACGD,cADH,CADqB,GAKrBA,cALF;AAOD,OAzBH,CADF;AA6BD;AAxCH;;AAAA;AAAA,EAAuCpB,KAAK,CAACsB,SAA7C;;gBAAad,iB,kBACW;AACpBI,EAAAA,QAAQ,EAAE,IADU;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,C;;AA0CxB,OAAO,IAAMU,QAAQ,GAAGpB,MAAM,CAACK,iBAAD,CAAT;AAAA;AAAA;AAAA,yDACjBV,QAAQ,CAAC,KAAD,CADS,EAEVD,MAAM,CAAC2B,YAFG,CAAd;AAOP,eAAevB,uBAAuB,CACpCsB,QADoC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAAtC","sourcesContent":["import { Metadata_artwork } from \"__generated__/Metadata_artwork.graphql\"\nimport { ContextConsumer } from \"Artsy/Router\"\nimport colors from \"Assets/Colors\"\nimport { garamond } from \"Assets/Fonts\"\nimport StyledTextLink from \"Components/TextLink\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport RelayContact, { Contact } from \"./Contact\"\nimport RelayDetails, { Details } from \"./Details\"\n\nexport interface MetadataProps extends React.HTMLProps<MetadataContainer> {\n  artwork: Metadata_artwork\n  extended?: boolean\n  useRelay?: boolean\n}\n\nexport class MetadataContainer extends React.Component<MetadataProps> {\n  static defaultProps = {\n    extended: true,\n    useRelay: true,\n  }\n\n  render() {\n    const { artwork, className, extended, useRelay } = this.props\n    const DetailsBlock = useRelay ? RelayDetails : Details\n    const ContactBlock = useRelay ? RelayContact : Contact\n\n    return (\n      <ContextConsumer>\n        {({ user }) => {\n          const enableLabFeature =\n            user &&\n            user.lab_features &&\n            user.lab_features.includes(\"New Buy Now Flow\")\n\n          const detailsContent = (\n            <div className={className}>\n              <DetailsBlock\n                includeLinks={!enableLabFeature}\n                showSaleLine={extended}\n                artwork={artwork}\n              />\n              {!enableLabFeature &&\n                extended && <ContactBlock artwork={artwork} />}\n            </div>\n          )\n          return enableLabFeature ? (\n            <StyledTextLink href={artwork.href}>\n              {detailsContent}\n            </StyledTextLink>\n          ) : (\n            detailsContent\n          )\n        }}\n      </ContextConsumer>\n    )\n  }\n}\n\nexport const Metadata = styled(MetadataContainer)`\n  ${garamond(\"s15\")};\n  color: ${colors.graySemibold};\n  margin-top: 12px;\n  text-align: left;\n`\n\nexport default createFragmentContainer(\n  Metadata,\n  graphql`\n    fragment Metadata_artwork on Artwork {\n      ...Details_artwork\n      ...Contact_artwork\n      href\n    }\n  `\n)\n"]}]}
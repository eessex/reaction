{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Publishing/Video/Player/MuteUnmute.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Publishing/Video/Player/MuteUnmute.tsx","mtime":1524585020000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { IconVideoMute } from \"../../Icon/IconVideoMute\";\nimport { IconVideoUnmute } from \"../../Icon/IconVideoUnmute\";\nexport var MuteUnmute =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MuteUnmute, _React$PureComponent);\n\n  function MuteUnmute() {\n    _classCallCheck(this, MuteUnmute);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MuteUnmute).apply(this, arguments));\n  }\n\n  _createClass(MuteUnmute, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isMuted = _this$props.isMuted,\n          toggleMute = _this$props.toggleMute;\n      return React.createElement(MuteUnmuteContainer, {\n        onClick: toggleMute\n      }, isMuted ? React.createElement(IconVideoUnmute, {\n        color: \"white\"\n      }) : React.createElement(IconVideoMute, {\n        color: \"white\"\n      }));\n    }\n  }]);\n\n  return MuteUnmute;\n}(React.PureComponent);\nexport var MuteUnmuteContainer = styled.div.withConfig({\n  displayName: \"MuteUnmute__MuteUnmuteContainer\",\n  componentId: \"s1brk4e5-0\"\n})([\"height:28px;cursor:pointer;\"]);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Publishing/Video/Player/MuteUnmute.tsx"],"names":["React","styled","IconVideoMute","IconVideoUnmute","MuteUnmute","props","isMuted","toggleMute","PureComponent","MuteUnmuteContainer","div"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT;AACA,SAASC,eAAT;AAOA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,UADV,eACUA,UADV;AAGP,aACE,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAEA;AAA9B,SACGD,OAAO,GACN,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC;AAAvB,QADM,GAGN,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC;AAArB,QAJJ,CADF;AASD;AAbH;;AAAA;AAAA,EAAgCN,KAAK,CAACQ,aAAtC;AAgBA,OAAO,IAAMC,mBAAmB,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,mCAAzB","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { IconVideoMute } from \"../../Icon/IconVideoMute\"\nimport { IconVideoUnmute } from \"../../Icon/IconVideoUnmute\"\n\ninterface Props extends React.HTMLProps<HTMLSpanElement> {\n  isMuted: boolean\n  toggleMute: () => void\n}\n\nexport class MuteUnmute extends React.PureComponent<Props, null> {\n  render() {\n    const { isMuted, toggleMute } = this.props\n\n    return (\n      <MuteUnmuteContainer onClick={toggleMute}>\n        {isMuted ? (\n          <IconVideoUnmute color=\"white\" />\n        ) : (\n          <IconVideoMute color=\"white\" />\n        )}\n      </MuteUnmuteContainer>\n    )\n  }\n}\n\nexport const MuteUnmuteContainer = styled.div`\n  height: 28px;\n  cursor: pointer;\n`\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/FollowButton/FollowArtistButton.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/FollowButton/FollowArtistButton.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _extend from \"lodash/extend\";\n\nvar _graphql;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as Artsy from \"../../Artsy/SystemContext\";\nimport React from \"react\";\nimport track from \"react-tracking\";\nimport { FollowButton } from \"./Button\";\nimport { FollowButtonDeprecated } from \"./ButtonDeprecated\";\nimport { commitMutation, createFragmentContainer, graphql } from \"react-relay\";\nexport var FollowArtistButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FollowArtistButton, _React$Component);\n\n  function FollowArtistButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FollowArtistButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FollowArtistButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"trackFollow\", function () {\n      var _this$props = _this.props,\n          tracking = _this$props.tracking,\n          is_followed = _this$props.artist.is_followed;\n      var trackingData = _this.props.trackingData || {};\n      var action = is_followed ? \"Unfollowed Artist\" : \"Followed Artist\";\n      tracking.trackEvent(_extend({\n        action: action\n      }, trackingData));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleFollow\", function (e) {\n      e.preventDefault(); // If this button is part of a link, we _probably_ dont want to actually follow the link.\n\n      var _this$props2 = _this.props,\n          artist = _this$props2.artist,\n          user = _this$props2.user,\n          relay = _this$props2.relay,\n          onOpenAuthModal = _this$props2.onOpenAuthModal;\n\n      if (user && user.id) {\n        var newFollowCount = artist.is_followed ? artist.counts.follows - 1 : artist.counts.follows + 1;\n        commitMutation(relay.environment, {\n          mutation: _graphql || (_graphql = function _graphql() {\n            var node = require(\"../../__generated__/FollowArtistButtonMutation.graphql\");\n\n            if (node.hash && node.hash !== \"e65f3d9d751239122f1c59971dd45400\") {\n              console.error(\"The definition of 'FollowArtistButtonMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n            }\n\n            return require(\"../../__generated__/FollowArtistButtonMutation.graphql\");\n          }),\n          variables: {\n            input: {\n              artist_id: artist.id,\n              unfollow: artist.is_followed\n            }\n          },\n          optimisticResponse: {\n            followArtist: {\n              artist: {\n                __id: artist.__id,\n                is_followed: !artist.is_followed,\n                counts: {\n                  follows: newFollowCount\n                }\n              }\n            }\n          },\n          updater: function updater(store, data) {\n            var artistProxy = store.get(data.followArtist.artist.__id);\n            artistProxy.getLinkedRecord(\"counts\").setValue(newFollowCount, \"follows\");\n          }\n        });\n\n        _this.trackFollow();\n      } else {\n        onOpenAuthModal && onOpenAuthModal(\"register\", {\n          contextModule: \"intext tooltip\",\n          intent: \"follow artist\",\n          copy: \"Sign up to follow artists\"\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(FollowArtistButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          artist = _this$props3.artist,\n          useDeprecatedButtonStyle = _this$props3.useDeprecatedButtonStyle,\n          buttonProps = _this$props3.buttonProps,\n          render = _this$props3.render; // FIXME: Unify design language\n\n      var Button = useDeprecatedButtonStyle ? FollowButtonDeprecated : FollowButton; // Custom button renderer\n\n      if (render) {\n        return React.createElement(\"span\", {\n          onClick: this.handleFollow\n        }, render(artist));\n      } else {\n        return React.createElement(Button, {\n          isFollowed: artist && artist.is_followed,\n          handleFollow: this.handleFollow,\n          buttonProps: buttonProps\n        });\n      }\n    }\n  }]);\n\n  return FollowArtistButton;\n}(React.Component);\n\n_defineProperty(FollowArtistButton, \"defaultProps\", {\n  useDeprecatedButtonStyle: true,\n  buttonProps: {}\n});\n\nexport default track({})(createFragmentContainer(Artsy.withContext(FollowArtistButton), {\n  artist: function artist() {\n    var node = require(\"../../__generated__/FollowArtistButton_artist.graphql\");\n\n    if (node.hash && node.hash !== \"3d95f3ba8843502253efacc9c5d3d5f9\") {\n      console.error(\"The definition of 'FollowArtistButton_artist' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/FollowArtistButton_artist.graphql\");\n  }\n}));",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/FollowButton/FollowArtistButton.tsx"],"names":["Artsy","React","track","FollowButton","FollowButtonDeprecated","commitMutation","createFragmentContainer","graphql","FollowArtistButton","props","tracking","is_followed","artist","trackingData","action","trackEvent","e","preventDefault","user","relay","onOpenAuthModal","id","newFollowCount","counts","follows","environment","mutation","variables","input","artist_id","unfollow","optimisticResponse","followArtist","__id","updater","store","data","artistProxy","get","getLinkedRecord","setValue","trackFollow","contextModule","intent","copy","useDeprecatedButtonStyle","buttonProps","render","Button","handleFollow","Component","withContext"],"mappings":"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","sourcesContent":["import { FollowArtistButtonMutation } from \"__generated__/FollowArtistButtonMutation.graphql\"\nimport * as Artsy from \"Artsy/SystemContext\"\nimport { extend } from \"lodash\"\nimport React from \"react\"\nimport track from \"react-tracking\"\nimport { RecordSourceSelectorProxy, SelectorData } from \"relay-runtime\"\nimport { FollowArtistButton_artist } from \"../../__generated__/FollowArtistButton_artist.graphql\"\nimport { FollowButton } from \"./Button\"\nimport { FollowButtonDeprecated } from \"./ButtonDeprecated\"\nimport { FollowTrackingData } from \"./Typings\"\n\nimport { ButtonProps } from \"@artsy/palette\"\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  RelayProp,\n} from \"react-relay\"\n\ninterface Props\n  extends React.HTMLProps<FollowArtistButton>,\n    Artsy.ContextProps {\n  relay?: RelayProp\n  artist?: FollowArtistButton_artist\n  tracking?: any\n  trackingData?: FollowTrackingData\n  onOpenAuthModal?: (type: \"register\" | \"login\", config?: object) => void\n\n  /**\n   * FIXME: Default is true due to legacy code. If false, use new @artsy/palette\n   * design system <Button /> style.\n   */\n  useDeprecatedButtonStyle?: boolean\n  /**\n   * FIXME: If useDeprecatedButtonStyle is false pass <Button> style props along\n   * to new design-system buttons.\n   */\n  buttonProps?: Partial<ButtonProps>\n  /**\n   * Custom renderer for alternative button displays\n   */\n  render?: (artist: FollowArtistButton_artist) => JSX.Element\n}\n\nexport class FollowArtistButton extends React.Component<Props> {\n  static defaultProps = {\n    useDeprecatedButtonStyle: true,\n    buttonProps: {},\n  }\n\n  trackFollow = () => {\n    const {\n      tracking,\n      artist: { is_followed },\n    } = this.props\n    const trackingData: FollowTrackingData = this.props.trackingData || {}\n    const action = is_followed ? \"Unfollowed Artist\" : \"Followed Artist\"\n\n    tracking.trackEvent(extend({ action }, trackingData))\n  }\n\n  handleFollow = e => {\n    e.preventDefault() // If this button is part of a link, we _probably_ dont want to actually follow the link.\n    const { artist, user, relay, onOpenAuthModal } = this.props\n\n    if (user && user.id) {\n      const newFollowCount = artist.is_followed\n        ? artist.counts.follows - 1\n        : artist.counts.follows + 1\n\n      commitMutation<FollowArtistButtonMutation>(relay.environment, {\n        mutation: graphql`\n          mutation FollowArtistButtonMutation($input: FollowArtistInput!) {\n            followArtist(input: $input) {\n              artist {\n                __id\n                is_followed\n                counts {\n                  follows\n                }\n              }\n            }\n          }\n        `,\n        variables: {\n          input: { artist_id: artist.id, unfollow: artist.is_followed },\n        },\n        optimisticResponse: {\n          followArtist: {\n            artist: {\n              __id: artist.__id,\n              is_followed: !artist.is_followed,\n              counts: { follows: newFollowCount },\n            },\n          },\n        },\n        updater: (store: RecordSourceSelectorProxy, data: SelectorData) => {\n          const artistProxy = store.get(data.followArtist.artist.__id)\n\n          artistProxy\n            .getLinkedRecord(\"counts\")\n            .setValue(newFollowCount, \"follows\")\n        },\n      })\n      this.trackFollow()\n    } else {\n      onOpenAuthModal &&\n        onOpenAuthModal(\"register\", {\n          contextModule: \"intext tooltip\",\n          intent: \"follow artist\",\n          copy: \"Sign up to follow artists\",\n        })\n    }\n  }\n\n  render() {\n    const { artist, useDeprecatedButtonStyle, buttonProps, render } = this.props\n\n    // FIXME: Unify design language\n    const Button = useDeprecatedButtonStyle\n      ? FollowButtonDeprecated\n      : FollowButton\n\n    // Custom button renderer\n    if (render) {\n      return <span onClick={this.handleFollow}>{render(artist)}</span>\n    } else {\n      return (\n        <Button\n          isFollowed={artist && artist.is_followed}\n          handleFollow={this.handleFollow}\n          buttonProps={buttonProps}\n        />\n      )\n    }\n  }\n}\n\nexport default track({})(\n  createFragmentContainer(\n    Artsy.withContext(FollowArtistButton),\n    graphql`\n      fragment FollowArtistButton_artist on Artist {\n        __id\n        id\n        is_followed\n        counts {\n          follows\n        }\n      }\n    `\n  )\n)\n"]}]}
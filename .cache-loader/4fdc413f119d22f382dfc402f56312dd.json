{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Artwork/Contact.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Artwork/Contact.tsx","mtime":1513699920000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Contact = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRelay = require(\"react-relay\");\n\nvar _TextLink = _interopRequireDefault(require(\"../TextLink\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Contact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Contact, _React$Component);\n\n  function Contact() {\n    _classCallCheck(this, Contact);\n\n    return _possibleConstructorReturn(this, (Contact.__proto__ || Object.getPrototypeOf(Contact)).apply(this, arguments));\n  }\n\n  _createClass(Contact, [{\n    key: \"contactLine\",\n    value: function contactLine() {\n      var artwork = this.props.artwork;\n\n      if (artwork.sale && artwork.sale.is_auction) {\n        return this.auctionLine();\n      } else if (artwork.is_inquireable) {\n        return this.contactPartnerLine();\n      }\n    }\n  }, {\n    key: \"auctionLine\",\n    value: function auctionLine() {\n      var artwork = this.props.artwork;\n\n      if (artwork.sale.is_live_open) {\n        return _react.default.createElement(_TextLink.default, {\n          href: artwork.href,\n          underline: true\n        }, \"Enter Live Auction\");\n      } else if (artwork.sale.is_open) {\n        var sa = artwork.sale_artwork;\n        var bids = sa.counts.bidder_positions;\n\n        if (bids > 0) {\n          var s = bids > 1 ? \"s\" : \"\";\n          return _react.default.createElement(\"span\", null, sa.highest_bid.display, \" (\", bids, \" bid\", s, \")\");\n        } else {\n          return _react.default.createElement(\"span\", null, sa.opening_bid.display);\n        }\n      } else if (artwork.sale.is_closed) {\n        return _react.default.createElement(\"span\", null, \"Auction closed\");\n      } else {\n        return _react.default.createElement(\"span\", null);\n      }\n    }\n  }, {\n    key: \"contactPartnerLine\",\n    value: function contactPartnerLine() {\n      return _react.default.createElement(_TextLink.default, {\n        href: this.props.artwork.href,\n        underline: true\n      }, \"Contact \", this.props.artwork.partner.type.toLowerCase());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, this.contactLine());\n    }\n  }]);\n\n  return Contact;\n}(_react.default.Component);\n\nexports.Contact = Contact;\n\nvar _default = (0, _reactRelay.createFragmentContainer)(Contact, {\n  artwork: function artwork() {\n    var node = require(\"../../__generated__/Contact_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"15c2a7973aeb8fd0202f593635e2bbf2\") {\n      console.error(\"The definition of 'Contact_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Contact_artwork.graphql\");\n  }\n});\n\nexports.default = _default;",{"version":3,"sources":["src/Components/Artwork/Contact.tsx"],"names":["Contact","artwork","props","sale","is_auction","auctionLine","is_inquireable","contactPartnerLine","is_live_open","href","is_open","sa","sale_artwork","bids","counts","bidder_positions","s","highest_bid","display","opening_bid","is_closed","partner","type","toLowerCase","contactLine","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;IAIaA,O;;;;;;;;;;;;;kCACG;AAAA,UACJC,OADI,GACQ,KAAKC,KADb,CACJD,OADI;;AAEZ,UAAIA,QAAQE,IAAR,IAAgBF,QAAQE,IAAR,CAAaC,UAAjC,EAA6C;AAC3C,eAAO,KAAKC,WAAL,EAAP;AACD,OAFD,MAEO,IAAIJ,QAAQK,cAAZ,EAA4B;AACjC,eAAO,KAAKC,kBAAL,EAAP;AACD;AACF;;;kCAEa;AAAA,UACJN,OADI,GACQ,KAAKC,KADb,CACJD,OADI;;AAEZ,UAAIA,QAAQE,IAAR,CAAaK,YAAjB,EAA+B;AAC7B,eACE;AAAU,gBAAMP,QAAQQ,IAAxB;AAA8B;AAA9B,gCADF;AAKD,OAND,MAMO,IAAIR,QAAQE,IAAR,CAAaO,OAAjB,EAA0B;AAC/B,YAAMC,KAAKV,QAAQW,YAAnB;AACA,YAAMC,OAAOF,GAAGG,MAAH,CAAUC,gBAAvB;;AACA,YAAIF,OAAO,CAAX,EAAc;AACZ,cAAMG,IAAIH,OAAO,CAAP,GAAW,GAAX,GAAiB,EAA3B;AACA,iBACE,2CACGF,GAAGM,WAAH,CAAeC,OADlB,QAC6BL,IAD7B,UACuCG,CADvC,MADF;AAKD,SAPD,MAOO;AACL,iBAAO,2CAAOL,GAAGQ,WAAH,CAAeD,OAAtB,CAAP;AACD;AACF,OAbM,MAaA,IAAIjB,QAAQE,IAAR,CAAaiB,SAAjB,EAA4B;AACjC,eAAO,4DAAP;AACD,OAFM,MAEA;AACL,eAAO,0CAAP;AACD;AACF;;;yCAEoB;AACnB,aACE;AAAU,cAAM,KAAKlB,KAAL,CAAWD,OAAX,CAAmBQ,IAAnC;AAAyC;AAAzC,qBACW,KAAKP,KAAL,CAAWD,OAAX,CAAmBoB,OAAnB,CAA2BC,IAA3B,CAAgCC,WAAhC,EADX,CADF;AAKD;;;6BAEQ;AACP,aAAO,0CAAM,KAAKC,WAAL,EAAN,CAAP;AACD;;;;EAhD0B,eAAMC,S;;;;eAmDpB,yCACbzB,OADa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,E","file":"/Users/eve/development/reaction/src/Components/Artwork/Contact.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport TextLink from \"../TextLink\"\n\nexport interface ContactProps extends RelayProps, React.HTMLProps<Contact> {}\n\nexport class Contact extends React.Component<ContactProps, null> {\n  contactLine() {\n    const { artwork } = this.props\n    if (artwork.sale && artwork.sale.is_auction) {\n      return this.auctionLine()\n    } else if (artwork.is_inquireable) {\n      return this.contactPartnerLine()\n    }\n  }\n\n  auctionLine() {\n    const { artwork } = this.props\n    if (artwork.sale.is_live_open) {\n      return (\n        <TextLink href={artwork.href} underline>\n          Enter Live Auction\n        </TextLink>\n      )\n    } else if (artwork.sale.is_open) {\n      const sa = artwork.sale_artwork\n      const bids = sa.counts.bidder_positions\n      if (bids > 0) {\n        const s = bids > 1 ? \"s\" : \"\"\n        return (\n          <span>\n            {sa.highest_bid.display} ({bids} bid{s})\n          </span>\n        )\n      } else {\n        return <span>{sa.opening_bid.display}</span>\n      }\n    } else if (artwork.sale.is_closed) {\n      return <span>Auction closed</span>\n    } else {\n      return <span />\n    }\n  }\n\n  contactPartnerLine() {\n    return (\n      <TextLink href={this.props.artwork.href} underline>\n        Contact {this.props.artwork.partner.type.toLowerCase()}\n      </TextLink>\n    )\n  }\n\n  render() {\n    return <div>{this.contactLine()}</div>\n  }\n}\n\nexport default createFragmentContainer(\n  Contact,\n  graphql`\n    fragment Contact_artwork on Artwork {\n      _id\n      href\n      is_inquireable\n      sale {\n        is_auction\n        is_live_open\n        is_open\n        is_closed\n      }\n      partner(shallow: true) {\n        type\n      }\n      sale_artwork {\n        highest_bid {\n          display\n        }\n        opening_bid {\n          display\n        }\n        counts {\n          bidder_positions\n        }\n      }\n    }\n  `\n)\n\ninterface RelayProps {\n  artwork: {\n    _id: string\n    href: string | null\n    is_inquireable: boolean | null\n    sale: {\n      is_auction: boolean | null\n      is_live_open: boolean | null\n      is_open: boolean | null\n      is_closed: boolean | null\n    } | null\n    partner: {\n      type: string | null\n    } | null\n    sale_artwork: {\n      highest_bid: {\n        display: string | null\n      } | null\n      opening_bid: {\n        display: string | null\n      } | null\n      counts: {\n        bidder_positions: boolean | number | string | null\n      } | null\n    } | null\n  }\n}\n"]}]}
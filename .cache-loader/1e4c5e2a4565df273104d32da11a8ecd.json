{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/ArtworkFilter/ArtworkFilterArtworkGrid.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/ArtworkFilter/ArtworkFilterArtworkGrid.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Spacer } from \"@artsy/palette\";\nimport { FilterState } from \"../../state\";\nimport { ContextConsumer } from \"../../../../../../Artsy/Router\";\nimport ArtworkGrid from \"../../../../../../Components/ArtworkGrid\";\nimport React, { Component } from \"react\";\nimport { createRefetchContainer, graphql } from \"react-relay\";\nimport { PaginationFragmentContainer as Pagination } from \"../../../../../../Styleguide/Components\";\nimport { Subscribe } from \"unstated\";\nimport { LoadingArea } from \"../../../../Components/LoadingArea\";\nvar PAGE_SIZE = 10;\n\nvar Artworks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Artworks, _Component);\n\n  function Artworks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Artworks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Artworks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isLoading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"loadNext\", function (filters, mediator) {\n      var _this$props$filtered_ = _this.props.filtered_artworks.artworks.pageInfo,\n          hasNextPage = _this$props$filtered_.hasNextPage,\n          endCursor = _this$props$filtered_.endCursor;\n\n      if (hasNextPage) {\n        _this.loadAfter(endCursor, filters.state.page + 1, filters, mediator);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"loadAfter\", function (cursor, page, filters, mediator) {\n      _this.toggleLoading(true);\n\n      _this.props.relay.refetch({\n        first: PAGE_SIZE,\n        after: cursor,\n        filteredArtworksNodeID: _this.props.filtered_artworks.__id\n      }, null, function (error) {\n        _this.toggleLoading(false);\n\n        filters.setPage(page, mediator);\n\n        if (error) {\n          console.error(error);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleLoading\", function (isLoading) {\n      _this.setState({\n        isLoading: isLoading\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Artworks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ContextConsumer, null, function (_ref) {\n        var user = _ref.user,\n            mediator = _ref.mediator;\n        return React.createElement(Subscribe, {\n          to: [FilterState]\n        }, function (filters) {\n          return React.createElement(LoadingArea, {\n            isLoading: _this2.state.isLoading || _this2.props.isLoading\n          }, React.createElement(ArtworkGrid, {\n            artworks: _this2.props.filtered_artworks.artworks,\n            columnCount: _this2.props.columnCount,\n            itemMargin: 40,\n            user: user,\n            mediator: mediator\n          }), React.createElement(Spacer, {\n            mb: 3\n          }), React.createElement(Box, null, React.createElement(Pagination, {\n            hasNextPage: _this2.props.filtered_artworks.artworks.pageInfo.hasNextPage,\n            pageCursors: _this2.props.filtered_artworks.artworks.pageCursors,\n            onClick: function onClick(cursor, page) {\n              _this2.loadAfter(cursor, page, filters, mediator);\n            },\n            onNext: function onNext() {\n              _this2.loadNext(filters, mediator);\n            },\n            scrollTo: \"#jump--artistArtworkGrid\"\n          })));\n        });\n      });\n    }\n  }]);\n\n  return Artworks;\n}(Component);\n\nexport var ArtworkGridRefetchContainer = createRefetchContainer(Artworks, {\n  filtered_artworks: function filtered_artworks() {\n    var node = require(\"../../../../../../__generated__/ArtworkFilterArtworkGrid_filtered_artworks.graphql\");\n\n    if (node.hash && node.hash !== \"4e1b0947dd686c7d0241e86de768a3dd\") {\n      console.error(\"The definition of 'ArtworkFilterArtworkGrid_filtered_artworks' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../../../__generated__/ArtworkFilterArtworkGrid_filtered_artworks.graphql\");\n  }\n}, function () {\n  var node = require(\"../../../../../../__generated__/ArtworkFilterArtworkGridQuery.graphql\");\n\n  if (node.hash && node.hash !== \"1f464ac8add73a88a2eddf5b985c5821\") {\n    console.error(\"The definition of 'ArtworkFilterArtworkGridQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"../../../../../../__generated__/ArtworkFilterArtworkGridQuery.graphql\");\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/ArtworkFilter/ArtworkFilterArtworkGrid.tsx"],"names":["Box","Spacer","FilterState","ContextConsumer","ArtworkGrid","React","Component","createRefetchContainer","graphql","PaginationFragmentContainer","Pagination","Subscribe","LoadingArea","PAGE_SIZE","Artworks","isLoading","filters","mediator","props","filtered_artworks","artworks","pageInfo","hasNextPage","endCursor","loadAfter","state","page","cursor","toggleLoading","relay","refetch","first","after","filteredArtworksNodeID","__id","error","setPage","console","setState","user","columnCount","pageCursors","loadNext","ArtworkGridRefetchContainer"],"mappings":"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","sourcesContent":["import { Box, Spacer } from \"@artsy/palette\"\nimport { ArtworkFilterArtworkGrid_filtered_artworks } from \"__generated__/ArtworkFilterArtworkGrid_filtered_artworks.graphql\"\nimport { FilterState } from \"Apps/Artist/Routes/Overview/state\"\nimport { ContextConsumer } from \"Artsy/Router\"\nimport ArtworkGrid from \"Components/ArtworkGrid\"\nimport React, { Component } from \"react\"\nimport { createRefetchContainer, graphql, RelayRefetchProp } from \"react-relay\"\nimport { PaginationFragmentContainer as Pagination } from \"Styleguide/Components\"\nimport { Subscribe } from \"unstated\"\n\nimport {\n  LoadingArea,\n  LoadingAreaState,\n} from \"Apps/Artist/Components/LoadingArea\"\n\ninterface Props {\n  artistID: string\n  columnCount: number\n  filters: any\n  filtered_artworks: ArtworkFilterArtworkGrid_filtered_artworks\n  isLoading?: boolean\n  relay: RelayRefetchProp\n}\n\nconst PAGE_SIZE = 10\n\nclass Artworks extends Component<Props, LoadingAreaState> {\n  state = {\n    isLoading: false,\n  }\n\n  loadNext = (filters, mediator) => {\n    const {\n      filtered_artworks: {\n        artworks: {\n          pageInfo: { hasNextPage, endCursor },\n        },\n      },\n    } = this.props\n\n    if (hasNextPage) {\n      this.loadAfter(endCursor, filters.state.page + 1, filters, mediator)\n    }\n  }\n\n  loadAfter = (cursor, page, filters, mediator) => {\n    this.toggleLoading(true)\n\n    this.props.relay.refetch(\n      {\n        first: PAGE_SIZE,\n        after: cursor,\n        filteredArtworksNodeID: this.props.filtered_artworks.__id,\n      },\n      null,\n      error => {\n        this.toggleLoading(false)\n        filters.setPage(page, mediator)\n        if (error) {\n          console.error(error)\n        }\n      }\n    )\n  }\n\n  toggleLoading = isLoading => {\n    this.setState({\n      isLoading,\n    })\n  }\n\n  render() {\n    return (\n      <ContextConsumer>\n        {({ user, mediator }) => {\n          return (\n            <Subscribe to={[FilterState]}>\n              {(filters: FilterState) => {\n                return (\n                  <LoadingArea\n                    isLoading={this.state.isLoading || this.props.isLoading}\n                  >\n                    <ArtworkGrid\n                      artworks={this.props.filtered_artworks.artworks}\n                      columnCount={this.props.columnCount}\n                      itemMargin={40}\n                      user={user}\n                      mediator={mediator}\n                    />\n\n                    <Spacer mb={3} />\n\n                    <Box>\n                      <Pagination\n                        hasNextPage={\n                          this.props.filtered_artworks.artworks.pageInfo\n                            .hasNextPage\n                        }\n                        pageCursors={\n                          this.props.filtered_artworks.artworks.pageCursors\n                        }\n                        onClick={(cursor, page) => {\n                          this.loadAfter(cursor, page, filters, mediator)\n                        }}\n                        onNext={() => {\n                          this.loadNext(filters, mediator)\n                        }}\n                        scrollTo=\"#jump--artistArtworkGrid\"\n                      />\n                    </Box>\n                  </LoadingArea>\n                )\n              }}\n            </Subscribe>\n          )\n        }}\n      </ContextConsumer>\n    )\n  }\n}\n\nexport const ArtworkGridRefetchContainer = createRefetchContainer(\n  Artworks,\n  {\n    filtered_artworks: graphql`\n      fragment ArtworkFilterArtworkGrid_filtered_artworks on FilterArtworks\n        @argumentDefinitions(\n          first: { type: \"Int\", defaultValue: 10 }\n          after: { type: \"String\", defaultValue: \"\" }\n        ) {\n        __id\n        artworks: artworks_connection(first: $first, after: $after) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          pageCursors {\n            ...Pagination_pageCursors\n          }\n          ...ArtworkGrid_artworks\n          edges {\n            node {\n              __id\n            }\n          }\n        }\n      }\n    `,\n  },\n  graphql`\n    query ArtworkFilterArtworkGridQuery(\n      $filteredArtworksNodeID: ID!\n      $first: Int!\n      $after: String\n    ) {\n      filtered_artworks: node(__id: $filteredArtworksNodeID) {\n        ...ArtworkFilterArtworkGrid_filtered_artworks\n          @arguments(first: $first, after: $after)\n      }\n    }\n  `\n)\n"]}]}
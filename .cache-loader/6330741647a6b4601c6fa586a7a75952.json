{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Order/Components/TransactionSummary.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Order/Components/TransactionSummary.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport { Box, Flex, Image, Serif, Spacer, StackableBorderBox } from \"@artsy/palette\";\nexport var TransactionSummary = function TransactionSummary(_ref) {\n  var _ref$order = _ref.order,\n      itemsTotal = _ref$order.itemsTotal,\n      taxTotal = _ref$order.taxTotal,\n      shippingTotal = _ref$order.shippingTotal,\n      buyerTotal = _ref$order.buyerTotal,\n      lineItems = _ref$order.lineItems,\n      name = _ref$order.seller.name,\n      others = _objectWithoutProperties(_ref, [\"order\"]);\n\n  var _lineItems$edges$0$no = lineItems.edges[0].node.artwork,\n      artist_names = _lineItems$edges$0$no.artist_names,\n      title = _lineItems$edges$0$no.title,\n      date = _lineItems$edges$0$no.date,\n      shippingOrigin = _lineItems$edges$0$no.shippingOrigin,\n      imageURL = _lineItems$edges$0$no.image.resized_transactionSummary.url;\n  var truncateTextStyle = {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  };\n  return React.createElement(Flex, _extends({\n    flexDirection: \"column\"\n  }, others), React.createElement(StackableBorderBox, {\n    flexDirection: \"row\"\n  }, React.createElement(Box, {\n    height: \"auto\"\n  }, React.createElement(Image, {\n    src: imageURL,\n    width: \"55px\",\n    mr: 1\n  })), React.createElement(Flex, {\n    flexDirection: \"column\",\n    style: {\n      overflow: \"hidden\"\n    }\n  }, React.createElement(Serif, {\n    size: \"2\",\n    weight: \"semibold\",\n    color: \"black60\",\n    style: truncateTextStyle\n  }, artist_names), React.createElement(\"div\", {\n    style: _objectSpread({\n      lineHeight: \"1\"\n    }, truncateTextStyle)\n  }, React.createElement(Serif, {\n    italic: true,\n    size: \"2\",\n    color: \"black60\",\n    display: \"inline\"\n  }, title), React.createElement(Serif, {\n    size: \"2\",\n    color: \"black60\",\n    display: \"inline\"\n  }, date && \", \".concat(date))), React.createElement(Serif, {\n    size: \"2\",\n    color: \"black60\",\n    style: truncateTextStyle\n  }, name), React.createElement(Serif, {\n    size: \"2\",\n    color: \"black60\"\n  }, shippingOrigin))), React.createElement(StackableBorderBox, {\n    flexDirection: \"column\"\n  }, React.createElement(Entry, {\n    label: \"Price\",\n    value: itemsTotal\n  }), React.createElement(Entry, {\n    label: \"Shipping\",\n    value: shippingTotal || \"—\"\n  }), React.createElement(Entry, {\n    label: \"Tax\",\n    value: taxTotal || \"—\"\n  }), React.createElement(Spacer, {\n    mb: 2\n  }), React.createElement(Entry, {\n    label: \"Total\",\n    value: buyerTotal,\n    final: true\n  })));\n};\n\nvar Entry = function Entry(_ref2) {\n  var label = _ref2.label,\n      value = _ref2.value,\n      final = _ref2.final;\n  return React.createElement(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\"\n  }, React.createElement(\"div\", null, React.createElement(Serif, {\n    size: \"2\",\n    color: \"black60\"\n  }, label)), React.createElement(\"div\", null, React.createElement(Serif, {\n    size: \"2\",\n    color: final ? \"black100\" : \"black60\",\n    weight: final ? \"semibold\" : \"regular\"\n  }, value)));\n};\n\nexport var TransactionSummaryFragmentContainer = createFragmentContainer(TransactionSummary, {\n  order: function order() {\n    var node = require(\"../../../__generated__/TransactionSummary_order.graphql\");\n\n    if (node.hash && node.hash !== \"b1bca64da23052b3b24693f5869d738e\") {\n      console.error(\"The definition of 'TransactionSummary_order' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../__generated__/TransactionSummary_order.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Order/Components/TransactionSummary.tsx"],"names":["React","createFragmentContainer","graphql","Box","Flex","Image","Serif","Spacer","StackableBorderBox","TransactionSummary","order","itemsTotal","taxTotal","shippingTotal","buyerTotal","lineItems","name","seller","others","edges","node","artwork","artist_names","title","date","shippingOrigin","imageURL","image","resized_transactionSummary","url","truncateTextStyle","whiteSpace","overflow","textOverflow","lineHeight","Entry","label","value","final","TransactionSummaryFragmentContainer"],"mappings":"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","sourcesContent":["import { TransactionSummary_order } from \"__generated__/TransactionSummary_order.graphql\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\n\nimport {\n  Box,\n  Flex,\n  FlexProps,\n  Image,\n  Serif,\n  Spacer,\n  StackableBorderBox,\n} from \"@artsy/palette\"\n\nexport interface TransactionSummaryProps extends FlexProps {\n  order: TransactionSummary_order\n}\n\nexport const TransactionSummary: React.SFC<TransactionSummaryProps> = ({\n  order: {\n    itemsTotal,\n    taxTotal,\n    shippingTotal,\n    buyerTotal,\n    lineItems,\n    seller: { name },\n  },\n  ...others\n}) => {\n  const {\n    artist_names,\n    title,\n    date,\n    shippingOrigin,\n    image: {\n      resized_transactionSummary: { url: imageURL },\n    },\n  } = lineItems.edges[0].node.artwork\n  const truncateTextStyle = {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  } as any\n\n  return (\n    <Flex flexDirection=\"column\" {...others}>\n      <StackableBorderBox flexDirection=\"row\">\n        <Box height=\"auto\">\n          <Image src={imageURL} width=\"55px\" mr={1} />\n        </Box>\n        <Flex flexDirection=\"column\" style={{ overflow: \"hidden\" }}>\n          <Serif\n            size=\"2\"\n            weight=\"semibold\"\n            color=\"black60\"\n            style={truncateTextStyle}\n          >\n            {artist_names}\n          </Serif>\n          <div\n            style={{\n              lineHeight: \"1\",\n              ...truncateTextStyle,\n            }}\n          >\n            <Serif italic size=\"2\" color=\"black60\" display=\"inline\">\n              {title}\n            </Serif>\n            <Serif size=\"2\" color=\"black60\" display=\"inline\">\n              {date && `, ${date}`}\n            </Serif>\n          </div>\n          <Serif size=\"2\" color=\"black60\" style={truncateTextStyle}>\n            {name}\n          </Serif>\n          <Serif size=\"2\" color=\"black60\">\n            {shippingOrigin}\n          </Serif>\n        </Flex>\n      </StackableBorderBox>\n      <StackableBorderBox flexDirection=\"column\">\n        <Entry label=\"Price\" value={itemsTotal} />\n        <Entry label=\"Shipping\" value={shippingTotal || \"—\"} />\n        <Entry label=\"Tax\" value={taxTotal || \"—\"} />\n        <Spacer mb={2} />\n        <Entry label=\"Total\" value={buyerTotal} final />\n      </StackableBorderBox>\n    </Flex>\n  )\n}\n\nconst Entry = ({\n  label,\n  value,\n  final,\n}: {\n  label: React.ReactNode\n  value: React.ReactNode\n  final?: boolean\n}) => (\n  <Flex justifyContent=\"space-between\" alignItems=\"baseline\">\n    <div>\n      <Serif size=\"2\" color=\"black60\">\n        {label}\n      </Serif>\n    </div>\n    <div>\n      <Serif\n        size=\"2\"\n        color={final ? \"black100\" : \"black60\"}\n        weight={final ? \"semibold\" : \"regular\"}\n      >\n        {value}\n      </Serif>\n    </div>\n  </Flex>\n)\n\nexport const TransactionSummaryFragmentContainer = createFragmentContainer(\n  TransactionSummary,\n  graphql`\n    fragment TransactionSummary_order on Order {\n      shippingTotal\n      taxTotal\n      itemsTotal\n      buyerTotal\n      seller {\n        ... on Partner {\n          name\n        }\n      }\n      lineItems {\n        edges {\n          node {\n            artwork {\n              artist_names\n              title\n              date\n              shippingOrigin\n              image {\n                resized_transactionSummary: resized(width: 55) {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `\n)\n"]}]}
{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artwork/Components/ArtworkSidebar/ArtworkSidebarBidAction.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artwork/Components/ArtworkSidebar/ArtworkSidebarBidAction.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Box, Button, Flex, Serif } from \"@artsy/palette\";\nimport { Help } from \"../../../../Assets/Icons/Help\";\nimport { Tooltip } from \"../../../../Components/Tooltip\";\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nexport var ArtworkSidebarBidAction =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArtworkSidebarBidAction, _React$Component);\n\n  function ArtworkSidebarBidAction() {\n    _classCallCheck(this, ArtworkSidebarBidAction);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ArtworkSidebarBidAction).apply(this, arguments));\n  }\n\n  _createClass(ArtworkSidebarBidAction, [{\n    key: \"render\",\n    value: function render() {\n      var artwork = this.props.artwork;\n      var registrationAttempted = !!artwork.sale.registrationStatus;\n      var registeredToBid = registrationAttempted && artwork.sale.registrationStatus.qualified_for_bidding;\n      /**\n       * NOTE: This is making an incorrect assumption that there could only ever\n       *       be 1 live sale with this work. When we run into that case, there is\n       *       likely design work to be done too, so we can adjust this then.\n       */\n\n      var myLotStanding = artwork.myLotStanding && artwork.myLotStanding[0];\n      var hasPreviousBids = !!(myLotStanding && myLotStanding.active_bid);\n\n      if (artwork.sale.is_preview) {\n        return React.createElement(Box, null, !registrationAttempted && React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1\n        }, \"Register to bid\"), registrationAttempted && !registeredToBid && React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1,\n          disabled: true\n        }, \"Registration pending\"), registrationAttempted && registeredToBid && React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1,\n          disabled: true\n        }, \"Registration complete\"));\n      }\n\n      if (artwork.sale.is_live_open) {\n        return React.createElement(Box, null, artwork.sale.is_registration_closed && !registeredToBid ? React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1,\n          disabled: true\n        }, \"Registration closed\") : React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1\n        }, \"Enter live bidding\"));\n      }\n\n      if (artwork.sale.is_open) {\n        return React.createElement(Box, null, registrationAttempted && !registeredToBid && React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1,\n          disabled: true\n        }, \"Registration pending\"), !artwork.sale.is_registration_closed && !registrationAttempted || registeredToBid ? React.createElement(Box, null, React.createElement(Flex, {\n          width: \"100%\",\n          flexDirection: \"row\"\n        }, React.createElement(Serif, {\n          size: \"3t\",\n          color: \"black100\"\n        }, \"Place max bid\"), React.createElement(Tooltip, {\n          message: \"Set the maximum amount you would like Artsy to bid up to on your behalf\"\n        }, React.createElement(Help, null))), React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1\n        }, hasPreviousBids ? \"Increase max bid\" : \"Bid\")) : React.createElement(Button, {\n          width: \"100%\",\n          size: \"medium\",\n          mt: 1,\n          disabled: true\n        }, \"Registration closed\"));\n      }\n\n      return null;\n    }\n  }]);\n\n  return ArtworkSidebarBidAction;\n}(React.Component);\nexport var ArtworkSidebarBidActionFragmentContainer = createFragmentContainer(ArtworkSidebarBidAction, {\n  artwork: function artwork() {\n    var node = require(\"../../../../__generated__/ArtworkSidebarBidAction_artwork.graphql\");\n\n    if (node.hash && node.hash !== \"0c13eb232a51adf1298a9db92aedd3fb\") {\n      console.error(\"The definition of 'ArtworkSidebarBidAction_artwork' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/ArtworkSidebarBidAction_artwork.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artwork/Components/ArtworkSidebar/ArtworkSidebarBidAction.tsx"],"names":["Box","Button","Flex","Serif","Help","Tooltip","React","createFragmentContainer","graphql","ArtworkSidebarBidAction","artwork","props","registrationAttempted","sale","registrationStatus","registeredToBid","qualified_for_bidding","myLotStanding","hasPreviousBids","active_bid","is_preview","is_live_open","is_registration_closed","is_open","Component","ArtworkSidebarBidActionFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Serif } from \"@artsy/palette\"\nimport { Help } from \"Assets/Icons/Help\"\nimport { Tooltip } from \"Components/Tooltip\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\n\nimport { ArtworkSidebarBidAction_artwork } from \"__generated__/ArtworkSidebarBidAction_artwork.graphql\"\n\nexport interface ArtworkSidebarBidActionProps {\n  artwork: ArtworkSidebarBidAction_artwork\n}\n\nexport class ArtworkSidebarBidAction extends React.Component<\n  ArtworkSidebarBidActionProps\n> {\n  render() {\n    const { artwork } = this.props\n    const registrationAttempted = !!artwork.sale.registrationStatus\n    const registeredToBid =\n      registrationAttempted &&\n      artwork.sale.registrationStatus.qualified_for_bidding\n\n    /**\n     * NOTE: This is making an incorrect assumption that there could only ever\n     *       be 1 live sale with this work. When we run into that case, there is\n     *       likely design work to be done too, so we can adjust this then.\n     */\n    const myLotStanding = artwork.myLotStanding && artwork.myLotStanding[0]\n    const hasPreviousBids = !!(myLotStanding && myLotStanding.active_bid)\n\n    if (artwork.sale.is_preview) {\n      return (\n        <Box>\n          {!registrationAttempted && (\n            <Button width=\"100%\" size=\"medium\" mt={1}>\n              Register to bid\n            </Button>\n          )}\n          {registrationAttempted &&\n            !registeredToBid && (\n              <Button width=\"100%\" size=\"medium\" mt={1} disabled>\n                Registration pending\n              </Button>\n            )}\n          {registrationAttempted &&\n            registeredToBid && (\n              <Button width=\"100%\" size=\"medium\" mt={1} disabled>\n                Registration complete\n              </Button>\n            )}\n        </Box>\n      )\n    }\n\n    if (artwork.sale.is_live_open) {\n      return (\n        <Box>\n          {artwork.sale.is_registration_closed && !registeredToBid ? (\n            <Button width=\"100%\" size=\"medium\" mt={1} disabled>\n              Registration closed\n            </Button>\n          ) : (\n            <Button width=\"100%\" size=\"medium\" mt={1}>\n              Enter live bidding\n            </Button>\n          )}\n        </Box>\n      )\n    }\n\n    if (artwork.sale.is_open) {\n      return (\n        <Box>\n          {registrationAttempted &&\n            !registeredToBid && (\n              <Button width=\"100%\" size=\"medium\" mt={1} disabled>\n                Registration pending\n              </Button>\n            )}\n          {(!artwork.sale.is_registration_closed && !registrationAttempted) ||\n          registeredToBid ? (\n            <Box>\n              <Flex width=\"100%\" flexDirection=\"row\">\n                <Serif size=\"3t\" color=\"black100\">\n                  Place max bid\n                </Serif>\n                <Tooltip message=\"Set the maximum amount you would like Artsy to bid up to on your behalf\">\n                  <Help />\n                </Tooltip>\n              </Flex>\n              <Button width=\"100%\" size=\"medium\" mt={1}>\n                {hasPreviousBids ? \"Increase max bid\" : \"Bid\"}\n              </Button>\n            </Box>\n          ) : (\n            <Button width=\"100%\" size=\"medium\" mt={1} disabled>\n              Registration closed\n            </Button>\n          )}\n        </Box>\n      )\n    }\n\n    return null\n  }\n}\n\nexport const ArtworkSidebarBidActionFragmentContainer = createFragmentContainer(\n  ArtworkSidebarBidAction,\n  graphql`\n    fragment ArtworkSidebarBidAction_artwork on Artwork {\n      myLotStanding(live: true) {\n        active_bid {\n          __id\n        }\n      }\n      sale {\n        registrationStatus {\n          qualified_for_bidding\n        }\n        is_preview\n        is_open\n        is_live_open\n        is_closed\n        is_registration_closed\n      }\n      sale_artwork {\n        increments {\n          display\n        }\n      }\n    }\n  `\n)\n"]}]}
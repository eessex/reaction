{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Gene/Artists.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Gene/Artists.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { avantgarde } from \"../../Assets/Fonts\";\nimport * as React from \"react\";\nimport { createPaginationContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nimport Dropdown from \"../ArtworkFilter/Dropdown\";\nimport ForSaleCheckbox from \"../ArtworkFilter/ForSaleCheckbox\";\nimport { ButtonState } from \"../Buttons/Default\";\nimport Button from \"../Buttons/Ghost\";\nimport Spinner from \"../Spinner\";\nimport ArtistRow from \"./ArtistRow\";\nvar PageSize = 10;\nvar ArtistRowsContainer = styled.div.withConfig({\n  displayName: \"Artists__ArtistRowsContainer\",\n  componentId: \"s1cxaa3m-0\"\n})([\"margin:40px 0 20px;\"]);\nvar LoadMoreContainer = styled.div.withConfig({\n  displayName: \"Artists__LoadMoreContainer\",\n  componentId: \"s1cxaa3m-1\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nvar LoadMoreButton = styled.a.withConfig({\n  displayName: \"Artists__LoadMoreButton\",\n  componentId: \"s1cxaa3m-2\"\n})([\"font-family:\", \";cursor:pointer;text-transform:uppercase;border-bottom:2px solid transparent;&:hover{border-bottom:2px solid black;}\"], avantgarde(\"s13\"));\nvar SpinnerContainer = styled.div.withConfig({\n  displayName: \"Artists__SpinnerContainer\",\n  componentId: \"s1cxaa3m-3\"\n})([\"width:100%;height:100px;position:relative;\"]);\nvar ArtistFilterButtons = styled.div.withConfig({\n  displayName: \"Artists__ArtistFilterButtons\",\n  componentId: \"s1cxaa3m-4\"\n})([\"margin-right:10px;button{height:52px;padding:16px;}\"]);\nvar FilterBar = styled.div.withConfig({\n  displayName: \"Artists__FilterBar\",\n  componentId: \"s1cxaa3m-5\"\n})([\"vertical-align:middle;text-align:center;> div{display:inline-block;}\"]);\nexport var Artists =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Artists, _React$Component);\n\n  function Artists() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Artists);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Artists)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      loading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Artists, [{\n    key: \"loadMoreArtists\",\n    value: function loadMoreArtists() {\n      var _this2 = this;\n\n      var hasMore = this.props.gene.artists.pageInfo.hasNextPage;\n\n      if (!this.state.loading && hasMore) {\n        this.setState({\n          loading: true\n        }, function () {\n          _this2.props.relay.loadMore(PageSize, function (error) {\n            _this2.setState({\n              loading: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"renderForSaleToggle\",\n    value: function renderForSaleToggle() {\n      return React.createElement(ForSaleCheckbox, {\n        checked: false,\n        onChange: this.props.onForSaleToggleSelected\n      });\n    }\n  }, {\n    key: \"renderArtistFilter\",\n    value: function renderArtistFilter() {\n      return React.createElement(ArtistFilterButtons, null, React.createElement(\"span\", null, \"By Artists:\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return null;\n        },\n        state: ButtonState.Success\n      }, \"All Artists\"), React.createElement(\"span\", null, \"By Work:\"));\n    }\n  }, {\n    key: \"renderArtistDropdown\",\n    value: function renderArtistDropdown() {\n      var _this3 = this;\n\n      return this.props.gene.filter_aggregations.aggregations.map(function (aggregation) {\n        return React.createElement(Dropdown, {\n          aggregation: aggregation,\n          key: aggregation.slice,\n          selected: aggregation.slice && _this3.state[aggregation.slice.toLowerCase()],\n          onSelected: _this3.props.onDropdownSelected\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var artists = this.props.gene.artists;\n      var artistRows = artists.edges.map(function (edge) {\n        return React.createElement(ArtistRow, {\n          artist: edge.node,\n          key: edge.node.__id\n        });\n      });\n      var loadMoreButton = React.createElement(LoadMoreContainer, null, React.createElement(LoadMoreButton, {\n        onClick: function onClick() {\n          return _this4.loadMoreArtists();\n        }\n      }, \"Load More\"));\n      return React.createElement(\"div\", null, React.createElement(FilterBar, null, this.renderArtistFilter(), this.renderForSaleToggle(), this.renderArtistDropdown()), React.createElement(ArtistRowsContainer, null, artistRows, React.createElement(SpinnerContainer, null, this.state.loading ? React.createElement(Spinner, null) : \"\"), artists && artists.pageInfo.hasNextPage && !this.state.loading && loadMoreButton));\n    }\n  }]);\n\n  return Artists;\n}(React.Component);\nexport default createPaginationContainer(Artists, {\n  gene: function gene() {\n    var node = require(\"../../__generated__/Artists_gene.graphql\");\n\n    if (node.hash && node.hash !== \"c21a21d79040bd329707d9e8f2d6f805\") {\n      console.error(\"The definition of 'Artists_gene' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/Artists_gene.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.gene.artists;\n  },\n  getFragmentVariables: function getFragmentVariables(prevVars, totalCount) {\n    return _objectSpread({}, prevVars, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(props, _ref, fragmentVariables) {\n    var count = _ref.count,\n        cursor = _ref.cursor;\n    return _objectSpread({}, fragmentVariables, {\n      count: count,\n      cursor: cursor,\n      geneNodeID: props.gene.__id\n    });\n  },\n  query: function query() {\n    var node = require(\"../../__generated__/ArtistsQuery.graphql\");\n\n    if (node.hash && node.hash !== \"d9a3bfe133d142f393f301f23f2665cf\") {\n      console.error(\"The definition of 'ArtistsQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/ArtistsQuery.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Gene/Artists.tsx"],"names":["avantgarde","React","createPaginationContainer","graphql","styled","Dropdown","ForSaleCheckbox","ButtonState","Button","Spinner","ArtistRow","PageSize","ArtistRowsContainer","div","LoadMoreContainer","LoadMoreButton","a","SpinnerContainer","ArtistFilterButtons","FilterBar","Artists","loading","hasMore","props","gene","artists","pageInfo","hasNextPage","state","setState","relay","loadMore","error","onForSaleToggleSelected","Success","filter_aggregations","aggregations","map","aggregation","slice","toLowerCase","onDropdownSelected","artistRows","edges","edge","node","__id","loadMoreButton","loadMoreArtists","renderArtistFilter","renderForSaleToggle","renderArtistDropdown","Component","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","fragmentVariables","cursor","geneNodeID","query"],"mappings":"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","sourcesContent":["import { Artists_gene } from \"__generated__/Artists_gene.graphql\"\nimport { avantgarde } from \"Assets/Fonts\"\nimport * as React from \"react\"\nimport {\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\nimport Dropdown from \"../ArtworkFilter/Dropdown\"\nimport ForSaleCheckbox from \"../ArtworkFilter/ForSaleCheckbox\"\nimport { ButtonState } from \"../Buttons/Default\"\nimport Button from \"../Buttons/Ghost\"\nimport Spinner from \"../Spinner\"\nimport ArtistRow from \"./ArtistRow\"\n\nconst PageSize = 10\n\ninterface Props {\n  relay: RelayPaginationProp\n  gene: Artists_gene\n  onDropdownSelected: (slice: string, value: string) => void\n  onForSaleToggleSelected: () => void\n}\n\ninterface State {\n  loading: boolean\n}\n\nconst ArtistRowsContainer = styled.div`\n  margin: 40px 0 20px;\n`\n\nconst LoadMoreContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LoadMoreButton = styled.a`\n  font-family: ${avantgarde(\"s13\")};\n  cursor: pointer;\n  text-transform: uppercase;\n  border-bottom: 2px solid transparent;\n\n  &:hover {\n    border-bottom: 2px solid black;\n  }\n`\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`\n\nconst ArtistFilterButtons = styled.div`\n  margin-right: 10px;\n\n  button {\n    height: 52px;\n    padding: 16px;\n  }\n`\n\nconst FilterBar = styled.div`\n  vertical-align: middle;\n  text-align: center;\n\n  > div {\n    display: inline-block;\n  }\n`\n\nexport class Artists extends React.Component<Props, State> {\n  state = {\n    loading: false,\n  }\n\n  loadMoreArtists() {\n    const hasMore = this.props.gene.artists.pageInfo.hasNextPage\n    if (!this.state.loading && hasMore) {\n      this.setState({ loading: true }, () => {\n        this.props.relay.loadMore(PageSize, error => {\n          this.setState({ loading: false })\n        })\n      })\n    }\n  }\n\n  renderForSaleToggle() {\n    return (\n      <ForSaleCheckbox\n        checked={false}\n        onChange={this.props.onForSaleToggleSelected}\n      />\n    )\n  }\n\n  renderArtistFilter() {\n    return (\n      <ArtistFilterButtons>\n        <span>By Artists:</span>\n        <Button\n          onClick={() => {\n            return null\n          }}\n          state={ButtonState.Success}\n        >\n          All Artists\n        </Button>\n        <span>By Work:</span>\n      </ArtistFilterButtons>\n    )\n  }\n\n  renderArtistDropdown() {\n    return this.props.gene.filter_aggregations.aggregations.map(aggregation => {\n      return (\n        <Dropdown\n          aggregation={aggregation}\n          key={aggregation.slice}\n          selected={\n            aggregation.slice && this.state[aggregation.slice.toLowerCase()]\n          }\n          onSelected={this.props.onDropdownSelected}\n        />\n      )\n    })\n  }\n\n  render() {\n    const artists = this.props.gene.artists\n\n    const artistRows = artists.edges.map(edge => {\n      return <ArtistRow artist={edge.node} key={edge.node.__id} />\n    })\n\n    const loadMoreButton = (\n      <LoadMoreContainer>\n        <LoadMoreButton onClick={() => this.loadMoreArtists()}>\n          Load More\n        </LoadMoreButton>\n      </LoadMoreContainer>\n    )\n\n    return (\n      <div>\n        <FilterBar>\n          {this.renderArtistFilter()}\n          {this.renderForSaleToggle()}\n          {this.renderArtistDropdown()}\n        </FilterBar>\n        <ArtistRowsContainer>\n          {artistRows}\n          <SpinnerContainer>\n            {this.state.loading ? <Spinner /> : \"\"}\n          </SpinnerContainer>\n          {artists &&\n            artists.pageInfo.hasNextPage &&\n            !this.state.loading &&\n            loadMoreButton}\n        </ArtistRowsContainer>\n      </div>\n    )\n  }\n}\n\nexport default createPaginationContainer(\n  Artists,\n  {\n    gene: graphql`\n      fragment Artists_gene on Gene\n        @argumentDefinitions(\n          aggregations: {\n            type: \"[ArtworkAggregation]\"\n            defaultValue: [MEDIUM, TOTAL, PRICE_RANGE, DIMENSION_RANGE]\n          }\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\", defaultValue: \"\" }\n        ) {\n        __id\n        artists: artists_connection(first: $count, after: $cursor)\n          @connection(key: \"Artists_artists\") {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            node {\n              __id\n              ...ArtistRow_artist\n            }\n          }\n        }\n        filter_aggregations: filtered_artworks(\n          aggregations: $aggregations\n          size: 0\n          include_medium_filter_in_aggregation: true\n        ) {\n          ...TotalCount_filter_artworks\n          aggregations {\n            slice\n            ...Dropdown_aggregation\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.gene.artists\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return {\n        ...prevVars,\n        count: totalCount,\n      }\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n        geneNodeID: props.gene.__id,\n      }\n    },\n    query: graphql`\n      query ArtistsQuery(\n        $geneNodeID: ID!\n        $count: Int!\n        $cursor: String\n        $aggregations: [ArtworkAggregation]\n      ) {\n        node(__id: $geneNodeID) {\n          ...Artists_gene\n            @arguments(\n              count: $count\n              cursor: $cursor\n              aggregations: $aggregations\n            )\n        }\n      }\n    `,\n  }\n)\n"]}]}
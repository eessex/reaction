{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Components/Stepper.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Components/Stepper.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { color, Flex, Sans, space } from \"@artsy/palette\";\nimport { CheckIcon } from \"../../Assets/Icons/CheckIcon\";\nimport { ChevronIcon } from \"../../Assets/Icons/ChevronIcon\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Tab, Tabs } from \"./\";\nimport { styles } from \"./Tabs\";\nexport var Stepper = function Stepper(props) {\n  return React.createElement(Tabs // This key is required to ensure the tab state updates with\n  // the currentStepIndex change\n  , _extends({\n    key: props.currentStepIndex,\n    separator: React.createElement(ChevronWrapper, null, React.createElement(ChevronIcon, {\n      fill: color(\"black60\")\n    })),\n    transformTabBtn: transformTabBtn\n  }, props));\n};\nexport var Step = function Step(props) {\n  return React.createElement(Tab, props);\n};\n\nvar DisabledStepButton = function DisabledStepButton(_ref) {\n  var children = _ref.children;\n  return React.createElement(DisabledStepContainer, null, React.createElement(Sans, {\n    size: \"3t\",\n    color: \"black30\"\n  }, children));\n};\n\nvar transformTabBtn = function transformTabBtn(element, tabIndex, props) {\n  var currentStepIndex = props.currentStepIndex,\n      _props$initialTabInde = props.initialTabIndex,\n      initialTabIndex = _props$initialTabInde === void 0 ? 0 : _props$initialTabInde,\n      disableNavigation = props.disableNavigation;\n  var returnDisabledButton = disableNavigation && tabIndex !== initialTabIndex;\n  var disabledButton = React.createElement(DisabledStepButton, {\n    key: tabIndex\n  }, element.props.children); // Don't allow users to jump ahead\n\n  if (tabIndex > currentStepIndex) {\n    return disabledButton; // Step done\n  } else if (currentStepIndex && tabIndex < currentStepIndex) {\n    return React.createElement(Flex, {\n      key: tabIndex\n    }, React.createElement(CheckMarkWrapper, null, React.createElement(CheckIcon, {\n      fill: color(\"green100\")\n    })), returnDisabledButton && tabIndex !== initialTabIndex ? disabledButton : element, React.createElement(\"div\", null), \" \"); // Disabled\n  } else if (returnDisabledButton) {\n    return disabledButton; // Step\n  } else {\n    return element;\n  }\n};\n\nvar ChevronWrapper = styled.span.withConfig({\n  displayName: \"Stepper__ChevronWrapper\",\n  componentId: \"s108db6t-0\"\n})([\"margin:0 \", \"px;line-height:normal;\"], space(2));\nvar CheckMarkWrapper = styled.span.withConfig({\n  displayName: \"Stepper__CheckMarkWrapper\",\n  componentId: \"s108db6t-1\"\n})([\"margin-right:\", \"px;line-height:normal;\"], space(1));\nvar DisabledStepContainer = styled.div.withConfig({\n  displayName: \"Stepper__DisabledStepContainer\",\n  componentId: \"s108db6t-2\"\n})([\"\", \";cursor:default;\"], styles.tabContainer);",{"version":3,"sources":["/Users/eve/development/reaction/src/Styleguide/Components/Stepper.tsx"],"names":["color","Flex","Sans","space","CheckIcon","ChevronIcon","React","styled","Tab","Tabs","styles","Stepper","props","currentStepIndex","transformTabBtn","Step","DisabledStepButton","children","element","tabIndex","initialTabIndex","disableNavigation","returnDisabledButton","disabledButton","ChevronWrapper","span","CheckMarkWrapper","DisabledStepContainer","div","tabContainer"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAyC,gBAAzC;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,EAAcC,IAAd;AACA,SAASC,MAAT;AAYA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAyB;AAC9C,SACE,oBAAC,IAAD,CACE;AACA;AAFF;AAGE,IAAA,GAAG,EAAEA,KAAK,CAACC,gBAHb;AAIE,IAAA,SAAS,EACP,oBAAC,cAAD,QACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEb,KAAK,CAAC,SAAD;AAAxB,MADF,CALJ;AASE,IAAA,eAAe,EAAEc;AATnB,KAUMF,KAVN,EADF;AAcD,CAfM;AAiBP,OAAO,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAAAH,KAAK;AAAA,SAAI,oBAAC,GAAD,EAASA,KAAT,CAAJ;AAAA,CAAlB;;AAEP,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACzB,oBAAC,qBAAD,QACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACGA,QADH,CADF,CADyB;AAAA,CAA3B;;AAQA,IAAMH,eAAe,GAAG,SAAlBA,eAAkB,CACtBI,OADsB,EAEtBC,QAFsB,EAGtBP,KAHsB,EAIN;AAAA,MACRC,gBADQ,GACqDD,KADrD,CACRC,gBADQ;AAAA,8BACqDD,KADrD,CACUQ,eADV;AAAA,MACUA,eADV,sCAC4B,CAD5B;AAAA,MAC+BC,iBAD/B,GACqDT,KADrD,CAC+BS,iBAD/B;AAEhB,MAAMC,oBAAoB,GAAGD,iBAAiB,IAAIF,QAAQ,KAAKC,eAA/D;AAEA,MAAMG,cAAc,GAClB,oBAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEJ;AAAzB,KACGD,OAAO,CAACN,KAAR,CAAcK,QADjB,CADF,CAJgB,CAUhB;;AACA,MAAIE,QAAQ,GAAGN,gBAAf,EAAiC;AAC/B,WAAOU,cAAP,CAD+B,CAG/B;AACD,GAJD,MAIO,IAAIV,gBAAgB,IAAIM,QAAQ,GAAGN,gBAAnC,EAAqD;AAC1D,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEM;AAAX,OACE,oBAAC,gBAAD,QACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEnB,KAAK,CAAC,UAAD;AAAtB,MADF,CADF,EAIGsB,oBAAoB,IAAIH,QAAQ,KAAKC,eAArC,GACGG,cADH,GAEGL,OANN,EAOE,gCAPF,MADF,CAD0D,CAY1D;AACD,GAbM,MAaA,IAAII,oBAAJ,EAA0B;AAC/B,WAAOC,cAAP,CAD+B,CAG/B;AACD,GAJM,MAIA;AACL,WAAOL,OAAP;AACD;AACF,CAvCD;;AAyCA,IAAMM,cAAc,GAAGjB,MAAM,CAACkB,IAAV;AAAA;AAAA;AAAA,4CACNtB,KAAK,CAAC,CAAD,CADC,CAApB;AAKA,IAAMuB,gBAAgB,GAAGnB,MAAM,CAACkB,IAAV;AAAA;AAAA;AAAA,gDACJtB,KAAK,CAAC,CAAD,CADD,CAAtB;AAKA,IAAMwB,qBAAqB,GAAGpB,MAAM,CAACqB,GAAV;AAAA;AAAA;AAAA,6BACvBlB,MAAM,CAACmB,YADgB,CAA3B","sourcesContent":["import { color, Flex, Sans, space } from \"@artsy/palette\"\nimport { CheckIcon } from \"Assets/Icons/CheckIcon\"\nimport { ChevronIcon } from \"Assets/Icons/ChevronIcon\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Tab, Tabs, TabsProps } from \"Styleguide/Components\"\nimport { styles } from \"./Tabs\"\n\ninterface StepperProps extends TabsProps {\n  /** The initial step stepper renders */\n  initialTabIndex?: number\n\n  /** The step user currently is at (e.g. previous steps completed) */\n  currentStepIndex: number\n\n  disableNavigation?: boolean\n}\n\nexport const Stepper = (props: StepperProps) => {\n  return (\n    <Tabs\n      // This key is required to ensure the tab state updates with\n      // the currentStepIndex change\n      key={props.currentStepIndex}\n      separator={\n        <ChevronWrapper>\n          <ChevronIcon fill={color(\"black60\")} />\n        </ChevronWrapper>\n      }\n      transformTabBtn={transformTabBtn}\n      {...props}\n    />\n  )\n}\n\nexport const Step = props => <Tab {...props} />\n\nconst DisabledStepButton = ({ children }) => (\n  <DisabledStepContainer>\n    <Sans size=\"3t\" color=\"black30\">\n      {children}\n    </Sans>\n  </DisabledStepContainer>\n)\n\nconst transformTabBtn = (\n  element: JSX.Element,\n  tabIndex: number,\n  props: any\n): JSX.Element => {\n  const { currentStepIndex, initialTabIndex = 0, disableNavigation } = props\n  const returnDisabledButton = disableNavigation && tabIndex !== initialTabIndex\n\n  const disabledButton = (\n    <DisabledStepButton key={tabIndex}>\n      {element.props.children}\n    </DisabledStepButton>\n  )\n\n  // Don't allow users to jump ahead\n  if (tabIndex > currentStepIndex) {\n    return disabledButton\n\n    // Step done\n  } else if (currentStepIndex && tabIndex < currentStepIndex) {\n    return (\n      <Flex key={tabIndex}>\n        <CheckMarkWrapper>\n          <CheckIcon fill={color(\"green100\")} />\n        </CheckMarkWrapper>\n        {returnDisabledButton && tabIndex !== initialTabIndex\n          ? disabledButton\n          : element}\n        <div /> {/* hack for getting rid of last-child in Tabs.tsx */}\n      </Flex>\n    )\n    // Disabled\n  } else if (returnDisabledButton) {\n    return disabledButton\n\n    // Step\n  } else {\n    return element\n  }\n}\n\nconst ChevronWrapper = styled.span`\n  margin: 0 ${space(2)}px;\n  line-height: normal;\n`\n\nconst CheckMarkWrapper = styled.span`\n  margin-right: ${space(1)}px;\n  line-height: normal;\n`\n\nconst DisabledStepContainer = styled.div`\n  ${styles.tabContainer};\n  cursor: default;\n`\n"]}]}
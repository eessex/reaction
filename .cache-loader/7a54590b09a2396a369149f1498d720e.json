{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Gene/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Gene/index.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _graphql, _graphql2;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { graphql, QueryRenderer } from \"react-relay\";\nimport { withContext } from \"../../Artsy/SystemContext\";\nimport Artists from \"./Artists\";\nimport GeneArtworks from \"./GeneArtworks\";\n\nvar GeneContents =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneContents, _React$Component);\n\n  function GeneContents(props) {\n    var _this;\n\n    _classCallCheck(this, GeneContents);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeneContents).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleStateChange\", function () {\n      var _this$state = _this.state,\n          for_sale = _this$state.for_sale,\n          medium = _this$state.medium,\n          price_range = _this$state.price_range,\n          dimension_range = _this$state.dimension_range,\n          sort = _this$state.sort,\n          mode = _this$state.mode;\n      var filters = {\n        for_sale: for_sale,\n        medium: medium,\n        price_range: price_range,\n        dimension_range: dimension_range\n      };\n\n      _this.props.onStateChange({\n        filters: filters,\n        sort: sort,\n        mode: mode\n      });\n    });\n\n    var _this$props$filters = _this.props.filters,\n        _for_sale = _this$props$filters.for_sale,\n        _price_range = _this$props$filters.price_range,\n        _dimension_range = _this$props$filters.dimension_range,\n        _medium = _this$props$filters.medium;\n    _this.state = {\n      for_sale: _for_sale || null,\n      medium: _medium || \"*\",\n      price_range: _price_range || \"*\",\n      dimension_range: _dimension_range || \"*\",\n      mode: props.mode,\n      sort: props.sort || \"-partner_updated_at\"\n    };\n    return _this;\n  }\n\n  _createClass(GeneContents, [{\n    key: \"onDropdownSelect\",\n    // Because `for_sale` is a proper filter of its own, but\n    // we include its aggregation as part of `price_range`, we\n    // have to handle it specially.\n    value: function onDropdownSelect(slice, value) {\n      var _this$setState;\n\n      var filter = slice.toLowerCase();\n\n      if (filter === \"price_range\" && value === \"*-*\") {\n        filter = \"for_sale\";\n        value = true;\n      }\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, filter, value), _defineProperty(_this$setState, \"mode\", \"artworks\"), _this$setState), this.handleStateChange);\n    }\n  }, {\n    key: \"onForSaleToggleSelect\",\n    value: function onForSaleToggleSelect() {\n      var forSale = this.state.for_sale ? null : true;\n      this.setState({\n        for_sale: forSale,\n        mode: \"artworks\"\n      }, this.handleStateChange);\n    }\n  }, {\n    key: \"onSortSelect\",\n    value: function onSortSelect(sortEl) {\n      this.setState({\n        sort: sortEl.val,\n        mode: \"artworks\"\n      }, this.handleStateChange);\n    }\n  }, {\n    key: \"onArtistModeSelect\",\n    value: function onArtistModeSelect() {\n      this.setState({\n        mode: \"artists\"\n      }, this.handleStateChange);\n    }\n  }, {\n    key: \"renderArtists\",\n    value: function renderArtists() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          geneID = _this$props.geneID,\n          relayEnvironment = _this$props.relayEnvironment;\n      return React.createElement(QueryRenderer, {\n        environment: relayEnvironment,\n        query: _graphql || (_graphql = function _graphql() {\n          var node = require(\"../../__generated__/GeneContentsArtistsQuery.graphql\");\n\n          if (node.hash && node.hash !== \"475032821c1a214fe810bfa6b8f3d4e2\") {\n            console.error(\"The definition of 'GeneContentsArtistsQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../__generated__/GeneContentsArtistsQuery.graphql\");\n        }),\n        variables: {\n          geneID: geneID\n        },\n        render: function render(_ref) {\n          var props = _ref.props;\n\n          if (props) {\n            return React.createElement(Artists, {\n              onForSaleToggleSelected: _this2.onForSaleToggleSelect.bind(_this2),\n              gene: props.gene,\n              onDropdownSelected: _this2.onDropdownSelect.bind(_this2)\n            });\n          } else {\n            return null;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"renderArtworks\",\n    value: function renderArtworks() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          geneID = _this$props2.geneID,\n          relayEnvironment = _this$props2.relayEnvironment;\n      var _this$state2 = this.state,\n          for_sale = _this$state2.for_sale,\n          medium = _this$state2.medium,\n          price_range = _this$state2.price_range,\n          dimension_range = _this$state2.dimension_range,\n          sort = _this$state2.sort;\n      return React.createElement(QueryRenderer, {\n        environment: relayEnvironment,\n        query: _graphql2 || (_graphql2 = function _graphql2() {\n          var node = require(\"../../__generated__/GeneContentsArtworksQuery.graphql\");\n\n          if (node.hash && node.hash !== \"b6443f327467469eb9b0df012a822944\") {\n            console.error(\"The definition of 'GeneContentsArtworksQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n          }\n\n          return require(\"../../__generated__/GeneContentsArtworksQuery.graphql\");\n        }),\n        variables: {\n          geneID: geneID,\n          medium: medium,\n          price_range: price_range,\n          sort: sort,\n          for_sale: for_sale,\n          dimension_range: dimension_range\n        },\n        render: function render(_ref2) {\n          var props = _ref2.props;\n\n          if (props) {\n            return React.createElement(GeneArtworks, {\n              onArtistModeToggleSelected: _this3.onArtistModeSelect.bind(_this3),\n              onForSaleToggleSelected: _this3.onForSaleToggleSelect.bind(_this3),\n              onSortSelected: _this3.onSortSelect.bind(_this3),\n              sort: sort,\n              for_sale: for_sale,\n              medium: medium,\n              price_range: price_range,\n              dimension_range: dimension_range,\n              gene: props.gene,\n              onDropdownSelected: _this3.onDropdownSelect.bind(_this3)\n            });\n          } else {\n            return null;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mode = this.state.mode;\n\n      if (mode === \"artists\") {\n        return this.renderArtists();\n      }\n\n      return this.renderArtworks();\n    }\n  }]);\n\n  return GeneContents;\n}(React.Component);\n\nexport var Contents = withContext(GeneContents);",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Gene/index.tsx"],"names":["React","graphql","QueryRenderer","withContext","Artists","GeneArtworks","GeneContents","props","state","for_sale","medium","price_range","dimension_range","sort","mode","filters","onStateChange","slice","value","filter","toLowerCase","setState","handleStateChange","forSale","sortEl","val","geneID","relayEnvironment","onForSaleToggleSelect","bind","gene","onDropdownSelect","onArtistModeSelect","onSortSelect","renderArtists","renderArtworks","Component","Contents"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { graphql, QueryRenderer } from \"react-relay\"\n\nimport { GeneContentsArtistsQuery } from \"__generated__/GeneContentsArtistsQuery.graphql\"\nimport { GeneContentsArtworksQuery } from \"__generated__/GeneContentsArtworksQuery.graphql\"\nimport { ContextProps, withContext } from \"Artsy/SystemContext\"\nimport Artists from \"./Artists\"\nimport GeneArtworks from \"./GeneArtworks\"\n\nexport interface Filters {\n  for_sale: boolean\n  dimension_range: string\n  price_range: string\n  medium?: string\n}\n\nexport type Sort = \"year\" | \"-year\" | \"-partner_updated_at\"\n\nexport type Mode = \"artists\" | \"artworks\"\n\nexport interface StateChangePayload {\n  filters: Filters\n  sort: Sort\n  mode: Mode\n}\n\nexport interface Props extends ContextProps {\n  mode: Mode\n  filters?: Partial<Filters>\n  geneID: string\n  sort?: Sort\n  onStateChange: (payload: StateChangePayload) => void\n}\n\nexport interface State extends Filters {\n  mode: Mode\n  sort?: Sort\n}\n\nclass GeneContents extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    const {\n      for_sale,\n      price_range,\n      dimension_range,\n      medium,\n    } = this.props.filters\n    this.state = {\n      for_sale: for_sale || null,\n      medium: medium || \"*\",\n      price_range: price_range || \"*\",\n      dimension_range: dimension_range || \"*\",\n      mode: props.mode,\n      sort: props.sort || \"-partner_updated_at\",\n    }\n  }\n\n  handleStateChange = () => {\n    const {\n      for_sale,\n      medium,\n      price_range,\n      dimension_range,\n      sort,\n      mode,\n    } = this.state\n    const filters = {\n      for_sale,\n      medium,\n      price_range,\n      dimension_range,\n    }\n    this.props.onStateChange({ filters, sort, mode })\n  }\n\n  // Because `for_sale` is a proper filter of its own, but\n  // we include its aggregation as part of `price_range`, we\n  // have to handle it specially.\n  onDropdownSelect(slice: string, value: string | boolean) {\n    let filter = slice.toLowerCase() as string\n    if (filter === \"price_range\" && value === \"*-*\") {\n      filter = \"for_sale\"\n      value = true\n    }\n    this.setState(\n      ({\n        [filter]: value,\n        mode: \"artworks\",\n      } as any) as Filters,\n      this.handleStateChange\n    )\n  }\n\n  onForSaleToggleSelect() {\n    const forSale = this.state.for_sale ? null : true\n    this.setState(\n      {\n        for_sale: forSale,\n        mode: \"artworks\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  onSortSelect(sortEl) {\n    this.setState(\n      {\n        sort: sortEl.val,\n        mode: \"artworks\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  onArtistModeSelect() {\n    this.setState(\n      {\n        mode: \"artists\",\n      },\n      this.handleStateChange\n    )\n  }\n\n  renderArtists() {\n    const { geneID, relayEnvironment } = this.props\n    return (\n      <QueryRenderer<GeneContentsArtistsQuery>\n        environment={relayEnvironment}\n        query={graphql`\n          query GeneContentsArtistsQuery($geneID: String!) {\n            gene(id: $geneID) {\n              ...Artists_gene\n            }\n          }\n        `}\n        variables={{ geneID }}\n        render={({ props }) => {\n          if (props) {\n            return (\n              <Artists\n                onForSaleToggleSelected={this.onForSaleToggleSelect.bind(this)}\n                gene={props.gene}\n                onDropdownSelected={this.onDropdownSelect.bind(this)}\n              />\n            )\n          } else {\n            return null\n          }\n        }}\n      />\n    )\n  }\n\n  renderArtworks() {\n    const { geneID, relayEnvironment } = this.props\n    const { for_sale, medium, price_range, dimension_range, sort } = this.state\n    return (\n      <QueryRenderer<GeneContentsArtworksQuery>\n        environment={relayEnvironment}\n        query={graphql`\n          query GeneContentsArtworksQuery(\n            $geneID: String!\n            $medium: String\n            $price_range: String\n            $sort: String\n            $for_sale: Boolean\n            $dimension_range: String\n          ) {\n            gene(id: $geneID) {\n              ...GeneArtworks_gene\n                @arguments(\n                  for_sale: $for_sale\n                  medium: $medium\n                  price_range: $price_range\n                  dimension_range: $dimension_range\n                )\n            }\n          }\n        `}\n        variables={{\n          geneID,\n          medium,\n          price_range,\n          sort,\n          for_sale,\n          dimension_range,\n        }}\n        render={({ props }) => {\n          if (props) {\n            return (\n              <GeneArtworks\n                onArtistModeToggleSelected={this.onArtistModeSelect.bind(this)}\n                onForSaleToggleSelected={this.onForSaleToggleSelect.bind(this)}\n                onSortSelected={this.onSortSelect.bind(this)}\n                sort={sort}\n                for_sale={for_sale}\n                medium={medium}\n                price_range={price_range}\n                dimension_range={dimension_range}\n                gene={props.gene}\n                onDropdownSelected={this.onDropdownSelect.bind(this)}\n              />\n            )\n          } else {\n            return null\n          }\n        }}\n      />\n    )\n  }\n\n  render() {\n    const { mode } = this.state\n    if (mode === \"artists\") {\n      return this.renderArtists()\n    }\n    return this.renderArtworks()\n  }\n}\n\nexport const Contents = withContext(GeneContents)\n"]}]}
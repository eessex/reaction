{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Utils/Responsive/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Utils/Responsive/index.tsx","mtime":1535727457000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from \"react\";\nimport { createResponsiveComponents } from \"./Responsive\";\nvar ResponsiveComponents = createResponsiveComponents();\nexport var Responsive = ResponsiveComponents.Consumer; // TODO Once we consider the deprecation period of the previous ‘beakpoint’\n//      centric API to be over, we can replace the wrapper with just this line.\n//\n// export const ResponsiveProvider = Responsive.Provider\n\nexport var ResponsiveProvider = function ResponsiveProvider(props) {\n  var _ref = props,\n      initialMatchingMediaQueries = _ref.initialMatchingMediaQueries,\n      mediaQueries = _ref.mediaQueries;\n  var _ref2 = props,\n      initialBreakpoint = _ref2.initialBreakpoint,\n      breakpoints = _ref2.breakpoints;\n\n  if (initialBreakpoint) {\n    console.warn(\"[Responsive] The usage of `initialBreakpoint` is deprecated, use \" + \"`initialMatchingMediaQueries` instead.\");\n  }\n\n  if (breakpoints) {\n    console.warn(\"[Responsive] The usage of `breakpoints` is deprecated, use \" + \"`mediaQueries` instead.\");\n  } else if (!mediaQueries) {\n    throw new Error(\"[Responsive] If no `breakpoints` are specified, then `mediaQueries` \" + \"is required.\");\n  }\n\n  return React.createElement(ResponsiveComponents.Provider, {\n    mediaQueries: mediaQueries || breakpoints,\n    initialMatchingMediaQueries: initialMatchingMediaQueries || initialBreakpoint && [initialBreakpoint]\n  }, props.children);\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Utils/Responsive/index.tsx"],"names":["React","createResponsiveComponents","ResponsiveComponents","Responsive","Consumer","ResponsiveProvider","props","initialMatchingMediaQueries","mediaQueries","initialBreakpoint","breakpoints","console","warn","Error","children"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,0BADF;AAOA,IAAMC,oBAAoB,GAAGD,0BAA0B,EAAvD;AAEA,OAAO,IAAME,UAAU,GAAGD,oBAAoB,CAACE,QAAxC,C,CAEP;AACA;AACA;AACA;;AAmBA,OAAO,IAAMC,kBAAsD,GAAG,SAAzDA,kBAAyD,CAAAC,KAAK,EAAI;AAAA,aAIzEA,KAJyE;AAAA,MAE3EC,2BAF2E,QAE3EA,2BAF2E;AAAA,MAG3EC,YAH2E,QAG3EA,YAH2E;AAAA,cAQzEF,KARyE;AAAA,MAM3EG,iBAN2E,SAM3EA,iBAN2E;AAAA,MAO3EC,WAP2E,SAO3EA,WAP2E;;AAU7E,MAAID,iBAAJ,EAAuB;AACrBE,IAAAA,OAAO,CAACC,IAAR,CACE,sEACE,wCAFJ;AAID;;AAED,MAAIF,WAAJ,EAAiB;AACfC,IAAAA,OAAO,CAACC,IAAR,CACE,gEACE,yBAFJ;AAID,GALD,MAKO,IAAI,CAACJ,YAAL,EAAmB;AACxB,UAAM,IAAIK,KAAJ,CACJ,yEACE,cAFE,CAAN;AAID;;AAED,SACE,oBAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,YAAY,EACVL,YAAY,IACXE,WAHL;AAKE,IAAA,2BAA2B,EACzBH,2BAA2B,IAC1BE,iBAAiB,IAAI,CAACA,iBAAD;AAP1B,KAUGH,KAAK,CAACQ,QAVT,CADF;AAcD,CA3CM","sourcesContent":["import { themeProps } from \"@artsy/palette\"\nimport React from \"react\"\nimport {\n  createResponsiveComponents,\n  ResponsiveProviderProps as _ResponsiveProviderProps,\n} from \"./Responsive\"\n\ntype MediaQuery = keyof typeof themeProps[\"mediaQueries\"]\n\nconst ResponsiveComponents = createResponsiveComponents<MediaQuery>()\n\nexport const Responsive = ResponsiveComponents.Consumer\n\n// TODO Once we consider the deprecation period of the previous ‘beakpoint’\n//      centric API to be over, we can replace the wrapper with just this line.\n//\n// export const ResponsiveProvider = Responsive.Provider\n\nexport type Breakpoint = keyof typeof themeProps[\"grid\"][\"breakpoints\"]\n\nexport interface DeprecatedResponsiveProviderProps {\n  initialBreakpoint?: Breakpoint\n  breakpoints: { [K in Breakpoint]: string }\n  children: React.ReactNode\n}\n\nexport type NewResponsiveProviderProps = _ResponsiveProviderProps<MediaQuery>\nexport type MatchingMediaQueries = NewResponsiveProviderProps[\"initialMatchingMediaQueries\"]\n\n// Using a union here means that the component can either be used using the new\n// API or the deprecated one.\nexport type ResponsiveProviderProps =\n  | NewResponsiveProviderProps\n  | DeprecatedResponsiveProviderProps\n\nexport const ResponsiveProvider: React.SFC<ResponsiveProviderProps> = props => {\n  const {\n    initialMatchingMediaQueries,\n    mediaQueries,\n  } = props as NewResponsiveProviderProps\n  const {\n    initialBreakpoint,\n    breakpoints,\n  } = props as DeprecatedResponsiveProviderProps\n\n  if (initialBreakpoint) {\n    console.warn(\n      \"[Responsive] The usage of `initialBreakpoint` is deprecated, use \" +\n        \"`initialMatchingMediaQueries` instead.\"\n    )\n  }\n\n  if (breakpoints) {\n    console.warn(\n      \"[Responsive] The usage of `breakpoints` is deprecated, use \" +\n        \"`mediaQueries` instead.\"\n    )\n  } else if (!mediaQueries) {\n    throw new Error(\n      \"[Responsive] If no `breakpoints` are specified, then `mediaQueries` \" +\n        \"is required.\"\n    )\n  }\n\n  return (\n    <ResponsiveComponents.Provider\n      mediaQueries={\n        mediaQueries ||\n        (breakpoints as NewResponsiveProviderProps[\"mediaQueries\"])\n      }\n      initialMatchingMediaQueries={\n        initialMatchingMediaQueries ||\n        (initialBreakpoint && [initialBreakpoint])\n      }\n    >\n      {props.children}\n    </ResponsiveComponents.Provider>\n  )\n}\n"]}]}
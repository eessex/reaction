{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Authentication/RegisterForm.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/RegisterForm.tsx","mtime":1527106575000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1526592628000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegisterForm = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _formik = require(\"formik\");\n\nvar _commonElements = require(\"./commonElements\");\n\nvar _Text = _interopRequireDefault(require(\"../Text\"));\n\nvar _TextLink = _interopRequireDefault(require(\"../TextLink\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _Inverted = _interopRequireDefault(require(\"../Buttons/Inverted\"));\n\nvar _Validators = require(\"./Validators\");\n\nvar _Colors = _interopRequireDefault(require(\"../../Assets/Colors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LoginText =\n/*#__PURE__*/\n(0, _styledComponents.default)(_Text.default).attrs({\n  color: _Colors.default.grayDark,\n  align: \"center\"\n}).withConfig({\n  displayName: \"RegisterForm__LoginText\",\n  componentId: \"s1bvpcyv-0\"\n})([\"margin:0;\"]);\nvar SignUpButton =\n/*#__PURE__*/\n(0, _styledComponents.default)(_Inverted.default).attrs({\n  type: \"submit\",\n  block: true\n}).withConfig({\n  displayName: \"RegisterForm__SignUpButton\",\n  componentId: \"s1bvpcyv-1\"\n})([\"margin-top:auto;\"]);\n\nvar RegisterForm = function RegisterForm(props) {\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: props.values,\n    onSubmit: props.handleSubmit,\n    validationSchema: _Validators.RegisterValidator\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting,\n        isValid = _ref.isValid;\n    var checkboxError = touched.acceptedTermsOfService && errors.acceptedTermsOfService;\n    return _react.default.createElement(_commonElements.FormContainer, {\n      onSubmit: handleSubmit\n    }, _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.email && errors.email,\n      placeholder: \"Enter your email address\",\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.password && errors.password,\n      placeholder: \"Enter a password\",\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), _react.default.createElement(_Input.default, {\n      block: true,\n      quick: true,\n      error: touched.name && errors.name,\n      placeholder: \"Enter your full name\",\n      name: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), _react.default.createElement(_commonElements.TOSCheckbox, {\n      error: checkboxError,\n      checked: values.acceptedTermsOfService,\n      value: values.acceptedTermsOfService,\n      type: \"checkbox\",\n      name: \"acceptedTermsOfService\",\n      onChange: handleChange,\n      onBlur: handleBlur\n    }, _react.default.createElement(_Text.default, {\n      color: checkboxError ? _Colors.default.redMedium : _Colors.default.grayDark\n    }, \"I agree to the \", _react.default.createElement(_TextLink.default, {\n      href: \"https://www.artsy.net/terms\",\n      target: \"_blank\",\n      color: checkboxError ? _Colors.default.redMedium : _Colors.default.grayDark,\n      underline: true\n    }, \"Terms Of Service\"), \" and \", _react.default.createElement(_TextLink.default, {\n      href: \"https://www.artsy.net/privacy\",\n      target: \"_blank\",\n      color: checkboxError ? _Colors.default.redMedium : _Colors.default.grayDark,\n      underline: true\n    }, \"Privacy Policy\"))), _react.default.createElement(SignUpButton, {\n      disabled: isSubmitting\n    }, \"Sign Up\"), _react.default.createElement(_commonElements.GrayFacebookButton, null, \"Sign up with Facebook\"), _react.default.createElement(LoginText, null, \"Already have an account?\", \" \", _react.default.createElement(_commonElements.ChangeMode, {\n      onClick: function onClick() {\n        return props.handleTypeChange(\"login\");\n      }\n    }, \"Login\")));\n  });\n};\n\nexports.RegisterForm = RegisterForm;",{"version":3,"sources":["src/Components/Authentication/RegisterForm.tsx"],"names":["LoginText","attrs","color","grayDark","align","SignUpButton","type","block","RegisterForm","props","values","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","isValid","checkboxError","acceptedTermsOfService","email","password","name","redMedium","handleTypeChange"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA;AAAA;AAAY,8CAAaC,KAAb,CAAmB;AACnCC,SAAO,gBAAOC,QADqB;AAEnCC,SAAO;AAF4B,CAAnB,CAAZ;AAAA;AAAA;AAAA,iBAAN;AAOA,IAAMC;AAAA;AAAe,kDAAeJ,KAAf,CAAqB;AACxCK,QAAM,QADkC;AAExCC,SAAO;AAFiC,CAArB,CAAf;AAAA;AAAA;AAAA,wBAAN;;AAOO,IAAMC,eAAkC,SAAlCA,YAAkC,QAAS;AACtD,SACE;AACE,mBAAeC,MAAMC,MADvB;AAEE,cAAUD,MAAME,YAFlB;AAGE;AAHF,KAKG,gBAS+B;AAAA,QAR9BD,MAQ8B,QAR9BA,MAQ8B;AAAA,QAP9BE,MAO8B,QAP9BA,MAO8B;AAAA,QAN9BC,OAM8B,QAN9BA,OAM8B;AAAA,QAL9BC,YAK8B,QAL9BA,YAK8B;AAAA,QAJ9BC,UAI8B,QAJ9BA,UAI8B;AAAA,QAH9BJ,YAG8B,QAH9BA,YAG8B;AAAA,QAF9BK,YAE8B,QAF9BA,YAE8B;AAAA,QAD9BC,OAC8B,QAD9BA,OAC8B;AAC9B,QAAMC,gBACJL,QAAQM,sBAAR,IAAkCP,OAAOO,sBAD3C;AAEA,WACE;AAAe,gBAAUR;AAAzB,OACE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOE,QAAQO,KAAR,IAAiBR,OAAOQ,KAHjC;AAIE,mBAAY,0BAJd;AAKE,YAAK,OALP;AAME,aAAM,OANR;AAOE,YAAK,OAPP;AAQE,aAAOV,OAAOU,KARhB;AASE,gBAAUN,YATZ;AAUE,cAAQC;AAVV,MADF,EAaE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOF,QAAQQ,QAAR,IAAoBT,OAAOS,QAHpC;AAIE,mBAAY,kBAJd;AAKE,YAAK,UALP;AAME,aAAM,UANR;AAOE,YAAK,UAPP;AAQE,aAAOX,OAAOW,QARhB;AASE,gBAAUP,YATZ;AAUE,cAAQC;AAVV,MAbF,EAyBE;AACE,iBADF;AAEE,iBAFF;AAGE,aAAOF,QAAQS,IAAR,IAAgBV,OAAOU,IAHhC;AAIE,mBAAY,sBAJd;AAKE,YAAK,MALP;AAME,aAAM,MANR;AAOE,YAAK,MAPP;AAQE,aAAOZ,OAAOY,IARhB;AASE,gBAAUR,YATZ;AAUE,cAAQC;AAVV,MAzBF,EAqCE;AACE,aAAOG,aADT;AAEE,eAASR,OAAOS,sBAFlB;AAGE,aAAOT,OAAOS,sBAHhB;AAIE,YAAK,UAJP;AAKE,YAAK,wBALP;AAME,gBAAUL,YANZ;AAOE,cAAQC;AAPV,OASE;AAAM,aAAOG,gBAAgB,gBAAOK,SAAvB,GAAmC,gBAAOpB;AAAvD,OACG,iBADH,EAEE;AACE,YAAK,6BADP;AAEE,cAAO,QAFT;AAGE,aAAOe,gBAAgB,gBAAOK,SAAvB,GAAmC,gBAAOpB,QAHnD;AAIE;AAJF,0BAFF,EAUG,OAVH,EAWE;AACE,YAAK,+BADP;AAEE,cAAO,QAFT;AAGE,aAAOe,gBAAgB,gBAAOK,SAAvB,GAAmC,gBAAOpB,QAHnD;AAIE;AAJF,wBAXF,CATF,CArCF,EAmEE,6BAAC,YAAD;AAAc,gBAAUa;AAAxB,iBAnEF,EAoEE,+FApEF,EAqEE,6BAAC,SAAD,oCAC2B,GAD3B,EAEE;AAAY,eAAS;AAAA,eAAMP,MAAMe,gBAAN,CAAuB,OAAvB,CAAN;AAAA;AAArB,eAFF,CArEF,CADF;AA8ED,GA/FH,CADF;AAmGD,CApGM","file":"/Users/eve/development/reaction/src/Components/Authentication/RegisterForm.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Formik, FormikProps } from \"formik\"\n\nimport {\n  ChangeMode,\n  FormContainer,\n  GrayFacebookButton,\n  TOSCheckbox,\n} from \"./commonElements\"\nimport Text from \"../Text\"\nimport TextLink from \"../TextLink\"\nimport Input from \"../Input\"\nimport { FormComponentType, InputValues } from \"./Types\"\nimport Button from \"../Buttons/Inverted\"\nimport { RegisterValidator } from \"./Validators\"\nimport Colors from \"../../Assets/Colors\"\n\nconst LoginText = styled(Text).attrs({\n  color: Colors.grayDark,\n  align: \"center\",\n})`\n  margin: 0;\n`\n\nconst SignUpButton = styled(Button).attrs({\n  type: \"submit\",\n  block: true,\n})`\n  margin-top: auto;\n`\n\nexport const RegisterForm: FormComponentType = props => {\n  return (\n    <Formik\n      initialValues={props.values}\n      onSubmit={props.handleSubmit}\n      validationSchema={RegisterValidator}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        isValid,\n      }: FormikProps<InputValues>) => {\n        const checkboxError =\n          touched.acceptedTermsOfService && errors.acceptedTermsOfService\n        return (\n          <FormContainer onSubmit={handleSubmit}>\n            <Input\n              block\n              quick\n              error={touched.email && errors.email}\n              placeholder=\"Enter your email address\"\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <Input\n              block\n              quick\n              error={touched.password && errors.password}\n              placeholder=\"Enter a password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <Input\n              block\n              quick\n              error={touched.name && errors.name}\n              placeholder=\"Enter your full name\"\n              name=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <TOSCheckbox\n              error={checkboxError}\n              checked={values.acceptedTermsOfService}\n              value={values.acceptedTermsOfService}\n              type=\"checkbox\"\n              name=\"acceptedTermsOfService\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n            >\n              <Text color={checkboxError ? Colors.redMedium : Colors.grayDark}>\n                {\"I agree to the \"}\n                <TextLink\n                  href=\"https://www.artsy.net/terms\"\n                  target=\"_blank\"\n                  color={checkboxError ? Colors.redMedium : Colors.grayDark}\n                  underline\n                >\n                  Terms Of Service\n                </TextLink>\n                {\" and \"}\n                <TextLink\n                  href=\"https://www.artsy.net/privacy\"\n                  target=\"_blank\"\n                  color={checkboxError ? Colors.redMedium : Colors.grayDark}\n                  underline\n                >\n                  Privacy Policy\n                </TextLink>\n              </Text>\n            </TOSCheckbox>\n            <SignUpButton disabled={isSubmitting}>Sign Up</SignUpButton>\n            <GrayFacebookButton>Sign up with Facebook</GrayFacebookButton>\n            <LoginText>\n              Already have an account?{\" \"}\n              <ChangeMode onClick={() => props.handleTypeChange(\"login\")}>\n                Login\n              </ChangeMode>\n            </LoginText>\n          </FormContainer>\n        )\n      }}\n    </Formik>\n  )\n}\n"]}]}
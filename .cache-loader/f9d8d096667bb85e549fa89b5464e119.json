{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Authentication/Validators.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Authentication/Validators.tsx","mtime":1531834686000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Yup from \"yup\";\nexport var email = Yup.string().email(\"Please enter a valid email.\").required(\"Please enter a valid email.\");\nvar name = Yup.string().required(\"Name is required.\");\nvar password = Yup.string().required(\"Password required\").min(8, \"Your password must be at least 8 characters\");\nvar loginPassword = Yup.string().required(\"Password required\");\nvar accepted_terms_of_service = Yup.boolean().required(\"You must agree to our terms to continue.\").oneOf([true]);\nexport var SignUpValidator = Yup.object().shape({\n  name: name,\n  email: email,\n  password: Yup.string().required(\"Password required\").min(8, \"Password must be at least 8 characters.\"),\n  accepted_terms_of_service: accepted_terms_of_service\n});\nexport var ForgotPasswordValidator = Yup.object().shape({\n  email: email\n});\nexport var LoginValidator = Yup.object().shape({\n  email: email,\n  password: Yup.string().required(\"Password required.\")\n});\nexport var MobileSignUpValidator = {\n  email: Yup.object().shape({\n    email: email,\n    accepted_terms_of_service: accepted_terms_of_service\n  }),\n  name: Yup.object().shape({\n    name: name\n  }),\n  password: Yup.object().shape({\n    password: password\n  })\n};\nexport var MobileLoginValidator = {\n  email: Yup.object().shape({\n    email: email\n  }),\n  password: Yup.object().shape({\n    password: loginPassword\n  })\n};",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Authentication/Validators.tsx"],"names":["Yup","email","string","required","name","password","min","loginPassword","accepted_terms_of_service","boolean","oneOf","SignUpValidator","object","shape","ForgotPasswordValidator","LoginValidator","MobileSignUpValidator","MobileLoginValidator"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAO,IAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,GAClBD,KADkB,CACZ,6BADY,EAElBE,QAFkB,CAET,6BAFS,CAAd;AAIP,IAAMC,IAAI,GAAGJ,GAAG,CAACE,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAAb;AAEA,IAAME,QAAQ,GAAGL,GAAG,CAACE,MAAJ,GACdC,QADc,CACL,mBADK,EAEdG,GAFc,CAEV,CAFU,EAEP,6CAFO,CAAjB;AAIA,IAAMC,aAAa,GAAGP,GAAG,CAACE,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAAtB;AAEA,IAAMK,yBAAyB,GAAGR,GAAG,CAACS,OAAJ,GAC/BN,QAD+B,CACtB,0CADsB,EAE/BO,KAF+B,CAEzB,CAAC,IAAD,CAFyB,CAAlC;AAIA,OAAO,IAAMC,eAAe,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAChDT,EAAAA,IAAI,EAAJA,IADgD;AAEhDH,EAAAA,KAAK,EAALA,KAFgD;AAGhDI,EAAAA,QAAQ,EAAEL,GAAG,CAACE,MAAJ,GACPC,QADO,CACE,mBADF,EAEPG,GAFO,CAEH,CAFG,EAEA,yCAFA,CAHsC;AAMhDE,EAAAA,yBAAyB,EAAzBA;AANgD,CAAnB,CAAxB;AASP,OAAO,IAAMM,uBAAuB,GAAGd,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAAEZ,EAAAA,KAAK,EAALA;AAAF,CAAnB,CAAhC;AAEP,OAAO,IAAMc,cAAc,GAAGf,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAC/CZ,EAAAA,KAAK,EAALA,KAD+C;AAE/CI,EAAAA,QAAQ,EAAEL,GAAG,CAACE,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB;AAFqC,CAAnB,CAAvB;AAKP,OAAO,IAAMa,qBAAqB,GAAG;AACnCf,EAAAA,KAAK,EAAED,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAAEZ,IAAAA,KAAK,EAALA,KAAF;AAASO,IAAAA,yBAAyB,EAAzBA;AAAT,GAAnB,CAD4B;AAEnCJ,EAAAA,IAAI,EAAEJ,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAAET,IAAAA,IAAI,EAAJA;AAAF,GAAnB,CAF6B;AAGnCC,EAAAA,QAAQ,EAAEL,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAAER,IAAAA,QAAQ,EAARA;AAAF,GAAnB;AAHyB,CAA9B;AAMP,OAAO,IAAMY,oBAAoB,GAAG;AAClChB,EAAAA,KAAK,EAAED,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAAEZ,IAAAA,KAAK,EAALA;AAAF,GAAnB,CAD2B;AAElCI,EAAAA,QAAQ,EAAEL,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAAER,IAAAA,QAAQ,EAAEE;AAAZ,GAAnB;AAFwB,CAA7B","sourcesContent":["import Yup from \"yup\"\n\nexport const email = Yup.string()\n  .email(\"Please enter a valid email.\")\n  .required(\"Please enter a valid email.\")\n\nconst name = Yup.string().required(\"Name is required.\")\n\nconst password = Yup.string()\n  .required(\"Password required\")\n  .min(8, \"Your password must be at least 8 characters\")\n\nconst loginPassword = Yup.string().required(\"Password required\")\n\nconst accepted_terms_of_service = Yup.boolean()\n  .required(\"You must agree to our terms to continue.\")\n  .oneOf([true])\n\nexport const SignUpValidator = Yup.object().shape({\n  name,\n  email,\n  password: Yup.string()\n    .required(\"Password required\")\n    .min(8, \"Password must be at least 8 characters.\"),\n  accepted_terms_of_service,\n})\n\nexport const ForgotPasswordValidator = Yup.object().shape({ email })\n\nexport const LoginValidator = Yup.object().shape({\n  email,\n  password: Yup.string().required(\"Password required.\"),\n})\n\nexport const MobileSignUpValidator = {\n  email: Yup.object().shape({ email, accepted_terms_of_service }),\n  name: Yup.object().shape({ name }),\n  password: Yup.object().shape({ password }),\n}\n\nexport const MobileLoginValidator = {\n  email: Yup.object().shape({ email }),\n  password: Yup.object().shape({ password: loginPassword }),\n}\n"]}]}
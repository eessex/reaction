{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artist/Routes/Shows/index.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artist/Routes/Shows/index.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Spacer } from \"@artsy/palette\";\nimport React from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport { ArtistShowsRefetchContainer as Shows } from \"./ArtistShows\";\nexport var ShowsRoute = function ShowsRoute(props) {\n  var viewer = props.viewer;\n  return React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    mb: -1\n  }), React.createElement(Shows, {\n    sort: \"end_at_asc\",\n    status: \"running\",\n    artist: viewer.artist_currentShows,\n    scrollTo: \"#jumpto-ArtistHeader\",\n    heading: \"Currently on view\",\n    my: 4\n  }), React.createElement(\"span\", {\n    id: \"jumpto-Shows-Upcoming\"\n  }), React.createElement(Shows, {\n    sort: \"start_at_asc\",\n    status: \"upcoming\",\n    artist: viewer.artist_upcomingShows,\n    scrollTo: \"#jumpto-Shows-Upcoming\",\n    heading: \"Upcoming\",\n    my: 4\n  }), React.createElement(\"span\", {\n    id: \"jumpto-Shows-Past\"\n  }), React.createElement(Shows, {\n    sort: \"end_at_desc\",\n    status: \"closed\",\n    artist: viewer.artist_pastShows,\n    scrollTo: \"#jumpto-Shows-Past\",\n    heading: \"Past\"\n  }));\n};\nexport var ShowsRouteFragmentContainer = createFragmentContainer(ShowsRoute, {\n  viewer: function viewer() {\n    var node = require(\"../../../../__generated__/Shows_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"a5b24380340288a2abae7669e3103624\") {\n      console.error(\"The definition of 'Shows_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../__generated__/Shows_viewer.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artist/Routes/Shows/index.tsx"],"names":["Spacer","React","createFragmentContainer","graphql","ArtistShowsRefetchContainer","Shows","ShowsRoute","props","viewer","artist_currentShows","artist_upcomingShows","artist_pastShows","ShowsRouteFragmentContainer"],"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AAEA,OAAOC,KAAP,MAA2B,OAA3B;AACA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,aAAjD;AACA,SAASC,2BAA2B,IAAIC,KAAxC;AAKA,OAAO,IAAMC,UAAiC,GAAG,SAApCA,UAAoC,CAAAC,KAAK,EAAI;AAAA,MAChDC,MADgD,GACrCD,KADqC,CAChDC,MADgD;AAGxD,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAE,CAAC;AAAb,IADF,EAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,MAAM,EAAEA,MAAM,CAACC,mBAHjB;AAIE,IAAA,QAAQ,EAAC,sBAJX;AAKE,IAAA,OAAO,EAAC,mBALV;AAME,IAAA,EAAE,EAAE;AANN,IAHF,EAYE;AAAM,IAAA,EAAE,EAAC;AAAT,IAZF,EAcE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,MAAM,EAAED,MAAM,CAACE,oBAHjB;AAIE,IAAA,QAAQ,EAAC,wBAJX;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,EAAE,EAAE;AANN,IAdF,EAuBE;AAAM,IAAA,EAAE,EAAC;AAAT,IAvBF,EAyBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,MAAM,EAAEF,MAAM,CAACG,gBAHjB;AAIE,IAAA,QAAQ,EAAC,oBAJX;AAKE,IAAA,OAAO,EAAC;AALV,IAzBF,CADF;AAmCD,CAtCM;AAwCP,OAAO,IAAMC,2BAA2B,GAAGV,uBAAuB,CAChEI,UADgE;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAA3D","sourcesContent":["import { Spacer } from \"@artsy/palette\"\nimport { Shows_viewer } from \"__generated__/Shows_viewer.graphql\"\nimport React, { SFC } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { ArtistShowsRefetchContainer as Shows } from \"./ArtistShows\"\n\nexport interface ArtistShowsProps {\n  viewer: Shows_viewer\n}\nexport const ShowsRoute: SFC<ArtistShowsProps> = props => {\n  const { viewer } = props\n\n  return (\n    <>\n      <Spacer mb={-1} />\n\n      <Shows\n        sort=\"end_at_asc\"\n        status=\"running\"\n        artist={viewer.artist_currentShows}\n        scrollTo=\"#jumpto-ArtistHeader\"\n        heading=\"Currently on view\"\n        my={4}\n      />\n\n      <span id=\"jumpto-Shows-Upcoming\" />\n\n      <Shows\n        sort=\"start_at_asc\"\n        status=\"upcoming\"\n        artist={viewer.artist_upcomingShows}\n        scrollTo=\"#jumpto-Shows-Upcoming\"\n        heading=\"Upcoming\"\n        my={4}\n      />\n\n      <span id=\"jumpto-Shows-Past\" />\n\n      <Shows\n        sort=\"end_at_desc\"\n        status=\"closed\"\n        artist={viewer.artist_pastShows}\n        scrollTo=\"#jumpto-Shows-Past\"\n        heading=\"Past\"\n      />\n    </>\n  )\n}\n\nexport const ShowsRouteFragmentContainer = createFragmentContainer(\n  ShowsRoute,\n  graphql`\n    fragment Shows_viewer on Viewer\n      @argumentDefinitions(\n        currentShowsStatus: { type: \"String\", defaultValue: \"running\" }\n        currentShowsSort: {\n          type: \"PartnerShowSorts\"\n          defaultValue: \"end_at_asc\"\n        }\n        upcomingShowsStatus: { type: \"String\", defaultValue: \"upcoming\" }\n        upcomingShowsSort: {\n          type: \"PartnerShowSorts\"\n          defaultValue: \"start_at_asc\"\n        }\n        pastShowsStatus: { type: \"String\", defaultValue: \"closed\" }\n        pastShowsSort: { type: \"PartnerShowSorts\", defaultValue: \"end_at_desc\" }\n      ) {\n      artist_currentShows: artist(id: $artistID) {\n        ...ArtistShows_artist\n          @arguments(sort: $currentShowsSort, status: $currentShowsStatus)\n      }\n      artist_upcomingShows: artist(id: $artistID) {\n        ...ArtistShows_artist\n          @arguments(sort: $upcomingShowsSort, status: $upcomingShowsStatus)\n      }\n      artist_pastShows: artist(id: $artistID) {\n        ...ArtistShows_artist\n          @arguments(sort: $pastShowsSort, status: $pastShowsStatus)\n      }\n    }\n  `\n)\n"]}]}
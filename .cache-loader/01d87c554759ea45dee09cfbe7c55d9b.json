{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Artsy/Router/Components/ClientRouter.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Artsy/Router/Components/ClientRouter.tsx","mtime":1538078302000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createMockNetworkLayer } from \"../../Relay/createMockNetworkLayer\";\nimport { buildClientApp } from \"../buildClientApp\";\nimport React from \"react\";\nimport { getUser } from \"../../../Utils/getUser\";\nexport var ClientRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClientRouter, _React$Component);\n\n  function ClientRouter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClientRouter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClientRouter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      ClientApp: null\n    });\n\n    return _this;\n  }\n\n  _createClass(ClientRouter, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this$props, routes, initialRoute, historyOptions, initialMatchingMediaQueries, mockResolvers, context, user, _ref, ClientApp;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, routes = _this$props.routes, initialRoute = _this$props.initialRoute, historyOptions = _this$props.historyOptions, initialMatchingMediaQueries = _this$props.initialMatchingMediaQueries, mockResolvers = _this$props.mockResolvers, context = _this$props.context;\n                _context.prev = 1;\n                user = getUser(context && context.user);\n                _context.next = 5;\n                return buildClientApp({\n                  routes: routes,\n                  initialRoute: initialRoute,\n                  history: {\n                    protocol: \"memory\",\n                    options: historyOptions\n                  },\n                  context: _objectSpread({}, context, {\n                    user: user,\n                    initialMatchingMediaQueries: initialMatchingMediaQueries,\n                    relayNetwork: mockResolvers && createMockNetworkLayer(mockResolvers)\n                  })\n                });\n\n              case 5:\n                _ref = _context.sent;\n                ClientApp = _ref.ClientApp;\n                this.setState({\n                  ClientApp: ClientApp\n                });\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(\"ClientRouter\", _context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ClientApp = this.state.ClientApp;\n      return React.createElement(React.Fragment, null, ClientApp && React.createElement(ClientApp, this.props.initialState));\n    }\n  }]);\n\n  return ClientRouter;\n}(React.Component);\n\n_defineProperty(ClientRouter, \"defaultProps\", {\n  initialRoute: \"/\"\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Artsy/Router/Components/ClientRouter.tsx"],"names":["createMockNetworkLayer","buildClientApp","React","getUser","ClientRouter","ClientApp","props","routes","initialRoute","historyOptions","initialMatchingMediaQueries","mockResolvers","context","user","history","protocol","options","relayNetwork","setState","console","error","state","initialState","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT;AACA,SAASC,cAAT;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;AAaA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,oFACU;AACNC,MAAAA,SAAS,EAAE;AADL,KADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAiBQ,KAAKC,KAjBb,EAWMC,MAXN,eAWMA,MAXN,EAYMC,YAZN,eAYMA,YAZN,EAaMC,cAbN,eAaMA,cAbN,EAcMC,2BAdN,eAcMA,2BAdN,EAeMC,aAfN,eAeMA,aAfN,EAgBMC,OAhBN,eAgBMA,OAhBN;AAAA;AAoBYC,gBAAAA,IApBZ,GAoBmBV,OAAO,CAACS,OAAO,IAAIA,OAAO,CAACC,IAApB,CApB1B;AAAA;AAAA,uBAsBkCZ,cAAc,CAAC;AACzCM,kBAAAA,MAAM,EAANA,MADyC;AAEzCC,kBAAAA,YAAY,EAAZA,YAFyC;AAGzCM,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,QAAQ,EAAE,QADH;AAEPC,oBAAAA,OAAO,EAAEP;AAFF,mBAHgC;AAOzCG,kBAAAA,OAAO,oBACFA,OADE;AAELC,oBAAAA,IAAI,EAAJA,IAFK;AAGLH,oBAAAA,2BAA2B,EAA3BA,2BAHK;AAILO,oBAAAA,YAAY,EAAEN,aAAa,IAAIX,sBAAsB,CAACW,aAAD;AAJhD;AAPkC,iBAAD,CAtBhD;;AAAA;AAAA;AAsBcN,gBAAAA,SAtBd,QAsBcA,SAtBd;AAqCM,qBAAKa,QAAL,CAAc;AACZb,kBAAAA,SAAS,EAATA;AADY,iBAAd;AArCN;AAAA;;AAAA;AAAA;AAAA;AAyCMc,gBAAAA,OAAO,CAACC,KAAR,CAAc,cAAd;;AAzCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA6CW;AAAA,UACCf,SADD,GACe,KAAKgB,KADpB,CACChB,SADD;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP,QACGA,SAAS,IAAI,oBAAC,SAAD,EAAe,KAAKC,KAAL,CAAWgB,YAA1B,CADhB,CADF;AAKD;AArDH;;AAAA;AAAA,EAAkCpB,KAAK,CAACqB,SAAxC;;gBAAanB,Y,kBAKW;AACpBI,EAAAA,YAAY,EAAE;AADM,C","sourcesContent":["import { createMockNetworkLayer } from \"Artsy/Relay/createMockNetworkLayer\"\nimport { buildClientApp } from \"Artsy/Router/buildClientApp\"\nimport { ContextProps } from \"Artsy/SystemContext\"\nimport { HistoryOptions } from \"farce\"\nimport { IMocks } from \"graphql-tools/dist/Interfaces\"\nimport React from \"react\"\nimport { getUser } from \"Utils/getUser\"\nimport { MatchingMediaQueries } from \"Utils/Responsive\"\n\ninterface Props {\n  routes: object[]\n  initialMatchingMediaQueries?: MatchingMediaQueries\n  initialRoute?: string\n  initialState?: object\n  historyOptions?: HistoryOptions\n  mockResolvers?: IMocks\n  context?: ContextProps\n}\n\nexport class ClientRouter extends React.Component<Props> {\n  state = {\n    ClientApp: null,\n  }\n\n  static defaultProps = {\n    initialRoute: \"/\",\n  }\n\n  async componentDidMount() {\n    const {\n      routes,\n      initialRoute,\n      historyOptions,\n      initialMatchingMediaQueries,\n      mockResolvers,\n      context,\n    } = this.props\n\n    try {\n      const user = getUser(context && context.user)\n\n      const { ClientApp } = await buildClientApp({\n        routes,\n        initialRoute,\n        history: {\n          protocol: \"memory\",\n          options: historyOptions,\n        },\n        context: {\n          ...context,\n          user,\n          initialMatchingMediaQueries,\n          relayNetwork: mockResolvers && createMockNetworkLayer(mockResolvers),\n        },\n      })\n\n      this.setState({\n        ClientApp,\n      })\n    } catch (error) {\n      console.error(\"ClientRouter\", error)\n    }\n  }\n\n  render() {\n    const { ClientApp } = this.state\n\n    return (\n      <React.Fragment>\n        {ClientApp && <ClientApp {...this.props.initialState} />}\n      </React.Fragment>\n    )\n  }\n}\n"]}]}
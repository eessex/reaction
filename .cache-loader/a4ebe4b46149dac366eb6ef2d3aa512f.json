{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Styleguide/Elements/Grid.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Styleguide/Elements/Grid.tsx","mtime":1532522173000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import * as StyledGrid from \"styled-bootstrap-grid\";\nimport { color, flex, space, textAlign, width } from \"styled-system\";\nexport { media } from \"styled-bootstrap-grid\"; // @ts-ignore\n\nimport styled from \"styled-components\";\nvar DEBUG = false;\nexport var Grid = styled(StyledGrid.Container).withConfig({\n  displayName: \"Grid\",\n  componentId: \"qyt2ah-0\"\n})([\"overflow:hidden;max-width:\", \"px;\", \";\"], function (props) {\n  return props.theme.grid.breakpoints.xl;\n}, space);\nexport var Row = styled(StyledGrid.Row).withConfig({\n  displayName: \"Grid__Row\",\n  componentId: \"qyt2ah-1\"\n})([\"\", \";\", \";\"], color, space);\nexport var Col = styled(StyledGrid.Col).withConfig({\n  displayName: \"Grid__Col\",\n  componentId: \"qyt2ah-2\"\n})([\"\", \";\", \";\", \";\", \";\", \";\", \";\"], color, flex, space, textAlign, width, function () {\n  if (DEBUG) {\n    return \"\\n        border: 1px solid #ddd;\\n      \";\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Styleguide/Elements/Grid.tsx"],"names":["StyledGrid","color","flex","space","textAlign","width","media","styled","DEBUG","Grid","Container","props","theme","grid","breakpoints","xl","Row","Col"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,KAAxC,QAAqD,eAArD;AACA,SAASC,KAAT,QAAsB,uBAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAA6C,mBAA7C;AAEA,IAAMC,KAAK,GAAG,KAAd;AAEA,OAAO,IAAMC,IAAI,GAAGF,MAAM,CAACP,UAAU,CAACU,SAAZ,CAAT;AAAA;AAAA;AAAA,+CAEF,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBC,WAAjB,CAA6BC,EAAjC;AAAA,CAFH,EAGbZ,KAHa,CAAV;AAKP,OAAO,IAAMa,GAAG,GAAGT,MAAM,CAACP,UAAU,CAACgB,GAAZ,CAAT;AAAA;AAAA;AAAA,mBACZf,KADY,EAEZE,KAFY,CAAT;AAIP,OAAO,IAAMc,GAAG,GAAGV,MAAM,CAACP,UAAU,CAACiB,GAAZ,CAAT;AAAA;AAAA;AAAA,uCACZhB,KADY,EAEZC,IAFY,EAGZC,KAHY,EAIZC,SAJY,EAKZC,KALY,EAOZ,YAAM;AACN,MAAIG,KAAJ,EAAW;AACT;AAGD;AACF,CAba,CAAT","sourcesContent":["import * as StyledGrid from \"styled-bootstrap-grid\"\nimport { color, flex, space, textAlign, width } from \"styled-system\"\nexport { media } from \"styled-bootstrap-grid\"\n\n// @ts-ignore\nimport styled, { StyledComponentClass } from \"styled-components\"\n\nconst DEBUG = false\n\nexport const Grid = styled(StyledGrid.Container)`\n  overflow: hidden;\n  max-width: ${props => props.theme.grid.breakpoints.xl}px;\n  ${space};\n`\nexport const Row = styled(StyledGrid.Row)`\n  ${color};\n  ${space};\n`\nexport const Col = styled(StyledGrid.Col)`\n  ${color};\n  ${flex};\n  ${space};\n  ${textAlign};\n  ${width};\n\n  ${() => {\n    if (DEBUG) {\n      return `\n        border: 1px solid #ddd;\n      `\n    }\n  }};\n`\n"]}]}
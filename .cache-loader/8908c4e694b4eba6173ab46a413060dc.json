{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--5-1!/Users/eve/development/reaction/src/Components/Title.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Title.tsx","mtime":1524678459000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1527877289000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Fonts = require(\"../Assets/Fonts\");\n\nvar _Helpers = require(\"./Helpers\");\n\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n    font-size: \", \";\\n  \"], [\"\\n    font-size: \", \";\\n  \"]);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar titleSizes = {\n  xxsmall: \"s15\",\n  small: \"s23\",\n  medium: \"s30\",\n  large: \"s37\",\n  xlarge: \"s50\"\n};\n\nvar Title = function Title(props) {\n  var newProps = _extends({}, props);\n\n  delete newProps.titleSize;\n  return _react.default.createElement(\"div\", newProps, props.children);\n};\n\nvar StyledTitle =\n/*#__PURE__*/\n(0, _styledComponents.default)(Title).withConfig({\n  displayName: \"Title__StyledTitle\",\n  componentId: \"s9fsem3-0\"\n})([\"color:\", \";margin:20px 0;\", \";\", \";\"], function (props) {\n  return props.color;\n}, function (p) {\n  return (0, _Fonts.garamond)(titleSizes[p.titleSize]);\n}, _Helpers.media.sm(_templateObject, titleSizes.small));\nStyledTitle.defaultProps = {\n  titleSize: \"medium\",\n  color: \"inherit\"\n};\nvar _default = StyledTitle;\nexports.default = _default;",{"version":3,"sources":["src/Components/Title.tsx"],"names":["titleSizes","xxsmall","small","medium","large","xlarge","Title","newProps","props","titleSize","children","StyledTitle","color","p","sm","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AASA,IAAMA,aAAa;AACjBC,WAAS,KADQ;AAEjBC,SAAO,KAFU;AAGjBC,UAAQ,KAHS;AAIjBC,SAAO,KAJU;AAKjBC,UAAQ;AALS,CAAnB;;AAQA,IAAMC,QAA+B,SAA/BA,KAA+B,QAAS;AAC5C,MAAMC,wBAA4BC,KAA5B,CAAN;;AACA,SAAOD,SAASE,SAAhB;AAEA,SAAO,oCAASF,QAAT,EAAoBC,MAAME,QAA1B,CAAP;AACD,CALD;;AAOA,IAAMC;AAAA;AAAc,+BAAOL,KAAP,CAAd;AAAA;AAAA;AAAA,4CACK;AAAA,SAASE,MAAMI,KAAf;AAAA,CADL,EAGF;AAAA,SAAK,qBAASZ,WAAWa,EAAEJ,SAAb,CAAT,CAAL;AAAA,CAHE,EAIF,eAAMK,EAJJ,kBAKWd,WAAWE,KALtB,EAAN;AASAS,YAAYI,YAAZ,GAA2B;AACzBN,aAAW,QADc;AAEzBG,SAAO;AAFkB,CAA3B;eAKeD,W","file":"/Users/eve/development/reaction/src/Components/Title.tsx","sourceRoot":"/Users/eve/development/reaction","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { garamond } from \"Assets/Fonts\"\nimport { media } from \"./Helpers\"\n\ntype TitleSize = \"xxsmall\" | \"small\" | \"medium\" | \"large\" | \"xlarge\"\n\ninterface TitleProps extends React.HTMLProps<HTMLDivElement> {\n  titleSize?: TitleSize\n  color?: string\n}\n\nconst titleSizes = {\n  xxsmall: \"s15\",\n  small: \"s23\",\n  medium: \"s30\",\n  large: \"s37\",\n  xlarge: \"s50\",\n}\n\nconst Title: React.SFC<TitleProps> = props => {\n  const newProps: TitleProps = { ...props }\n  delete newProps.titleSize\n\n  return <div {...newProps}>{props.children}</div>\n}\n\nconst StyledTitle = styled(Title)`\n  color: ${props => props.color};\n  margin: 20px 0;\n  ${p => garamond(titleSizes[p.titleSize] as any)};\n  ${media.sm`\n    font-size: ${titleSizes.small};\n  `};\n`\n\nStyledTitle.defaultProps = {\n  titleSize: \"medium\",\n  color: \"inherit\",\n}\n\nexport default StyledTitle\n"]}]}
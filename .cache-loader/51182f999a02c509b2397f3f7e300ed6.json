{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/Genes.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/Genes.tsx","mtime":1537112679000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Sans, Serif, Spacer } from \"@artsy/palette\";\nimport React, { Component } from \"react\";\nimport { createFragmentContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nvar GeneFamily = styled.div.withConfig({\n  displayName: \"Genes__GeneFamily\",\n  componentId: \"s18gtb9u-0\"\n})([\"\"]);\nvar GeneLink = styled.a.withConfig({\n  displayName: \"Genes__GeneLink\",\n  componentId: \"s18gtb9u-1\"\n})([\"display:inline-block;\", \";\"], space);\nexport var Genes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Genes, _Component);\n\n  function Genes() {\n    _classCallCheck(this, Genes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Genes).apply(this, arguments));\n  }\n\n  _createClass(Genes, [{\n    key: \"render\",\n    value: function render() {\n      var FIXME_DOMAIN = \"https://www.artsy.net\";\n      var related = this.props.artist.related;\n      var genes = related.genes;\n\n      if (genes.edges.length === 0) {\n        return null;\n      }\n\n      return React.createElement(GeneFamily, null, React.createElement(Sans, {\n        size: \"2\",\n        weight: \"medium\"\n      }, \"Related Categories\"), React.createElement(Spacer, {\n        mb: 1\n      }), genes.edges.map(function (_ref, index, list) {\n        var gene = _ref.node;\n        var geneDivider = index < list.length - 1 ? \",\" : \"\";\n        return React.createElement(Serif, {\n          size: \"3t\",\n          display: \"inline-block\",\n          key: index,\n          mr: 0.5\n        }, React.createElement(GeneLink, {\n          href: FIXME_DOMAIN + gene.href,\n          className: \"noUnderline\"\n        }, gene.name, geneDivider));\n      }));\n    }\n  }]);\n\n  return Genes;\n}(Component);\nexport var GenesFragmentContainer = createFragmentContainer(Genes, {\n  artist: function artist() {\n    var node = require(\"../../../../../__generated__/Genes_artist.graphql\");\n\n    if (node.hash && node.hash !== \"77c969718be8a858b2f72009ac05dbc7\") {\n      console.error(\"The definition of 'Genes_artist' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../../../../__generated__/Genes_artist.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Artist/Routes/Overview/Components/Genes.tsx"],"names":["Sans","Serif","Spacer","React","Component","createFragmentContainer","graphql","styled","space","GeneFamily","div","GeneLink","a","Genes","FIXME_DOMAIN","related","props","artist","genes","edges","length","map","index","list","gene","node","geneDivider","href","name","GenesFragmentContainer"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,gBAApC;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,aAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,IAAMC,UAAU,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,QAAhB;AACA,IAAMC,QAAQ,GAAGJ,MAAM,CAACK,CAAV;AAAA;AAAA;AAAA,mCAEVJ,KAFU,CAAd;AASA,WAAaK,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AACP,UAAMC,YAAY,GAAG,uBAArB;AADO,UAECC,OAFD,GAEa,KAAKC,KAAL,CAAWC,MAFxB,CAECF,OAFD;AAAA,UAGCG,KAHD,GAGWH,OAHX,CAGCG,KAHD;;AAIP,UAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,eAAO,IAAP;AACD;;AACD,aACE,oBAAC,UAAD,QACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,MAAM,EAAC;AAAtB,8BADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAZ,QAJF,EAKGF,KAAK,CAACC,KAAN,CAAYE,GAAZ,CAAgB,gBAAiBC,KAAjB,EAAwBC,IAAxB,EAAiC;AAAA,YAAxBC,IAAwB,QAA9BC,IAA8B;AAChD,YAAMC,WAAW,GAAGJ,KAAK,GAAGC,IAAI,CAACH,MAAL,GAAc,CAAtB,GAA0B,GAA1B,GAAgC,EAApD;AAEA,eACE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,IAAZ;AAAiB,UAAA,OAAO,EAAC,cAAzB;AAAwC,UAAA,GAAG,EAAEE,KAA7C;AAAoD,UAAA,EAAE,EAAE;AAAxD,WACE,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAER,YAAY,GAAGU,IAAI,CAACG,IAApC;AAA0C,UAAA,SAAS,EAAC;AAApD,WACGH,IAAI,CAACI,IADR,EAEGF,WAFH,CADF,CADF;AAQD,OAXA,CALH,CADF;AAoBD;AA5BH;;AAAA;AAAA,EAA2BtB,SAA3B;AA+BA,OAAO,IAAMyB,sBAAsB,GAAGxB,uBAAuB,CAC3DQ,KAD2D;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAAtD","sourcesContent":["import { Sans, Serif, Spacer } from \"@artsy/palette\"\nimport { Genes_artist } from \"__generated__/Genes_artist.graphql\"\nimport React, { Component } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport { space } from \"styled-system\"\n\nconst GeneFamily = styled.div``\nconst GeneLink = styled.a`\n  display: inline-block;\n  ${space};\n`\n\ninterface Props {\n  artist: Genes_artist\n}\n\nexport class Genes extends Component<Props> {\n  render() {\n    const FIXME_DOMAIN = \"https://www.artsy.net\"\n    const { related } = this.props.artist\n    const { genes } = related\n    if (genes.edges.length === 0) {\n      return null\n    }\n    return (\n      <GeneFamily>\n        <Sans size=\"2\" weight=\"medium\">\n          Related Categories\n        </Sans>\n        <Spacer mb={1} />\n        {genes.edges.map(({ node: gene }, index, list) => {\n          const geneDivider = index < list.length - 1 ? \",\" : \"\"\n\n          return (\n            <Serif size=\"3t\" display=\"inline-block\" key={index} mr={0.5}>\n              <GeneLink href={FIXME_DOMAIN + gene.href} className=\"noUnderline\">\n                {gene.name}\n                {geneDivider}\n              </GeneLink>\n            </Serif>\n          )\n        })}\n      </GeneFamily>\n    )\n  }\n}\n\nexport const GenesFragmentContainer = createFragmentContainer(\n  Genes,\n  graphql`\n    fragment Genes_artist on Artist {\n      related {\n        genes {\n          edges {\n            node {\n              href\n              name\n            }\n          }\n        }\n      }\n    }\n  `\n)\n"]}]}
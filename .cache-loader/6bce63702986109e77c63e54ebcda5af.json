{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Buttons/MultiStateButton.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Buttons/MultiStateButton.tsx","mtime":1529688806000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport colors from \"../../Assets/Colors\";\nimport { avantgarde } from \"../../Assets/Fonts\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { block } from \"../Helpers\";\nexport var MultiButtonState;\n\n(function (MultiButtonState) {\n  MultiButtonState[\"Default\"] = \"Default\";\n  MultiButtonState[\"Highlighted\"] = \"Highlighted\";\n})(MultiButtonState || (MultiButtonState = {}));\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      // TODO Do we really need to pass an opaque object along or do we know which props should be passed along?\n      var newProps = _objectSpread({}, this.props);\n\n      delete newProps.state;\n      delete newProps.block;\n      delete newProps.icon;\n      return this.props.href ? React.createElement(\"a\", _extends({\n        className: this.props.className\n      }, newProps), this.props.icon, React.createElement(\"span\", null, this.props.children)) : React.createElement(\"button\", _extends({\n        className: this.props.className\n      }, newProps), this.props.icon, React.createElement(\"span\", null, this.props.children));\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\n_defineProperty(Button, \"defaultProps\", void 0);\n\nexport var StyledButton = styled(Button).withConfig({\n  displayName: \"MultiStateButton__StyledButton\",\n  componentId: \"s13cx4t7-0\"\n})([\"\", \";background:\", \";color:\", \";border:\", \";display:inline-flex;flex-direction:column;align-items:center;justify-content:center;padding:15px 30px;font-size:13px;line-height:1;outline:0;transition:background-color 0.25s,color 0.25s;margin:10px;box-sizing:border-box;text-decoration:none;&:hover:not(:disabled){color:white;cursor:pointer;background:\", \";}\", \";\"], avantgarde(\"s13\"), function (props) {\n  if (props.state === MultiButtonState.Highlighted) return \"black\";\n  return \"white\";\n}, function (props) {\n  if (props.disabled) return \"rgba(0,0,0,0.5)\";\n  if (props.state === MultiButtonState.Highlighted) return \"white\";\n  return \"black\";\n}, function (props) {\n  if (props.state !== MultiButtonState.Default) return \"none\";\n  return \"solid 1px \".concat(colors.grayRegular);\n}, colors.purpleRegular, block());\nStyledButton.defaultProps = {\n  state: MultiButtonState.Default,\n  block: false\n};\nexport default StyledButton;",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Buttons/MultiStateButton.tsx"],"names":["colors","avantgarde","React","styled","block","MultiButtonState","Button","newProps","props","state","icon","href","className","children","Component","StyledButton","Highlighted","disabled","Default","grayRegular","purpleRegular","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP;AACA,SAASC,UAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT;AASA,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,KAAAA,gB;;IAKNC,M;;;;;;;;;;;;;6BAGkB;AACpB;AACA,UAAMC,QAAa,qBAAQ,KAAKC,KAAb,CAAnB;;AACA,aAAOD,QAAQ,CAACE,KAAhB;AACA,aAAOF,QAAQ,CAACH,KAAhB;AACA,aAAOG,QAAQ,CAACG,IAAhB;AAEA,aAAO,KAAKF,KAAL,CAAWG,IAAX,GACL;AAAG,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI;AAAzB,SAAwCL,QAAxC,GACG,KAAKC,KAAL,CAAWE,IADd,EAEE,kCAAO,KAAKF,KAAL,CAAWK,QAAlB,CAFF,CADK,GAML;AAAQ,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWI;AAA9B,SAA6CL,QAA7C,GACG,KAAKC,KAAL,CAAWE,IADd,EAEE,kCAAO,KAAKF,KAAL,CAAWK,QAAlB,CAFF,CANF;AAWD;;;;EArBkBX,KAAK,CAACY,S;;gBAArBR,M;;AAwBN,OAAO,IAAMS,YAAY,GAAGZ,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,+WACrBL,UAAU,CAAC,KAAD,CADW,EAET,UAAAO,KAAK,EAAI;AACrB,MAAIA,KAAK,CAACC,KAAN,KAAgBJ,gBAAgB,CAACW,WAArC,EAAkD,OAAO,OAAP;AAClD,SAAO,OAAP;AACD,CALsB,EAMd,UAAAR,KAAK,EAAI;AAChB,MAAIA,KAAK,CAACS,QAAV,EAAoB,OAAO,iBAAP;AACpB,MAAIT,KAAK,CAACC,KAAN,KAAgBJ,gBAAgB,CAACW,WAArC,EAAkD,OAAO,OAAP;AAClD,SAAO,OAAP;AACD,CAVsB,EAWb,UAAAR,KAAK,EAAI;AACjB,MAAIA,KAAK,CAACC,KAAN,KAAgBJ,gBAAgB,CAACa,OAArC,EAA8C,OAAO,MAAP;AAC9C,6BAAoBlB,MAAM,CAACmB,WAA3B;AACD,CAdsB,EA+BPnB,MAAM,CAACoB,aA/BA,EAkCrBhB,KAAK,EAlCgB,CAAlB;AAqCPW,YAAY,CAACM,YAAb,GAA4B;AAC1BZ,EAAAA,KAAK,EAAEJ,gBAAgB,CAACa,OADE;AAE1Bd,EAAAA,KAAK,EAAE;AAFmB,CAA5B;AAKA,eAAeW,YAAf","sourcesContent":["import colors from \"Assets/Colors\"\nimport { avantgarde } from \"Assets/Fonts\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { block } from \"../Helpers\"\nimport { IconProps } from \"../Icon\"\n\nexport interface ButtonProps extends React.HTMLProps<Button> {\n  state?: MultiButtonState\n  block?: boolean\n  icon?: React.ReactElement<IconProps>\n}\n\nexport enum MultiButtonState {\n  Default = \"Default\",\n  Highlighted = \"Highlighted\",\n}\n\nclass Button extends React.Component<ButtonProps, any> {\n  public static defaultProps: ButtonProps\n\n  render(): JSX.Element {\n    // TODO Do we really need to pass an opaque object along or do we know which props should be passed along?\n    const newProps: any = { ...this.props }\n    delete newProps.state\n    delete newProps.block\n    delete newProps.icon\n\n    return this.props.href ? (\n      <a className={this.props.className} {...newProps}>\n        {this.props.icon}\n        <span>{this.props.children}</span>\n      </a>\n    ) : (\n      <button className={this.props.className} {...newProps}>\n        {this.props.icon}\n        <span>{this.props.children}</span>\n      </button>\n    )\n  }\n}\n\nexport const StyledButton = styled(Button)`\n  ${avantgarde(\"s13\")};\n  background: ${props => {\n    if (props.state === MultiButtonState.Highlighted) return \"black\"\n    return \"white\"\n  }};\n  color: ${props => {\n    if (props.disabled) return \"rgba(0,0,0,0.5)\"\n    if (props.state === MultiButtonState.Highlighted) return \"white\"\n    return \"black\"\n  }};\n  border: ${props => {\n    if (props.state !== MultiButtonState.Default) return \"none\"\n    return `solid 1px ${colors.grayRegular}`\n  }};\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 15px 30px;\n  font-size: 13px;\n  line-height: 1;\n  outline: 0;\n  transition: background-color 0.25s, color 0.25s;\n  margin: 10px;\n  box-sizing: border-box;\n  text-decoration: none;\n\n  &:hover:not(:disabled) {\n    color: white;\n    cursor: pointer;\n    background: ${colors.purpleRegular};\n  }\n\n  ${block()};\n`\n\nStyledButton.defaultProps = {\n  state: MultiButtonState.Default,\n  block: false,\n}\n\nexport default StyledButton\n"]}]}
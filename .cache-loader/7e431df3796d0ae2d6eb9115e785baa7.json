{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Apps/Collect/routes.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Apps/Collect/routes.tsx","mtime":1538070271000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { graphql } from \"react-relay\";\nimport AnalyticsProvider from \"./AnalyticsProvider\";\nimport { CollectAppFragmentContainer as CollectApp } from \"./CollectApp\";\nexport var routes = [{\n  path: \"/collect/:medium?\",\n  Component: CollectApp,\n  query: function query() {\n    var node = require(\"../../__generated__/routes_CollectAppQuery.graphql\");\n\n    if (node.hash && node.hash !== \"6396d2cf1e94b58a22bcbe1b2be80d12\") {\n      console.error(\"The definition of 'routes_CollectAppQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/routes_CollectAppQuery.graphql\");\n  },\n  render: function render(_ref) {\n    var props = _ref.props,\n        Component = _ref.Component;\n\n    if (!props) {\n      return null;\n    }\n\n    return React.createElement(AnalyticsProvider, _extends({}, props, {\n      Component: Component\n    }));\n  },\n  prepareVariables: function prepareVariables(params, props) {\n    var initialFilterState = props.location ? props.location.query : {};\n\n    if (params.medium) {\n      initialFilterState.medium = params.medium;\n\n      if (props.location.query) {\n        props.location.query.medium = params.medium;\n      }\n    }\n\n    return _objectSpread({}, initialFilterState, params);\n  }\n}];",{"version":3,"sources":["/Users/eve/development/reaction/src/Apps/Collect/routes.tsx"],"names":["React","graphql","AnalyticsProvider","CollectAppFragmentContainer","CollectApp","routes","path","Component","query","render","props","prepareVariables","params","initialFilterState","location","medium"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP;AACA,SAASC,2BAA2B,IAAIC,UAAxC;AAEA,OAAO,IAAMC,MAAM,GAAG,CACpB;AACEC,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,SAAS,EAAEH,UAFb;AAGEI,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,GAHP;AA+BEC,EAAAA,MAAM,EAAE,sBAA0B;AAAA,QAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,QAAhBH,SAAgB,QAAhBA,SAAgB;;AAChC,QAAI,CAACG,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,WAAO,oBAAC,iBAAD,eAAuBA,KAAvB;AAA8B,MAAA,SAAS,EAAEH;AAAzC,OAAP;AACD,GArCH;AAsCEI,EAAAA,gBAAgB,EAAE,0BAACC,MAAD,EAASF,KAAT,EAAmB;AACnC,QAAMG,kBAAkB,GAAGH,KAAK,CAACI,QAAN,GAAiBJ,KAAK,CAACI,QAAN,CAAeN,KAAhC,GAAwC,EAAnE;;AACA,QAAII,MAAM,CAACG,MAAX,EAAmB;AACjBF,MAAAA,kBAAkB,CAACE,MAAnB,GAA4BH,MAAM,CAACG,MAAnC;;AACA,UAAIL,KAAK,CAACI,QAAN,CAAeN,KAAnB,EAA0B;AACxBE,QAAAA,KAAK,CAACI,QAAN,CAAeN,KAAf,CAAqBO,MAArB,GAA8BH,MAAM,CAACG,MAArC;AACD;AACF;;AACD,6BAAYF,kBAAZ,EAAmCD,MAAnC;AACD;AA/CH,CADoB,CAAf","sourcesContent":["import React from \"react\"\nimport { graphql } from \"react-relay\"\nimport AnalyticsProvider from \"./AnalyticsProvider\"\nimport { CollectAppFragmentContainer as CollectApp } from \"./CollectApp\"\n\nexport const routes = [\n  {\n    path: \"/collect/:medium?\",\n    Component: CollectApp,\n    query: graphql`\n      query routes_CollectAppQuery(\n        $medium: String\n        $major_periods: [String]\n        $partner_id: ID\n        $for_sale: Boolean\n        $sort: String\n        $at_auction: Boolean\n        $ecommerce: Boolean\n        $inquireable_only: Boolean\n        $price_range: String\n      ) {\n        viewer {\n          ...CollectApp_viewer\n            @arguments(\n              medium: $medium\n              major_periods: $major_periods\n              partner_id: $partner_id\n              for_sale: $for_sale\n              sort: $sort\n              at_auction: $at_auction\n              ecommerce: $ecommerce\n              inquireable_only: $inquireable_only\n              price_range: $price_range\n            )\n        }\n      }\n    `,\n    render: ({ props, Component }) => {\n      if (!props) {\n        return null\n      }\n\n      return <AnalyticsProvider {...props} Component={Component} />\n    },\n    prepareVariables: (params, props) => {\n      const initialFilterState = props.location ? props.location.query : {}\n      if (params.medium) {\n        initialFilterState.medium = params.medium\n        if (props.location.query) {\n          props.location.query.medium = params.medium\n        }\n      }\n      return { ...initialFilterState, ...params }\n    },\n  },\n]\n"]}]}
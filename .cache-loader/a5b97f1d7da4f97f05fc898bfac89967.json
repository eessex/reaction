{"remainingRequest":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/eve/development/reaction/src/Components/Tag/TagArtworksContent.tsx","dependencies":[{"path":"/Users/eve/development/reaction/src/Components/Tag/TagArtworksContent.tsx","mtime":1535727435000},{"path":"/Users/eve/development/reaction/.babelrc","mtime":1537112679000},{"path":"/Users/eve/development/reaction/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/eve/development/reaction/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { createPaginationContainer, graphql } from \"react-relay\";\nimport styled from \"styled-components\";\nimport ArtworkGrid from \"../ArtworkGrid\";\nimport Spinner from \"../Spinner\";\nvar SpinnerContainer = styled.div.withConfig({\n  displayName: \"TagArtworksContent__SpinnerContainer\",\n  componentId: \"rjw7d4-0\"\n})([\"width:100%;height:100px;position:relative;\"]);\nvar PageSize = 10;\nexport var TagArtworksContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TagArtworksContent, _React$Component);\n\n  function TagArtworksContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TagArtworksContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TagArtworksContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"finishedPaginatingWithError\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      loading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(TagArtworksContent, [{\n    key: \"loadMoreArtworks\",\n    value: function loadMoreArtworks() {\n      var _this2 = this;\n\n      var hasMore = this.props.filtered_artworks.artworks.pageInfo.hasNextPage;\n      var origLength = this.props.filtered_artworks.artworks.edges.length;\n\n      if (hasMore && !this.state.loading && !this.finishedPaginatingWithError) {\n        this.setState({\n          loading: true\n        }, function () {\n          _this2.props.relay.loadMore(PageSize, function (error) {\n            if (error) {\n              console.error(error);\n            }\n\n            var newLength = _this2.props.filtered_artworks.artworks.edges.length;\n            var newHasMore = _this2.props.filtered_artworks.artworks.pageInfo.hasNextPage;\n\n            if (newLength - origLength < PageSize && newHasMore) {\n              console.error(\"Total count inconsistent with actual records returned for tag: \".concat(_this2.props.tagID));\n              _this2.finishedPaginatingWithError = true;\n            }\n\n            _this2.setState({\n              loading: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", null, React.createElement(ArtworkGrid, {\n        artworks: this.props.filtered_artworks.artworks,\n        columnCount: 4,\n        itemMargin: 40,\n        onLoadMore: function onLoadMore() {\n          return _this3.loadMoreArtworks();\n        }\n      }), React.createElement(SpinnerContainer, null, this.state.loading ? React.createElement(Spinner, null) : \"\"));\n    }\n  }]);\n\n  return TagArtworksContent;\n}(React.Component);\nexport default createPaginationContainer(TagArtworksContent, {\n  filtered_artworks: function filtered_artworks() {\n    var node = require(\"../../__generated__/TagArtworksContent_filtered_artworks.graphql\");\n\n    if (node.hash && node.hash !== \"599690948d2873b58b17f44515d12fab\") {\n      console.error(\"The definition of 'TagArtworksContent_filtered_artworks' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/TagArtworksContent_filtered_artworks.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.filtered_artworks.artworks;\n  },\n  getFragmentVariables: function getFragmentVariables(prevVars, totalCount) {\n    return _objectSpread({}, prevVars, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(props, _ref, fragmentVariables) {\n    var count = _ref.count,\n        cursor = _ref.cursor;\n    return _objectSpread({}, fragmentVariables, {\n      count: count,\n      cursor: cursor,\n      filteredArtworksNodeID: props.filtered_artworks.__id\n    });\n  },\n  query: function query() {\n    var node = require(\"../../__generated__/TagArtworksContentQuery.graphql\");\n\n    if (node.hash && node.hash !== \"33f06979a056635012f1d3e4839b3761\") {\n      console.error(\"The definition of 'TagArtworksContentQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"../../__generated__/TagArtworksContentQuery.graphql\");\n  }\n});",{"version":3,"sources":["/Users/eve/development/reaction/src/Components/Tag/TagArtworksContent.tsx"],"names":["React","createPaginationContainer","graphql","styled","ArtworkGrid","Spinner","SpinnerContainer","div","PageSize","TagArtworksContent","loading","hasMore","props","filtered_artworks","artworks","pageInfo","hasNextPage","origLength","edges","length","state","finishedPaginatingWithError","setState","relay","loadMore","error","console","newLength","newHasMore","tagID","loadMoreArtworks","Component","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","fragmentVariables","cursor","filteredArtworksNodeID","__id","query"],"mappings":"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","sourcesContent":["import { TagArtworksContent_filtered_artworks } from \"__generated__/TagArtworksContent_filtered_artworks.graphql\"\nimport React from \"react\"\nimport {\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\nimport ArtworkGrid from \"../ArtworkGrid\"\nimport Spinner from \"../Spinner\"\n\nexport interface Props {\n  filtered_artworks: TagArtworksContent_filtered_artworks\n  relay: RelayPaginationProp\n  tagID: string\n}\n\nexport interface State {\n  loading: boolean\n}\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`\n\nconst PageSize = 10\n\nexport class TagArtworksContent extends React.Component<Props, State> {\n  private finishedPaginatingWithError = false\n\n  state = {\n    loading: false,\n  }\n\n  loadMoreArtworks() {\n    const hasMore = this.props.filtered_artworks.artworks.pageInfo.hasNextPage\n    const origLength = this.props.filtered_artworks.artworks.edges.length\n    if (hasMore && !this.state.loading && !this.finishedPaginatingWithError) {\n      this.setState({ loading: true }, () => {\n        this.props.relay.loadMore(PageSize, error => {\n          if (error) {\n            console.error(error)\n          }\n          const newLength = this.props.filtered_artworks.artworks.edges.length\n          const newHasMore = this.props.filtered_artworks.artworks.pageInfo\n            .hasNextPage\n          if (newLength - origLength < PageSize && newHasMore) {\n            console.error(\n              `Total count inconsistent with actual records returned for tag: ${\n                this.props.tagID\n              }`\n            )\n            this.finishedPaginatingWithError = true\n          }\n          this.setState({ loading: false })\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ArtworkGrid\n          artworks={this.props.filtered_artworks.artworks}\n          columnCount={4}\n          itemMargin={40}\n          onLoadMore={() => this.loadMoreArtworks()}\n        />\n        <SpinnerContainer>\n          {this.state.loading ? <Spinner /> : \"\"}\n        </SpinnerContainer>\n      </div>\n    )\n  }\n}\n\nexport default createPaginationContainer(\n  TagArtworksContent,\n  {\n    filtered_artworks: graphql`\n      fragment TagArtworksContent_filtered_artworks on FilterArtworks\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\", defaultValue: \"\" }\n        ) {\n        __id\n        artworks: artworks_connection(\n          first: $count\n          after: $cursor\n          sort: $sort\n        ) @connection(key: \"TagArtworksContent_filtered_artworks\") {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          ...ArtworkGrid_artworks\n          edges {\n            node {\n              __id\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.filtered_artworks.artworks\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return {\n        ...prevVars,\n        count: totalCount,\n      }\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n        filteredArtworksNodeID: props.filtered_artworks.__id,\n      }\n    },\n    query: graphql`\n      query TagArtworksContentQuery(\n        $filteredArtworksNodeID: ID!\n        $count: Int!\n        $cursor: String\n        $sort: String\n      ) {\n        node(__id: $filteredArtworksNodeID) {\n          ...TagArtworksContent_filtered_artworks\n            @arguments(count: $count, cursor: $cursor)\n        }\n      }\n    `,\n  }\n)\n"]}]}